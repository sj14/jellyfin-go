/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.8.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DeviceIdentification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceIdentification{}

// DeviceIdentification struct for DeviceIdentification
type DeviceIdentification struct {
	// Gets or sets the name of the friendly.
	FriendlyName *string `json:"FriendlyName,omitempty"`
	// Gets or sets the model number.
	ModelNumber *string `json:"ModelNumber,omitempty"`
	// Gets or sets the serial number.
	SerialNumber *string `json:"SerialNumber,omitempty"`
	// Gets or sets the name of the model.
	ModelName *string `json:"ModelName,omitempty"`
	// Gets or sets the model description.
	ModelDescription *string `json:"ModelDescription,omitempty"`
	// Gets or sets the model URL.
	ModelUrl *string `json:"ModelUrl,omitempty"`
	// Gets or sets the manufacturer.
	Manufacturer *string `json:"Manufacturer,omitempty"`
	// Gets or sets the manufacturer URL.
	ManufacturerUrl *string `json:"ManufacturerUrl,omitempty"`
	// Gets or sets the headers.
	Headers []HttpHeaderInfo `json:"Headers,omitempty"`
}

// NewDeviceIdentification instantiates a new DeviceIdentification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceIdentification() *DeviceIdentification {
	this := DeviceIdentification{}
	return &this
}

// NewDeviceIdentificationWithDefaults instantiates a new DeviceIdentification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceIdentificationWithDefaults() *DeviceIdentification {
	this := DeviceIdentification{}
	return &this
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *DeviceIdentification) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *DeviceIdentification) HasFriendlyName() bool {
	if o != nil && !IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *DeviceIdentification) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetModelNumber returns the ModelNumber field value if set, zero value otherwise.
func (o *DeviceIdentification) GetModelNumber() string {
	if o == nil || IsNil(o.ModelNumber) {
		var ret string
		return ret
	}
	return *o.ModelNumber
}

// GetModelNumberOk returns a tuple with the ModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ModelNumber) {
		return nil, false
	}
	return o.ModelNumber, true
}

// HasModelNumber returns a boolean if a field has been set.
func (o *DeviceIdentification) HasModelNumber() bool {
	if o != nil && !IsNil(o.ModelNumber) {
		return true
	}

	return false
}

// SetModelNumber gets a reference to the given string and assigns it to the ModelNumber field.
func (o *DeviceIdentification) SetModelNumber(v string) {
	o.ModelNumber = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *DeviceIdentification) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *DeviceIdentification) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *DeviceIdentification) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *DeviceIdentification) GetModelName() string {
	if o == nil || IsNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *DeviceIdentification) HasModelName() bool {
	if o != nil && !IsNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *DeviceIdentification) SetModelName(v string) {
	o.ModelName = &v
}

// GetModelDescription returns the ModelDescription field value if set, zero value otherwise.
func (o *DeviceIdentification) GetModelDescription() string {
	if o == nil || IsNil(o.ModelDescription) {
		var ret string
		return ret
	}
	return *o.ModelDescription
}

// GetModelDescriptionOk returns a tuple with the ModelDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetModelDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ModelDescription) {
		return nil, false
	}
	return o.ModelDescription, true
}

// HasModelDescription returns a boolean if a field has been set.
func (o *DeviceIdentification) HasModelDescription() bool {
	if o != nil && !IsNil(o.ModelDescription) {
		return true
	}

	return false
}

// SetModelDescription gets a reference to the given string and assigns it to the ModelDescription field.
func (o *DeviceIdentification) SetModelDescription(v string) {
	o.ModelDescription = &v
}

// GetModelUrl returns the ModelUrl field value if set, zero value otherwise.
func (o *DeviceIdentification) GetModelUrl() string {
	if o == nil || IsNil(o.ModelUrl) {
		var ret string
		return ret
	}
	return *o.ModelUrl
}

// GetModelUrlOk returns a tuple with the ModelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetModelUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ModelUrl) {
		return nil, false
	}
	return o.ModelUrl, true
}

// HasModelUrl returns a boolean if a field has been set.
func (o *DeviceIdentification) HasModelUrl() bool {
	if o != nil && !IsNil(o.ModelUrl) {
		return true
	}

	return false
}

// SetModelUrl gets a reference to the given string and assigns it to the ModelUrl field.
func (o *DeviceIdentification) SetModelUrl(v string) {
	o.ModelUrl = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *DeviceIdentification) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *DeviceIdentification) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *DeviceIdentification) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetManufacturerUrl returns the ManufacturerUrl field value if set, zero value otherwise.
func (o *DeviceIdentification) GetManufacturerUrl() string {
	if o == nil || IsNil(o.ManufacturerUrl) {
		var ret string
		return ret
	}
	return *o.ManufacturerUrl
}

// GetManufacturerUrlOk returns a tuple with the ManufacturerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetManufacturerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerUrl) {
		return nil, false
	}
	return o.ManufacturerUrl, true
}

// HasManufacturerUrl returns a boolean if a field has been set.
func (o *DeviceIdentification) HasManufacturerUrl() bool {
	if o != nil && !IsNil(o.ManufacturerUrl) {
		return true
	}

	return false
}

// SetManufacturerUrl gets a reference to the given string and assigns it to the ManufacturerUrl field.
func (o *DeviceIdentification) SetManufacturerUrl(v string) {
	o.ManufacturerUrl = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *DeviceIdentification) GetHeaders() []HttpHeaderInfo {
	if o == nil || IsNil(o.Headers) {
		var ret []HttpHeaderInfo
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIdentification) GetHeadersOk() ([]HttpHeaderInfo, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *DeviceIdentification) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []HttpHeaderInfo and assigns it to the Headers field.
func (o *DeviceIdentification) SetHeaders(v []HttpHeaderInfo) {
	o.Headers = v
}

func (o DeviceIdentification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceIdentification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FriendlyName) {
		toSerialize["FriendlyName"] = o.FriendlyName
	}
	if !IsNil(o.ModelNumber) {
		toSerialize["ModelNumber"] = o.ModelNumber
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["SerialNumber"] = o.SerialNumber
	}
	if !IsNil(o.ModelName) {
		toSerialize["ModelName"] = o.ModelName
	}
	if !IsNil(o.ModelDescription) {
		toSerialize["ModelDescription"] = o.ModelDescription
	}
	if !IsNil(o.ModelUrl) {
		toSerialize["ModelUrl"] = o.ModelUrl
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["Manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.ManufacturerUrl) {
		toSerialize["ManufacturerUrl"] = o.ManufacturerUrl
	}
	if !IsNil(o.Headers) {
		toSerialize["Headers"] = o.Headers
	}
	return toSerialize, nil
}

type NullableDeviceIdentification struct {
	value *DeviceIdentification
	isSet bool
}

func (v NullableDeviceIdentification) Get() *DeviceIdentification {
	return v.value
}

func (v *NullableDeviceIdentification) Set(val *DeviceIdentification) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceIdentification) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceIdentification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceIdentification(val *DeviceIdentification) *NullableDeviceIdentification {
	return &NullableDeviceIdentification{value: val, isSet: true}
}

func (v NullableDeviceIdentification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceIdentification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


