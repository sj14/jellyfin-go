/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SeriesTimerInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesTimerInfoDto{}

// SeriesTimerInfoDto Class SeriesTimerInfoDto.
type SeriesTimerInfoDto struct {
	// Gets or sets the Id of the recording.
	Id NullableString `json:"Id,omitempty"`
	Type NullableString `json:"Type,omitempty"`
	// Gets or sets the server identifier.
	ServerId NullableString `json:"ServerId,omitempty"`
	// Gets or sets the external identifier.
	ExternalId NullableString `json:"ExternalId,omitempty"`
	// Gets or sets the channel id of the recording.
	ChannelId *string `json:"ChannelId,omitempty"`
	// Gets or sets the external channel identifier.
	ExternalChannelId NullableString `json:"ExternalChannelId,omitempty"`
	// Gets or sets the channel name of the recording.
	ChannelName NullableString `json:"ChannelName,omitempty"`
	ChannelPrimaryImageTag NullableString `json:"ChannelPrimaryImageTag,omitempty"`
	// Gets or sets the program identifier.
	ProgramId NullableString `json:"ProgramId,omitempty"`
	// Gets or sets the external program identifier.
	ExternalProgramId NullableString `json:"ExternalProgramId,omitempty"`
	// Gets or sets the name of the recording.
	Name NullableString `json:"Name,omitempty"`
	// Gets or sets the description of the recording.
	Overview NullableString `json:"Overview,omitempty"`
	// Gets or sets the start date of the recording, in UTC.
	StartDate *time.Time `json:"StartDate,omitempty"`
	// Gets or sets the end date of the recording, in UTC.
	EndDate *time.Time `json:"EndDate,omitempty"`
	// Gets or sets the name of the service.
	ServiceName NullableString `json:"ServiceName,omitempty"`
	// Gets or sets the priority.
	Priority *int32 `json:"Priority,omitempty"`
	// Gets or sets the pre padding seconds.
	PrePaddingSeconds *int32 `json:"PrePaddingSeconds,omitempty"`
	// Gets or sets the post padding seconds.
	PostPaddingSeconds *int32 `json:"PostPaddingSeconds,omitempty"`
	// Gets or sets a value indicating whether this instance is pre padding required.
	IsPrePaddingRequired *bool `json:"IsPrePaddingRequired,omitempty"`
	// Gets or sets the Id of the Parent that has a backdrop if the item does not have one.
	ParentBackdropItemId NullableString `json:"ParentBackdropItemId,omitempty"`
	// Gets or sets the parent backdrop image tags.
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	// Gets or sets a value indicating whether this instance is post padding required.
	IsPostPaddingRequired *bool `json:"IsPostPaddingRequired,omitempty"`
	KeepUntil *KeepUntil `json:"KeepUntil,omitempty"`
	// Gets or sets a value indicating whether [record any time].
	RecordAnyTime *bool `json:"RecordAnyTime,omitempty"`
	SkipEpisodesInLibrary *bool `json:"SkipEpisodesInLibrary,omitempty"`
	// Gets or sets a value indicating whether [record any channel].
	RecordAnyChannel *bool `json:"RecordAnyChannel,omitempty"`
	KeepUpTo *int32 `json:"KeepUpTo,omitempty"`
	// Gets or sets a value indicating whether [record new only].
	RecordNewOnly *bool `json:"RecordNewOnly,omitempty"`
	// Gets or sets the days.
	Days []DayOfWeek `json:"Days,omitempty"`
	// Gets or sets the day pattern.
	DayPattern NullableDayPattern `json:"DayPattern,omitempty"`
	// Gets or sets the image tags.
	ImageTags map[string]string `json:"ImageTags,omitempty"`
	// Gets or sets the parent thumb item id.
	ParentThumbItemId NullableString `json:"ParentThumbItemId,omitempty"`
	// Gets or sets the parent thumb image tag.
	ParentThumbImageTag NullableString `json:"ParentThumbImageTag,omitempty"`
	// Gets or sets the parent primary image item identifier.
	ParentPrimaryImageItemId NullableString `json:"ParentPrimaryImageItemId,omitempty"`
	// Gets or sets the parent primary image tag.
	ParentPrimaryImageTag NullableString `json:"ParentPrimaryImageTag,omitempty"`
}

// NewSeriesTimerInfoDto instantiates a new SeriesTimerInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesTimerInfoDto() *SeriesTimerInfoDto {
	this := SeriesTimerInfoDto{}
	return &this
}

// NewSeriesTimerInfoDtoWithDefaults instantiates a new SeriesTimerInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesTimerInfoDtoWithDefaults() *SeriesTimerInfoDto {
	this := SeriesTimerInfoDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SeriesTimerInfoDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SeriesTimerInfoDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetId() {
	o.Id.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *SeriesTimerInfoDto) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *SeriesTimerInfoDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetType() {
	o.Type.Unset()
}

// GetServerId returns the ServerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerId.Get()
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerId.Get(), o.ServerId.IsSet()
}

// HasServerId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasServerId() bool {
	if o != nil && o.ServerId.IsSet() {
		return true
	}

	return false
}

// SetServerId gets a reference to the given NullableString and assigns it to the ServerId field.
func (o *SeriesTimerInfoDto) SetServerId(v string) {
	o.ServerId.Set(&v)
}
// SetServerIdNil sets the value for ServerId to be an explicit nil
func (o *SeriesTimerInfoDto) SetServerIdNil() {
	o.ServerId.Set(nil)
}

// UnsetServerId ensures that no value is present for ServerId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetServerId() {
	o.ServerId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *SeriesTimerInfoDto) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *SeriesTimerInfoDto) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *SeriesTimerInfoDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetExternalChannelId returns the ExternalChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetExternalChannelId() string {
	if o == nil || IsNil(o.ExternalChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalChannelId.Get()
}

// GetExternalChannelIdOk returns a tuple with the ExternalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetExternalChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalChannelId.Get(), o.ExternalChannelId.IsSet()
}

// HasExternalChannelId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasExternalChannelId() bool {
	if o != nil && o.ExternalChannelId.IsSet() {
		return true
	}

	return false
}

// SetExternalChannelId gets a reference to the given NullableString and assigns it to the ExternalChannelId field.
func (o *SeriesTimerInfoDto) SetExternalChannelId(v string) {
	o.ExternalChannelId.Set(&v)
}
// SetExternalChannelIdNil sets the value for ExternalChannelId to be an explicit nil
func (o *SeriesTimerInfoDto) SetExternalChannelIdNil() {
	o.ExternalChannelId.Set(nil)
}

// UnsetExternalChannelId ensures that no value is present for ExternalChannelId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetExternalChannelId() {
	o.ExternalChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *SeriesTimerInfoDto) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *SeriesTimerInfoDto) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag.Get()
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelPrimaryImageTag.Get(), o.ChannelPrimaryImageTag.IsSet()
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasChannelPrimaryImageTag() bool {
	if o != nil && o.ChannelPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given NullableString and assigns it to the ChannelPrimaryImageTag field.
func (o *SeriesTimerInfoDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag.Set(&v)
}
// SetChannelPrimaryImageTagNil sets the value for ChannelPrimaryImageTag to be an explicit nil
func (o *SeriesTimerInfoDto) SetChannelPrimaryImageTagNil() {
	o.ChannelPrimaryImageTag.Set(nil)
}

// UnsetChannelPrimaryImageTag ensures that no value is present for ChannelPrimaryImageTag, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetChannelPrimaryImageTag() {
	o.ChannelPrimaryImageTag.Unset()
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId.Get()) {
		var ret string
		return ret
	}
	return *o.ProgramId.Get()
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramId.Get(), o.ProgramId.IsSet()
}

// HasProgramId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasProgramId() bool {
	if o != nil && o.ProgramId.IsSet() {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given NullableString and assigns it to the ProgramId field.
func (o *SeriesTimerInfoDto) SetProgramId(v string) {
	o.ProgramId.Set(&v)
}
// SetProgramIdNil sets the value for ProgramId to be an explicit nil
func (o *SeriesTimerInfoDto) SetProgramIdNil() {
	o.ProgramId.Set(nil)
}

// UnsetProgramId ensures that no value is present for ProgramId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetProgramId() {
	o.ProgramId.Unset()
}

// GetExternalProgramId returns the ExternalProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetExternalProgramId() string {
	if o == nil || IsNil(o.ExternalProgramId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalProgramId.Get()
}

// GetExternalProgramIdOk returns a tuple with the ExternalProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetExternalProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalProgramId.Get(), o.ExternalProgramId.IsSet()
}

// HasExternalProgramId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasExternalProgramId() bool {
	if o != nil && o.ExternalProgramId.IsSet() {
		return true
	}

	return false
}

// SetExternalProgramId gets a reference to the given NullableString and assigns it to the ExternalProgramId field.
func (o *SeriesTimerInfoDto) SetExternalProgramId(v string) {
	o.ExternalProgramId.Set(&v)
}
// SetExternalProgramIdNil sets the value for ExternalProgramId to be an explicit nil
func (o *SeriesTimerInfoDto) SetExternalProgramIdNil() {
	o.ExternalProgramId.Set(nil)
}

// UnsetExternalProgramId ensures that no value is present for ExternalProgramId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetExternalProgramId() {
	o.ExternalProgramId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SeriesTimerInfoDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SeriesTimerInfoDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetName() {
	o.Name.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *SeriesTimerInfoDto) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *SeriesTimerInfoDto) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetOverview() {
	o.Overview.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *SeriesTimerInfoDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *SeriesTimerInfoDto) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceName.Get()
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceName.Get(), o.ServiceName.IsSet()
}

// HasServiceName returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasServiceName() bool {
	if o != nil && o.ServiceName.IsSet() {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given NullableString and assigns it to the ServiceName field.
func (o *SeriesTimerInfoDto) SetServiceName(v string) {
	o.ServiceName.Set(&v)
}
// SetServiceNameNil sets the value for ServiceName to be an explicit nil
func (o *SeriesTimerInfoDto) SetServiceNameNil() {
	o.ServiceName.Set(nil)
}

// UnsetServiceName ensures that no value is present for ServiceName, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetServiceName() {
	o.ServiceName.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *SeriesTimerInfoDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrePaddingSeconds returns the PrePaddingSeconds field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetPrePaddingSeconds() int32 {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PrePaddingSeconds
}

// GetPrePaddingSecondsOk returns a tuple with the PrePaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetPrePaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		return nil, false
	}
	return o.PrePaddingSeconds, true
}

// HasPrePaddingSeconds returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasPrePaddingSeconds() bool {
	if o != nil && !IsNil(o.PrePaddingSeconds) {
		return true
	}

	return false
}

// SetPrePaddingSeconds gets a reference to the given int32 and assigns it to the PrePaddingSeconds field.
func (o *SeriesTimerInfoDto) SetPrePaddingSeconds(v int32) {
	o.PrePaddingSeconds = &v
}

// GetPostPaddingSeconds returns the PostPaddingSeconds field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetPostPaddingSeconds() int32 {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PostPaddingSeconds
}

// GetPostPaddingSecondsOk returns a tuple with the PostPaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetPostPaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		return nil, false
	}
	return o.PostPaddingSeconds, true
}

// HasPostPaddingSeconds returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasPostPaddingSeconds() bool {
	if o != nil && !IsNil(o.PostPaddingSeconds) {
		return true
	}

	return false
}

// SetPostPaddingSeconds gets a reference to the given int32 and assigns it to the PostPaddingSeconds field.
func (o *SeriesTimerInfoDto) SetPostPaddingSeconds(v int32) {
	o.PostPaddingSeconds = &v
}

// GetIsPrePaddingRequired returns the IsPrePaddingRequired field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetIsPrePaddingRequired() bool {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPrePaddingRequired
}

// GetIsPrePaddingRequiredOk returns a tuple with the IsPrePaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetIsPrePaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		return nil, false
	}
	return o.IsPrePaddingRequired, true
}

// HasIsPrePaddingRequired returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasIsPrePaddingRequired() bool {
	if o != nil && !IsNil(o.IsPrePaddingRequired) {
		return true
	}

	return false
}

// SetIsPrePaddingRequired gets a reference to the given bool and assigns it to the IsPrePaddingRequired field.
func (o *SeriesTimerInfoDto) SetIsPrePaddingRequired(v bool) {
	o.IsPrePaddingRequired = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId.Get()
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBackdropItemId.Get(), o.ParentBackdropItemId.IsSet()
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentBackdropItemId() bool {
	if o != nil && o.ParentBackdropItemId.IsSet() {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given NullableString and assigns it to the ParentBackdropItemId field.
func (o *SeriesTimerInfoDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId.Set(&v)
}
// SetParentBackdropItemIdNil sets the value for ParentBackdropItemId to be an explicit nil
func (o *SeriesTimerInfoDto) SetParentBackdropItemIdNil() {
	o.ParentBackdropItemId.Set(nil)
}

// UnsetParentBackdropItemId ensures that no value is present for ParentBackdropItemId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetParentBackdropItemId() {
	o.ParentBackdropItemId.Unset()
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentBackdropImageTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *SeriesTimerInfoDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetIsPostPaddingRequired returns the IsPostPaddingRequired field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetIsPostPaddingRequired() bool {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPostPaddingRequired
}

// GetIsPostPaddingRequiredOk returns a tuple with the IsPostPaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetIsPostPaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		return nil, false
	}
	return o.IsPostPaddingRequired, true
}

// HasIsPostPaddingRequired returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasIsPostPaddingRequired() bool {
	if o != nil && !IsNil(o.IsPostPaddingRequired) {
		return true
	}

	return false
}

// SetIsPostPaddingRequired gets a reference to the given bool and assigns it to the IsPostPaddingRequired field.
func (o *SeriesTimerInfoDto) SetIsPostPaddingRequired(v bool) {
	o.IsPostPaddingRequired = &v
}

// GetKeepUntil returns the KeepUntil field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetKeepUntil() KeepUntil {
	if o == nil || IsNil(o.KeepUntil) {
		var ret KeepUntil
		return ret
	}
	return *o.KeepUntil
}

// GetKeepUntilOk returns a tuple with the KeepUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetKeepUntilOk() (*KeepUntil, bool) {
	if o == nil || IsNil(o.KeepUntil) {
		return nil, false
	}
	return o.KeepUntil, true
}

// HasKeepUntil returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasKeepUntil() bool {
	if o != nil && !IsNil(o.KeepUntil) {
		return true
	}

	return false
}

// SetKeepUntil gets a reference to the given KeepUntil and assigns it to the KeepUntil field.
func (o *SeriesTimerInfoDto) SetKeepUntil(v KeepUntil) {
	o.KeepUntil = &v
}

// GetRecordAnyTime returns the RecordAnyTime field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetRecordAnyTime() bool {
	if o == nil || IsNil(o.RecordAnyTime) {
		var ret bool
		return ret
	}
	return *o.RecordAnyTime
}

// GetRecordAnyTimeOk returns a tuple with the RecordAnyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetRecordAnyTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyTime) {
		return nil, false
	}
	return o.RecordAnyTime, true
}

// HasRecordAnyTime returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasRecordAnyTime() bool {
	if o != nil && !IsNil(o.RecordAnyTime) {
		return true
	}

	return false
}

// SetRecordAnyTime gets a reference to the given bool and assigns it to the RecordAnyTime field.
func (o *SeriesTimerInfoDto) SetRecordAnyTime(v bool) {
	o.RecordAnyTime = &v
}

// GetSkipEpisodesInLibrary returns the SkipEpisodesInLibrary field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetSkipEpisodesInLibrary() bool {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		var ret bool
		return ret
	}
	return *o.SkipEpisodesInLibrary
}

// GetSkipEpisodesInLibraryOk returns a tuple with the SkipEpisodesInLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetSkipEpisodesInLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		return nil, false
	}
	return o.SkipEpisodesInLibrary, true
}

// HasSkipEpisodesInLibrary returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasSkipEpisodesInLibrary() bool {
	if o != nil && !IsNil(o.SkipEpisodesInLibrary) {
		return true
	}

	return false
}

// SetSkipEpisodesInLibrary gets a reference to the given bool and assigns it to the SkipEpisodesInLibrary field.
func (o *SeriesTimerInfoDto) SetSkipEpisodesInLibrary(v bool) {
	o.SkipEpisodesInLibrary = &v
}

// GetRecordAnyChannel returns the RecordAnyChannel field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetRecordAnyChannel() bool {
	if o == nil || IsNil(o.RecordAnyChannel) {
		var ret bool
		return ret
	}
	return *o.RecordAnyChannel
}

// GetRecordAnyChannelOk returns a tuple with the RecordAnyChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetRecordAnyChannelOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyChannel) {
		return nil, false
	}
	return o.RecordAnyChannel, true
}

// HasRecordAnyChannel returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasRecordAnyChannel() bool {
	if o != nil && !IsNil(o.RecordAnyChannel) {
		return true
	}

	return false
}

// SetRecordAnyChannel gets a reference to the given bool and assigns it to the RecordAnyChannel field.
func (o *SeriesTimerInfoDto) SetRecordAnyChannel(v bool) {
	o.RecordAnyChannel = &v
}

// GetKeepUpTo returns the KeepUpTo field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetKeepUpTo() int32 {
	if o == nil || IsNil(o.KeepUpTo) {
		var ret int32
		return ret
	}
	return *o.KeepUpTo
}

// GetKeepUpToOk returns a tuple with the KeepUpTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetKeepUpToOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepUpTo) {
		return nil, false
	}
	return o.KeepUpTo, true
}

// HasKeepUpTo returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasKeepUpTo() bool {
	if o != nil && !IsNil(o.KeepUpTo) {
		return true
	}

	return false
}

// SetKeepUpTo gets a reference to the given int32 and assigns it to the KeepUpTo field.
func (o *SeriesTimerInfoDto) SetKeepUpTo(v int32) {
	o.KeepUpTo = &v
}

// GetRecordNewOnly returns the RecordNewOnly field value if set, zero value otherwise.
func (o *SeriesTimerInfoDto) GetRecordNewOnly() bool {
	if o == nil || IsNil(o.RecordNewOnly) {
		var ret bool
		return ret
	}
	return *o.RecordNewOnly
}

// GetRecordNewOnlyOk returns a tuple with the RecordNewOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesTimerInfoDto) GetRecordNewOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordNewOnly) {
		return nil, false
	}
	return o.RecordNewOnly, true
}

// HasRecordNewOnly returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasRecordNewOnly() bool {
	if o != nil && !IsNil(o.RecordNewOnly) {
		return true
	}

	return false
}

// SetRecordNewOnly gets a reference to the given bool and assigns it to the RecordNewOnly field.
func (o *SeriesTimerInfoDto) SetRecordNewOnly(v bool) {
	o.RecordNewOnly = &v
}

// GetDays returns the Days field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetDays() []DayOfWeek {
	if o == nil {
		var ret []DayOfWeek
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetDaysOk() ([]DayOfWeek, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []DayOfWeek and assigns it to the Days field.
func (o *SeriesTimerInfoDto) SetDays(v []DayOfWeek) {
	o.Days = v
}

// GetDayPattern returns the DayPattern field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetDayPattern() DayPattern {
	if o == nil || IsNil(o.DayPattern.Get()) {
		var ret DayPattern
		return ret
	}
	return *o.DayPattern.Get()
}

// GetDayPatternOk returns a tuple with the DayPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetDayPatternOk() (*DayPattern, bool) {
	if o == nil {
		return nil, false
	}
	return o.DayPattern.Get(), o.DayPattern.IsSet()
}

// HasDayPattern returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasDayPattern() bool {
	if o != nil && o.DayPattern.IsSet() {
		return true
	}

	return false
}

// SetDayPattern gets a reference to the given NullableDayPattern and assigns it to the DayPattern field.
func (o *SeriesTimerInfoDto) SetDayPattern(v DayPattern) {
	o.DayPattern.Set(&v)
}
// SetDayPatternNil sets the value for DayPattern to be an explicit nil
func (o *SeriesTimerInfoDto) SetDayPatternNil() {
	o.DayPattern.Set(nil)
}

// UnsetDayPattern ensures that no value is present for DayPattern, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetDayPattern() {
	o.DayPattern.Unset()
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetImageTags() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return &o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *SeriesTimerInfoDto) SetImageTags(v map[string]string) {
	o.ImageTags = v
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId.Get()
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentThumbItemId.Get(), o.ParentThumbItemId.IsSet()
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentThumbItemId() bool {
	if o != nil && o.ParentThumbItemId.IsSet() {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given NullableString and assigns it to the ParentThumbItemId field.
func (o *SeriesTimerInfoDto) SetParentThumbItemId(v string) {
	o.ParentThumbItemId.Set(&v)
}
// SetParentThumbItemIdNil sets the value for ParentThumbItemId to be an explicit nil
func (o *SeriesTimerInfoDto) SetParentThumbItemIdNil() {
	o.ParentThumbItemId.Set(nil)
}

// UnsetParentThumbItemId ensures that no value is present for ParentThumbItemId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetParentThumbItemId() {
	o.ParentThumbItemId.Unset()
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag.Get()
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentThumbImageTag.Get(), o.ParentThumbImageTag.IsSet()
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentThumbImageTag() bool {
	if o != nil && o.ParentThumbImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given NullableString and assigns it to the ParentThumbImageTag field.
func (o *SeriesTimerInfoDto) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag.Set(&v)
}
// SetParentThumbImageTagNil sets the value for ParentThumbImageTag to be an explicit nil
func (o *SeriesTimerInfoDto) SetParentThumbImageTagNil() {
	o.ParentThumbImageTag.Set(nil)
}

// UnsetParentThumbImageTag ensures that no value is present for ParentThumbImageTag, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetParentThumbImageTag() {
	o.ParentThumbImageTag.Unset()
}

// GetParentPrimaryImageItemId returns the ParentPrimaryImageItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentPrimaryImageItemId() string {
	if o == nil || IsNil(o.ParentPrimaryImageItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageItemId.Get()
}

// GetParentPrimaryImageItemIdOk returns a tuple with the ParentPrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentPrimaryImageItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPrimaryImageItemId.Get(), o.ParentPrimaryImageItemId.IsSet()
}

// HasParentPrimaryImageItemId returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentPrimaryImageItemId() bool {
	if o != nil && o.ParentPrimaryImageItemId.IsSet() {
		return true
	}

	return false
}

// SetParentPrimaryImageItemId gets a reference to the given NullableString and assigns it to the ParentPrimaryImageItemId field.
func (o *SeriesTimerInfoDto) SetParentPrimaryImageItemId(v string) {
	o.ParentPrimaryImageItemId.Set(&v)
}
// SetParentPrimaryImageItemIdNil sets the value for ParentPrimaryImageItemId to be an explicit nil
func (o *SeriesTimerInfoDto) SetParentPrimaryImageItemIdNil() {
	o.ParentPrimaryImageItemId.Set(nil)
}

// UnsetParentPrimaryImageItemId ensures that no value is present for ParentPrimaryImageItemId, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetParentPrimaryImageItemId() {
	o.ParentPrimaryImageItemId.Unset()
}

// GetParentPrimaryImageTag returns the ParentPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesTimerInfoDto) GetParentPrimaryImageTag() string {
	if o == nil || IsNil(o.ParentPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageTag.Get()
}

// GetParentPrimaryImageTagOk returns a tuple with the ParentPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesTimerInfoDto) GetParentPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPrimaryImageTag.Get(), o.ParentPrimaryImageTag.IsSet()
}

// HasParentPrimaryImageTag returns a boolean if a field has been set.
func (o *SeriesTimerInfoDto) HasParentPrimaryImageTag() bool {
	if o != nil && o.ParentPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentPrimaryImageTag gets a reference to the given NullableString and assigns it to the ParentPrimaryImageTag field.
func (o *SeriesTimerInfoDto) SetParentPrimaryImageTag(v string) {
	o.ParentPrimaryImageTag.Set(&v)
}
// SetParentPrimaryImageTagNil sets the value for ParentPrimaryImageTag to be an explicit nil
func (o *SeriesTimerInfoDto) SetParentPrimaryImageTagNil() {
	o.ParentPrimaryImageTag.Set(nil)
}

// UnsetParentPrimaryImageTag ensures that no value is present for ParentPrimaryImageTag, not even an explicit nil
func (o *SeriesTimerInfoDto) UnsetParentPrimaryImageTag() {
	o.ParentPrimaryImageTag.Unset()
}

func (o SeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesTimerInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Type.IsSet() {
		toSerialize["Type"] = o.Type.Get()
	}
	if o.ServerId.IsSet() {
		toSerialize["ServerId"] = o.ServerId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["ExternalId"] = o.ExternalId.Get()
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if o.ExternalChannelId.IsSet() {
		toSerialize["ExternalChannelId"] = o.ExternalChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.ChannelPrimaryImageTag.IsSet() {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag.Get()
	}
	if o.ProgramId.IsSet() {
		toSerialize["ProgramId"] = o.ProgramId.Get()
	}
	if o.ExternalProgramId.IsSet() {
		toSerialize["ExternalProgramId"] = o.ExternalProgramId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["Overview"] = o.Overview.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if o.ServiceName.IsSet() {
		toSerialize["ServiceName"] = o.ServiceName.Get()
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.PrePaddingSeconds) {
		toSerialize["PrePaddingSeconds"] = o.PrePaddingSeconds
	}
	if !IsNil(o.PostPaddingSeconds) {
		toSerialize["PostPaddingSeconds"] = o.PostPaddingSeconds
	}
	if !IsNil(o.IsPrePaddingRequired) {
		toSerialize["IsPrePaddingRequired"] = o.IsPrePaddingRequired
	}
	if o.ParentBackdropItemId.IsSet() {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId.Get()
	}
	if o.ParentBackdropImageTags != nil {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if !IsNil(o.IsPostPaddingRequired) {
		toSerialize["IsPostPaddingRequired"] = o.IsPostPaddingRequired
	}
	if !IsNil(o.KeepUntil) {
		toSerialize["KeepUntil"] = o.KeepUntil
	}
	if !IsNil(o.RecordAnyTime) {
		toSerialize["RecordAnyTime"] = o.RecordAnyTime
	}
	if !IsNil(o.SkipEpisodesInLibrary) {
		toSerialize["SkipEpisodesInLibrary"] = o.SkipEpisodesInLibrary
	}
	if !IsNil(o.RecordAnyChannel) {
		toSerialize["RecordAnyChannel"] = o.RecordAnyChannel
	}
	if !IsNil(o.KeepUpTo) {
		toSerialize["KeepUpTo"] = o.KeepUpTo
	}
	if !IsNil(o.RecordNewOnly) {
		toSerialize["RecordNewOnly"] = o.RecordNewOnly
	}
	if o.Days != nil {
		toSerialize["Days"] = o.Days
	}
	if o.DayPattern.IsSet() {
		toSerialize["DayPattern"] = o.DayPattern.Get()
	}
	if o.ImageTags != nil {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if o.ParentThumbItemId.IsSet() {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId.Get()
	}
	if o.ParentThumbImageTag.IsSet() {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag.Get()
	}
	if o.ParentPrimaryImageItemId.IsSet() {
		toSerialize["ParentPrimaryImageItemId"] = o.ParentPrimaryImageItemId.Get()
	}
	if o.ParentPrimaryImageTag.IsSet() {
		toSerialize["ParentPrimaryImageTag"] = o.ParentPrimaryImageTag.Get()
	}
	return toSerialize, nil
}

type NullableSeriesTimerInfoDto struct {
	value *SeriesTimerInfoDto
	isSet bool
}

func (v NullableSeriesTimerInfoDto) Get() *SeriesTimerInfoDto {
	return v.value
}

func (v *NullableSeriesTimerInfoDto) Set(val *SeriesTimerInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesTimerInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesTimerInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesTimerInfoDto(val *SeriesTimerInfoDto) *NullableSeriesTimerInfoDto {
	return &NullableSeriesTimerInfoDto{value: val, isSet: true}
}

func (v NullableSeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesTimerInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


