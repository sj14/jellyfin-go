/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.11.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LyricLineCue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LyricLineCue{}

// LyricLineCue LyricLineCue model, holds information about the timing of words within a LyricLine.
type LyricLineCue struct {
	// Gets the start character index of the cue.
	Position *int32 `json:"Position,omitempty"`
	// Gets the end character index of the cue.
	EndPosition *int32 `json:"EndPosition,omitempty"`
	// Gets the timestamp the lyric is synced to in ticks.
	Start *int64 `json:"Start,omitempty"`
	// Gets the end timestamp the lyric is synced to in ticks.
	End NullableInt64 `json:"End,omitempty"`
}

// NewLyricLineCue instantiates a new LyricLineCue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLyricLineCue() *LyricLineCue {
	this := LyricLineCue{}
	return &this
}

// NewLyricLineCueWithDefaults instantiates a new LyricLineCue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLyricLineCueWithDefaults() *LyricLineCue {
	this := LyricLineCue{}
	return &this
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *LyricLineCue) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LyricLineCue) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *LyricLineCue) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *LyricLineCue) SetPosition(v int32) {
	o.Position = &v
}

// GetEndPosition returns the EndPosition field value if set, zero value otherwise.
func (o *LyricLineCue) GetEndPosition() int32 {
	if o == nil || IsNil(o.EndPosition) {
		var ret int32
		return ret
	}
	return *o.EndPosition
}

// GetEndPositionOk returns a tuple with the EndPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LyricLineCue) GetEndPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.EndPosition) {
		return nil, false
	}
	return o.EndPosition, true
}

// HasEndPosition returns a boolean if a field has been set.
func (o *LyricLineCue) HasEndPosition() bool {
	if o != nil && !IsNil(o.EndPosition) {
		return true
	}

	return false
}

// SetEndPosition gets a reference to the given int32 and assigns it to the EndPosition field.
func (o *LyricLineCue) SetEndPosition(v int32) {
	o.EndPosition = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *LyricLineCue) GetStart() int64 {
	if o == nil || IsNil(o.Start) {
		var ret int64
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LyricLineCue) GetStartOk() (*int64, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *LyricLineCue) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int64 and assigns it to the Start field.
func (o *LyricLineCue) SetStart(v int64) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LyricLineCue) GetEnd() int64 {
	if o == nil || IsNil(o.End.Get()) {
		var ret int64
		return ret
	}
	return *o.End.Get()
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LyricLineCue) GetEndOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.End.Get(), o.End.IsSet()
}

// HasEnd returns a boolean if a field has been set.
func (o *LyricLineCue) HasEnd() bool {
	if o != nil && o.End.IsSet() {
		return true
	}

	return false
}

// SetEnd gets a reference to the given NullableInt64 and assigns it to the End field.
func (o *LyricLineCue) SetEnd(v int64) {
	o.End.Set(&v)
}
// SetEndNil sets the value for End to be an explicit nil
func (o *LyricLineCue) SetEndNil() {
	o.End.Set(nil)
}

// UnsetEnd ensures that no value is present for End, not even an explicit nil
func (o *LyricLineCue) UnsetEnd() {
	o.End.Unset()
}

func (o LyricLineCue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LyricLineCue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Position) {
		toSerialize["Position"] = o.Position
	}
	if !IsNil(o.EndPosition) {
		toSerialize["EndPosition"] = o.EndPosition
	}
	if !IsNil(o.Start) {
		toSerialize["Start"] = o.Start
	}
	if o.End.IsSet() {
		toSerialize["End"] = o.End.Get()
	}
	return toSerialize, nil
}

type NullableLyricLineCue struct {
	value *LyricLineCue
	isSet bool
}

func (v NullableLyricLineCue) Get() *LyricLineCue {
	return v.value
}

func (v *NullableLyricLineCue) Set(val *LyricLineCue) {
	v.value = val
	v.isSet = true
}

func (v NullableLyricLineCue) IsSet() bool {
	return v.isSet
}

func (v *NullableLyricLineCue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLyricLineCue(val *LyricLineCue) *NullableLyricLineCue {
	return &NullableLyricLineCue{value: val, isSet: true}
}

func (v NullableLyricLineCue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLyricLineCue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


