/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.8.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the NotificationsSummaryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsSummaryDto{}

// NotificationsSummaryDto The notification summary DTO.
type NotificationsSummaryDto struct {
	// Gets or sets the number of unread notifications.
	UnreadCount *int32 `json:"UnreadCount,omitempty"`
	// Gets or sets the maximum unread notification level.
	MaxUnreadNotificationLevel NullableNotificationLevel `json:"MaxUnreadNotificationLevel,omitempty"`
}

// NewNotificationsSummaryDto instantiates a new NotificationsSummaryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsSummaryDto() *NotificationsSummaryDto {
	this := NotificationsSummaryDto{}
	return &this
}

// NewNotificationsSummaryDtoWithDefaults instantiates a new NotificationsSummaryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsSummaryDtoWithDefaults() *NotificationsSummaryDto {
	this := NotificationsSummaryDto{}
	return &this
}

// GetUnreadCount returns the UnreadCount field value if set, zero value otherwise.
func (o *NotificationsSummaryDto) GetUnreadCount() int32 {
	if o == nil || IsNil(o.UnreadCount) {
		var ret int32
		return ret
	}
	return *o.UnreadCount
}

// GetUnreadCountOk returns a tuple with the UnreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSummaryDto) GetUnreadCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnreadCount) {
		return nil, false
	}
	return o.UnreadCount, true
}

// HasUnreadCount returns a boolean if a field has been set.
func (o *NotificationsSummaryDto) HasUnreadCount() bool {
	if o != nil && !IsNil(o.UnreadCount) {
		return true
	}

	return false
}

// SetUnreadCount gets a reference to the given int32 and assigns it to the UnreadCount field.
func (o *NotificationsSummaryDto) SetUnreadCount(v int32) {
	o.UnreadCount = &v
}

// GetMaxUnreadNotificationLevel returns the MaxUnreadNotificationLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationsSummaryDto) GetMaxUnreadNotificationLevel() NotificationLevel {
	if o == nil || IsNil(o.MaxUnreadNotificationLevel.Get()) {
		var ret NotificationLevel
		return ret
	}
	return *o.MaxUnreadNotificationLevel.Get()
}

// GetMaxUnreadNotificationLevelOk returns a tuple with the MaxUnreadNotificationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationsSummaryDto) GetMaxUnreadNotificationLevelOk() (*NotificationLevel, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxUnreadNotificationLevel.Get(), o.MaxUnreadNotificationLevel.IsSet()
}

// HasMaxUnreadNotificationLevel returns a boolean if a field has been set.
func (o *NotificationsSummaryDto) HasMaxUnreadNotificationLevel() bool {
	if o != nil && o.MaxUnreadNotificationLevel.IsSet() {
		return true
	}

	return false
}

// SetMaxUnreadNotificationLevel gets a reference to the given NullableNotificationLevel and assigns it to the MaxUnreadNotificationLevel field.
func (o *NotificationsSummaryDto) SetMaxUnreadNotificationLevel(v NotificationLevel) {
	o.MaxUnreadNotificationLevel.Set(&v)
}
// SetMaxUnreadNotificationLevelNil sets the value for MaxUnreadNotificationLevel to be an explicit nil
func (o *NotificationsSummaryDto) SetMaxUnreadNotificationLevelNil() {
	o.MaxUnreadNotificationLevel.Set(nil)
}

// UnsetMaxUnreadNotificationLevel ensures that no value is present for MaxUnreadNotificationLevel, not even an explicit nil
func (o *NotificationsSummaryDto) UnsetMaxUnreadNotificationLevel() {
	o.MaxUnreadNotificationLevel.Unset()
}

func (o NotificationsSummaryDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsSummaryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UnreadCount) {
		toSerialize["UnreadCount"] = o.UnreadCount
	}
	if o.MaxUnreadNotificationLevel.IsSet() {
		toSerialize["MaxUnreadNotificationLevel"] = o.MaxUnreadNotificationLevel.Get()
	}
	return toSerialize, nil
}

type NullableNotificationsSummaryDto struct {
	value *NotificationsSummaryDto
	isSet bool
}

func (v NullableNotificationsSummaryDto) Get() *NotificationsSummaryDto {
	return v.value
}

func (v *NullableNotificationsSummaryDto) Set(val *NotificationsSummaryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsSummaryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsSummaryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsSummaryDto(val *NotificationsSummaryDto) *NullableNotificationsSummaryDto {
	return &NullableNotificationsSummaryDto{value: val, isSet: true}
}

func (v NullableNotificationsSummaryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsSummaryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


