/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.11.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ParentalRatingScore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentalRatingScore{}

// ParentalRatingScore A class representing an parental rating score.
type ParentalRatingScore struct {
	// Gets or sets the score.
	Score *int32 `json:"score,omitempty"`
	// Gets or sets the sub score.
	SubScore NullableInt32 `json:"subScore,omitempty"`
}

// NewParentalRatingScore instantiates a new ParentalRatingScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentalRatingScore() *ParentalRatingScore {
	this := ParentalRatingScore{}
	return &this
}

// NewParentalRatingScoreWithDefaults instantiates a new ParentalRatingScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentalRatingScoreWithDefaults() *ParentalRatingScore {
	this := ParentalRatingScore{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *ParentalRatingScore) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalRatingScore) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *ParentalRatingScore) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *ParentalRatingScore) SetScore(v int32) {
	o.Score = &v
}

// GetSubScore returns the SubScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ParentalRatingScore) GetSubScore() int32 {
	if o == nil || IsNil(o.SubScore.Get()) {
		var ret int32
		return ret
	}
	return *o.SubScore.Get()
}

// GetSubScoreOk returns a tuple with the SubScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ParentalRatingScore) GetSubScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubScore.Get(), o.SubScore.IsSet()
}

// HasSubScore returns a boolean if a field has been set.
func (o *ParentalRatingScore) HasSubScore() bool {
	if o != nil && o.SubScore.IsSet() {
		return true
	}

	return false
}

// SetSubScore gets a reference to the given NullableInt32 and assigns it to the SubScore field.
func (o *ParentalRatingScore) SetSubScore(v int32) {
	o.SubScore.Set(&v)
}
// SetSubScoreNil sets the value for SubScore to be an explicit nil
func (o *ParentalRatingScore) SetSubScoreNil() {
	o.SubScore.Set(nil)
}

// UnsetSubScore ensures that no value is present for SubScore, not even an explicit nil
func (o *ParentalRatingScore) UnsetSubScore() {
	o.SubScore.Unset()
}

func (o ParentalRatingScore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentalRatingScore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if o.SubScore.IsSet() {
		toSerialize["subScore"] = o.SubScore.Get()
	}
	return toSerialize, nil
}

type NullableParentalRatingScore struct {
	value *ParentalRatingScore
	isSet bool
}

func (v NullableParentalRatingScore) Get() *ParentalRatingScore {
	return v.value
}

func (v *NullableParentalRatingScore) Set(val *ParentalRatingScore) {
	v.value = val
	v.isSet = true
}

func (v NullableParentalRatingScore) IsSet() bool {
	return v.isSet
}

func (v *NullableParentalRatingScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentalRatingScore(val *ParentalRatingScore) *NullableParentalRatingScore {
	return &NullableParentalRatingScore{value: val, isSet: true}
}

func (v NullableParentalRatingScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentalRatingScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


