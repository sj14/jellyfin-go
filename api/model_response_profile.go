/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.8.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ResponseProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseProfile{}

// ResponseProfile struct for ResponseProfile
type ResponseProfile struct {
	Container NullableString `json:"Container,omitempty"`
	AudioCodec NullableString `json:"AudioCodec,omitempty"`
	VideoCodec NullableString `json:"VideoCodec,omitempty"`
	Type *DlnaProfileType `json:"Type,omitempty"`
	OrgPn NullableString `json:"OrgPn,omitempty"`
	MimeType NullableString `json:"MimeType,omitempty"`
	Conditions []ProfileCondition `json:"Conditions,omitempty"`
}

// NewResponseProfile instantiates a new ResponseProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseProfile() *ResponseProfile {
	this := ResponseProfile{}
	return &this
}

// NewResponseProfileWithDefaults instantiates a new ResponseProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseProfileWithDefaults() *ResponseProfile {
	this := ResponseProfile{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetContainer() string {
	if o == nil || IsNil(o.Container.Get()) {
		var ret string
		return ret
	}
	return *o.Container.Get()
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Container.Get(), o.Container.IsSet()
}

// HasContainer returns a boolean if a field has been set.
func (o *ResponseProfile) HasContainer() bool {
	if o != nil && o.Container.IsSet() {
		return true
	}

	return false
}

// SetContainer gets a reference to the given NullableString and assigns it to the Container field.
func (o *ResponseProfile) SetContainer(v string) {
	o.Container.Set(&v)
}
// SetContainerNil sets the value for Container to be an explicit nil
func (o *ResponseProfile) SetContainerNil() {
	o.Container.Set(nil)
}

// UnsetContainer ensures that no value is present for Container, not even an explicit nil
func (o *ResponseProfile) UnsetContainer() {
	o.Container.Unset()
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetAudioCodec() string {
	if o == nil || IsNil(o.AudioCodec.Get()) {
		var ret string
		return ret
	}
	return *o.AudioCodec.Get()
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetAudioCodecOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudioCodec.Get(), o.AudioCodec.IsSet()
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *ResponseProfile) HasAudioCodec() bool {
	if o != nil && o.AudioCodec.IsSet() {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given NullableString and assigns it to the AudioCodec field.
func (o *ResponseProfile) SetAudioCodec(v string) {
	o.AudioCodec.Set(&v)
}
// SetAudioCodecNil sets the value for AudioCodec to be an explicit nil
func (o *ResponseProfile) SetAudioCodecNil() {
	o.AudioCodec.Set(nil)
}

// UnsetAudioCodec ensures that no value is present for AudioCodec, not even an explicit nil
func (o *ResponseProfile) UnsetAudioCodec() {
	o.AudioCodec.Unset()
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetVideoCodec() string {
	if o == nil || IsNil(o.VideoCodec.Get()) {
		var ret string
		return ret
	}
	return *o.VideoCodec.Get()
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetVideoCodecOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoCodec.Get(), o.VideoCodec.IsSet()
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *ResponseProfile) HasVideoCodec() bool {
	if o != nil && o.VideoCodec.IsSet() {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given NullableString and assigns it to the VideoCodec field.
func (o *ResponseProfile) SetVideoCodec(v string) {
	o.VideoCodec.Set(&v)
}
// SetVideoCodecNil sets the value for VideoCodec to be an explicit nil
func (o *ResponseProfile) SetVideoCodecNil() {
	o.VideoCodec.Set(nil)
}

// UnsetVideoCodec ensures that no value is present for VideoCodec, not even an explicit nil
func (o *ResponseProfile) UnsetVideoCodec() {
	o.VideoCodec.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponseProfile) GetType() DlnaProfileType {
	if o == nil || IsNil(o.Type) {
		var ret DlnaProfileType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProfile) GetTypeOk() (*DlnaProfileType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponseProfile) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given DlnaProfileType and assigns it to the Type field.
func (o *ResponseProfile) SetType(v DlnaProfileType) {
	o.Type = &v
}

// GetOrgPn returns the OrgPn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetOrgPn() string {
	if o == nil || IsNil(o.OrgPn.Get()) {
		var ret string
		return ret
	}
	return *o.OrgPn.Get()
}

// GetOrgPnOk returns a tuple with the OrgPn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetOrgPnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrgPn.Get(), o.OrgPn.IsSet()
}

// HasOrgPn returns a boolean if a field has been set.
func (o *ResponseProfile) HasOrgPn() bool {
	if o != nil && o.OrgPn.IsSet() {
		return true
	}

	return false
}

// SetOrgPn gets a reference to the given NullableString and assigns it to the OrgPn field.
func (o *ResponseProfile) SetOrgPn(v string) {
	o.OrgPn.Set(&v)
}
// SetOrgPnNil sets the value for OrgPn to be an explicit nil
func (o *ResponseProfile) SetOrgPnNil() {
	o.OrgPn.Set(nil)
}

// UnsetOrgPn ensures that no value is present for OrgPn, not even an explicit nil
func (o *ResponseProfile) UnsetOrgPn() {
	o.OrgPn.Unset()
}

// GetMimeType returns the MimeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetMimeType() string {
	if o == nil || IsNil(o.MimeType.Get()) {
		var ret string
		return ret
	}
	return *o.MimeType.Get()
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MimeType.Get(), o.MimeType.IsSet()
}

// HasMimeType returns a boolean if a field has been set.
func (o *ResponseProfile) HasMimeType() bool {
	if o != nil && o.MimeType.IsSet() {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given NullableString and assigns it to the MimeType field.
func (o *ResponseProfile) SetMimeType(v string) {
	o.MimeType.Set(&v)
}
// SetMimeTypeNil sets the value for MimeType to be an explicit nil
func (o *ResponseProfile) SetMimeTypeNil() {
	o.MimeType.Set(nil)
}

// UnsetMimeType ensures that no value is present for MimeType, not even an explicit nil
func (o *ResponseProfile) UnsetMimeType() {
	o.MimeType.Unset()
}

// GetConditions returns the Conditions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProfile) GetConditions() []ProfileCondition {
	if o == nil {
		var ret []ProfileCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProfile) GetConditionsOk() ([]ProfileCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ResponseProfile) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ProfileCondition and assigns it to the Conditions field.
func (o *ResponseProfile) SetConditions(v []ProfileCondition) {
	o.Conditions = v
}

func (o ResponseProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Container.IsSet() {
		toSerialize["Container"] = o.Container.Get()
	}
	if o.AudioCodec.IsSet() {
		toSerialize["AudioCodec"] = o.AudioCodec.Get()
	}
	if o.VideoCodec.IsSet() {
		toSerialize["VideoCodec"] = o.VideoCodec.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.OrgPn.IsSet() {
		toSerialize["OrgPn"] = o.OrgPn.Get()
	}
	if o.MimeType.IsSet() {
		toSerialize["MimeType"] = o.MimeType.Get()
	}
	if o.Conditions != nil {
		toSerialize["Conditions"] = o.Conditions
	}
	return toSerialize, nil
}

type NullableResponseProfile struct {
	value *ResponseProfile
	isSet bool
}

func (v NullableResponseProfile) Get() *ResponseProfile {
	return v.value
}

func (v *NullableResponseProfile) Set(val *ResponseProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseProfile(val *ResponseProfile) *NullableResponseProfile {
	return &NullableResponseProfile{value: val, isSet: true}
}

func (v NullableResponseProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


