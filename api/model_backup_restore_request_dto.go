/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.11.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the BackupRestoreRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreRequestDto{}

// BackupRestoreRequestDto Defines properties used to start a restore process.
type BackupRestoreRequestDto struct {
	// Gets or Sets the name of the backup archive to restore from. Must be present in MediaBrowser.Common.Configuration.IApplicationPaths.BackupPath.
	ArchiveFileName *string `json:"ArchiveFileName,omitempty"`
}

// NewBackupRestoreRequestDto instantiates a new BackupRestoreRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreRequestDto() *BackupRestoreRequestDto {
	this := BackupRestoreRequestDto{}
	return &this
}

// NewBackupRestoreRequestDtoWithDefaults instantiates a new BackupRestoreRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreRequestDtoWithDefaults() *BackupRestoreRequestDto {
	this := BackupRestoreRequestDto{}
	return &this
}

// GetArchiveFileName returns the ArchiveFileName field value if set, zero value otherwise.
func (o *BackupRestoreRequestDto) GetArchiveFileName() string {
	if o == nil || IsNil(o.ArchiveFileName) {
		var ret string
		return ret
	}
	return *o.ArchiveFileName
}

// GetArchiveFileNameOk returns a tuple with the ArchiveFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreRequestDto) GetArchiveFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.ArchiveFileName) {
		return nil, false
	}
	return o.ArchiveFileName, true
}

// HasArchiveFileName returns a boolean if a field has been set.
func (o *BackupRestoreRequestDto) HasArchiveFileName() bool {
	if o != nil && !IsNil(o.ArchiveFileName) {
		return true
	}

	return false
}

// SetArchiveFileName gets a reference to the given string and assigns it to the ArchiveFileName field.
func (o *BackupRestoreRequestDto) SetArchiveFileName(v string) {
	o.ArchiveFileName = &v
}

func (o BackupRestoreRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArchiveFileName) {
		toSerialize["ArchiveFileName"] = o.ArchiveFileName
	}
	return toSerialize, nil
}

type NullableBackupRestoreRequestDto struct {
	value *BackupRestoreRequestDto
	isSet bool
}

func (v NullableBackupRestoreRequestDto) Get() *BackupRestoreRequestDto {
	return v.value
}

func (v *NullableBackupRestoreRequestDto) Set(val *BackupRestoreRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreRequestDto(val *BackupRestoreRequestDto) *NullableBackupRestoreRequestDto {
	return &NullableBackupRestoreRequestDto{value: val, isSet: true}
}

func (v NullableBackupRestoreRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


