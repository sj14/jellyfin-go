/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SearchHint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchHint{}

// SearchHint Class SearchHintResult.
type SearchHint struct {
	// Gets or sets the item id.
	// Deprecated
	ItemId *string `json:"ItemId,omitempty"`
	// Gets or sets the item id.
	Id *string `json:"Id,omitempty"`
	// Gets or sets the name.
	Name *string `json:"Name,omitempty"`
	// Gets or sets the matched term.
	MatchedTerm NullableString `json:"MatchedTerm,omitempty"`
	// Gets or sets the index number.
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	// Gets or sets the production year.
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	// Gets or sets the parent index number.
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	// Gets or sets the image tag.
	PrimaryImageTag NullableString `json:"PrimaryImageTag,omitempty"`
	// Gets or sets the thumb image tag.
	ThumbImageTag NullableString `json:"ThumbImageTag,omitempty"`
	// Gets or sets the thumb image item identifier.
	ThumbImageItemId NullableString `json:"ThumbImageItemId,omitempty"`
	// Gets or sets the backdrop image tag.
	BackdropImageTag NullableString `json:"BackdropImageTag,omitempty"`
	// Gets or sets the backdrop image item identifier.
	BackdropImageItemId NullableString `json:"BackdropImageItemId,omitempty"`
	// The base item kind.
	Type *BaseItemKind `json:"Type,omitempty"`
	// Gets or sets a value indicating whether this instance is folder.
	IsFolder NullableBool `json:"IsFolder,omitempty"`
	// Gets or sets the run time ticks.
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	// Media types.
	MediaType *MediaType `json:"MediaType,omitempty"`
	// Gets or sets the start date.
	StartDate NullableTime `json:"StartDate,omitempty"`
	// Gets or sets the end date.
	EndDate NullableTime `json:"EndDate,omitempty"`
	// Gets or sets the series.
	Series NullableString `json:"Series,omitempty"`
	// Gets or sets the status.
	Status NullableString `json:"Status,omitempty"`
	// Gets or sets the album.
	Album NullableString `json:"Album,omitempty"`
	// Gets or sets the album id.
	AlbumId NullableString `json:"AlbumId,omitempty"`
	// Gets or sets the album artist.
	AlbumArtist NullableString `json:"AlbumArtist,omitempty"`
	// Gets or sets the artists.
	Artists []string `json:"Artists,omitempty"`
	// Gets or sets the song count.
	SongCount NullableInt32 `json:"SongCount,omitempty"`
	// Gets or sets the episode count.
	EpisodeCount NullableInt32 `json:"EpisodeCount,omitempty"`
	// Gets or sets the channel identifier.
	ChannelId NullableString `json:"ChannelId,omitempty"`
	// Gets or sets the name of the channel.
	ChannelName NullableString `json:"ChannelName,omitempty"`
	// Gets or sets the primary image aspect ratio.
	PrimaryImageAspectRatio NullableFloat64 `json:"PrimaryImageAspectRatio,omitempty"`
}

// NewSearchHint instantiates a new SearchHint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchHint() *SearchHint {
	this := SearchHint{}
	return &this
}

// NewSearchHintWithDefaults instantiates a new SearchHint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchHintWithDefaults() *SearchHint {
	this := SearchHint{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
// Deprecated
func (o *SearchHint) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SearchHint) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *SearchHint) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
// Deprecated
func (o *SearchHint) SetItemId(v string) {
	o.ItemId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchHint) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchHint) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchHint) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchHint) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchHint) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchHint) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchHint) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchHint) SetName(v string) {
	o.Name = &v
}

// GetMatchedTerm returns the MatchedTerm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetMatchedTerm() string {
	if o == nil || IsNil(o.MatchedTerm.Get()) {
		var ret string
		return ret
	}
	return *o.MatchedTerm.Get()
}

// GetMatchedTermOk returns a tuple with the MatchedTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetMatchedTermOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchedTerm.Get(), o.MatchedTerm.IsSet()
}

// HasMatchedTerm returns a boolean if a field has been set.
func (o *SearchHint) HasMatchedTerm() bool {
	if o != nil && o.MatchedTerm.IsSet() {
		return true
	}

	return false
}

// SetMatchedTerm gets a reference to the given NullableString and assigns it to the MatchedTerm field.
func (o *SearchHint) SetMatchedTerm(v string) {
	o.MatchedTerm.Set(&v)
}
// SetMatchedTermNil sets the value for MatchedTerm to be an explicit nil
func (o *SearchHint) SetMatchedTermNil() {
	o.MatchedTerm.Set(nil)
}

// UnsetMatchedTerm ensures that no value is present for MatchedTerm, not even an explicit nil
func (o *SearchHint) UnsetMatchedTerm() {
	o.MatchedTerm.Unset()
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *SearchHint) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *SearchHint) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *SearchHint) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *SearchHint) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *SearchHint) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *SearchHint) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *SearchHint) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *SearchHint) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *SearchHint) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *SearchHint) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *SearchHint) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *SearchHint) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetPrimaryImageTag returns the PrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetPrimaryImageTag() string {
	if o == nil || IsNil(o.PrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryImageTag.Get()
}

// GetPrimaryImageTagOk returns a tuple with the PrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageTag.Get(), o.PrimaryImageTag.IsSet()
}

// HasPrimaryImageTag returns a boolean if a field has been set.
func (o *SearchHint) HasPrimaryImageTag() bool {
	if o != nil && o.PrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageTag gets a reference to the given NullableString and assigns it to the PrimaryImageTag field.
func (o *SearchHint) SetPrimaryImageTag(v string) {
	o.PrimaryImageTag.Set(&v)
}
// SetPrimaryImageTagNil sets the value for PrimaryImageTag to be an explicit nil
func (o *SearchHint) SetPrimaryImageTagNil() {
	o.PrimaryImageTag.Set(nil)
}

// UnsetPrimaryImageTag ensures that no value is present for PrimaryImageTag, not even an explicit nil
func (o *SearchHint) UnsetPrimaryImageTag() {
	o.PrimaryImageTag.Unset()
}

// GetThumbImageTag returns the ThumbImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetThumbImageTag() string {
	if o == nil || IsNil(o.ThumbImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ThumbImageTag.Get()
}

// GetThumbImageTagOk returns a tuple with the ThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetThumbImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThumbImageTag.Get(), o.ThumbImageTag.IsSet()
}

// HasThumbImageTag returns a boolean if a field has been set.
func (o *SearchHint) HasThumbImageTag() bool {
	if o != nil && o.ThumbImageTag.IsSet() {
		return true
	}

	return false
}

// SetThumbImageTag gets a reference to the given NullableString and assigns it to the ThumbImageTag field.
func (o *SearchHint) SetThumbImageTag(v string) {
	o.ThumbImageTag.Set(&v)
}
// SetThumbImageTagNil sets the value for ThumbImageTag to be an explicit nil
func (o *SearchHint) SetThumbImageTagNil() {
	o.ThumbImageTag.Set(nil)
}

// UnsetThumbImageTag ensures that no value is present for ThumbImageTag, not even an explicit nil
func (o *SearchHint) UnsetThumbImageTag() {
	o.ThumbImageTag.Unset()
}

// GetThumbImageItemId returns the ThumbImageItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetThumbImageItemId() string {
	if o == nil || IsNil(o.ThumbImageItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ThumbImageItemId.Get()
}

// GetThumbImageItemIdOk returns a tuple with the ThumbImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetThumbImageItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThumbImageItemId.Get(), o.ThumbImageItemId.IsSet()
}

// HasThumbImageItemId returns a boolean if a field has been set.
func (o *SearchHint) HasThumbImageItemId() bool {
	if o != nil && o.ThumbImageItemId.IsSet() {
		return true
	}

	return false
}

// SetThumbImageItemId gets a reference to the given NullableString and assigns it to the ThumbImageItemId field.
func (o *SearchHint) SetThumbImageItemId(v string) {
	o.ThumbImageItemId.Set(&v)
}
// SetThumbImageItemIdNil sets the value for ThumbImageItemId to be an explicit nil
func (o *SearchHint) SetThumbImageItemIdNil() {
	o.ThumbImageItemId.Set(nil)
}

// UnsetThumbImageItemId ensures that no value is present for ThumbImageItemId, not even an explicit nil
func (o *SearchHint) UnsetThumbImageItemId() {
	o.ThumbImageItemId.Unset()
}

// GetBackdropImageTag returns the BackdropImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetBackdropImageTag() string {
	if o == nil || IsNil(o.BackdropImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.BackdropImageTag.Get()
}

// GetBackdropImageTagOk returns a tuple with the BackdropImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetBackdropImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackdropImageTag.Get(), o.BackdropImageTag.IsSet()
}

// HasBackdropImageTag returns a boolean if a field has been set.
func (o *SearchHint) HasBackdropImageTag() bool {
	if o != nil && o.BackdropImageTag.IsSet() {
		return true
	}

	return false
}

// SetBackdropImageTag gets a reference to the given NullableString and assigns it to the BackdropImageTag field.
func (o *SearchHint) SetBackdropImageTag(v string) {
	o.BackdropImageTag.Set(&v)
}
// SetBackdropImageTagNil sets the value for BackdropImageTag to be an explicit nil
func (o *SearchHint) SetBackdropImageTagNil() {
	o.BackdropImageTag.Set(nil)
}

// UnsetBackdropImageTag ensures that no value is present for BackdropImageTag, not even an explicit nil
func (o *SearchHint) UnsetBackdropImageTag() {
	o.BackdropImageTag.Unset()
}

// GetBackdropImageItemId returns the BackdropImageItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetBackdropImageItemId() string {
	if o == nil || IsNil(o.BackdropImageItemId.Get()) {
		var ret string
		return ret
	}
	return *o.BackdropImageItemId.Get()
}

// GetBackdropImageItemIdOk returns a tuple with the BackdropImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetBackdropImageItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackdropImageItemId.Get(), o.BackdropImageItemId.IsSet()
}

// HasBackdropImageItemId returns a boolean if a field has been set.
func (o *SearchHint) HasBackdropImageItemId() bool {
	if o != nil && o.BackdropImageItemId.IsSet() {
		return true
	}

	return false
}

// SetBackdropImageItemId gets a reference to the given NullableString and assigns it to the BackdropImageItemId field.
func (o *SearchHint) SetBackdropImageItemId(v string) {
	o.BackdropImageItemId.Set(&v)
}
// SetBackdropImageItemIdNil sets the value for BackdropImageItemId to be an explicit nil
func (o *SearchHint) SetBackdropImageItemIdNil() {
	o.BackdropImageItemId.Set(nil)
}

// UnsetBackdropImageItemId ensures that no value is present for BackdropImageItemId, not even an explicit nil
func (o *SearchHint) UnsetBackdropImageItemId() {
	o.BackdropImageItemId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchHint) GetType() BaseItemKind {
	if o == nil || IsNil(o.Type) {
		var ret BaseItemKind
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchHint) GetTypeOk() (*BaseItemKind, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchHint) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BaseItemKind and assigns it to the Type field.
func (o *SearchHint) SetType(v BaseItemKind) {
	o.Type = &v
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFolder.Get()
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetIsFolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFolder.Get(), o.IsFolder.IsSet()
}

// HasIsFolder returns a boolean if a field has been set.
func (o *SearchHint) HasIsFolder() bool {
	if o != nil && o.IsFolder.IsSet() {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given NullableBool and assigns it to the IsFolder field.
func (o *SearchHint) SetIsFolder(v bool) {
	o.IsFolder.Set(&v)
}
// SetIsFolderNil sets the value for IsFolder to be an explicit nil
func (o *SearchHint) SetIsFolderNil() {
	o.IsFolder.Set(nil)
}

// UnsetIsFolder ensures that no value is present for IsFolder, not even an explicit nil
func (o *SearchHint) UnsetIsFolder() {
	o.IsFolder.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *SearchHint) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *SearchHint) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *SearchHint) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *SearchHint) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *SearchHint) GetMediaType() MediaType {
	if o == nil || IsNil(o.MediaType) {
		var ret MediaType
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchHint) GetMediaTypeOk() (*MediaType, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *SearchHint) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given MediaType and assigns it to the MediaType field.
func (o *SearchHint) SetMediaType(v MediaType) {
	o.MediaType = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *SearchHint) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *SearchHint) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *SearchHint) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *SearchHint) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *SearchHint) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *SearchHint) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *SearchHint) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *SearchHint) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetSeries returns the Series field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetSeries() string {
	if o == nil || IsNil(o.Series.Get()) {
		var ret string
		return ret
	}
	return *o.Series.Get()
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetSeriesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Series.Get(), o.Series.IsSet()
}

// HasSeries returns a boolean if a field has been set.
func (o *SearchHint) HasSeries() bool {
	if o != nil && o.Series.IsSet() {
		return true
	}

	return false
}

// SetSeries gets a reference to the given NullableString and assigns it to the Series field.
func (o *SearchHint) SetSeries(v string) {
	o.Series.Set(&v)
}
// SetSeriesNil sets the value for Series to be an explicit nil
func (o *SearchHint) SetSeriesNil() {
	o.Series.Set(nil)
}

// UnsetSeries ensures that no value is present for Series, not even an explicit nil
func (o *SearchHint) UnsetSeries() {
	o.Series.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *SearchHint) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *SearchHint) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *SearchHint) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *SearchHint) UnsetStatus() {
	o.Status.Unset()
}

// GetAlbum returns the Album field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetAlbum() string {
	if o == nil || IsNil(o.Album.Get()) {
		var ret string
		return ret
	}
	return *o.Album.Get()
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetAlbumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Album.Get(), o.Album.IsSet()
}

// HasAlbum returns a boolean if a field has been set.
func (o *SearchHint) HasAlbum() bool {
	if o != nil && o.Album.IsSet() {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given NullableString and assigns it to the Album field.
func (o *SearchHint) SetAlbum(v string) {
	o.Album.Set(&v)
}
// SetAlbumNil sets the value for Album to be an explicit nil
func (o *SearchHint) SetAlbumNil() {
	o.Album.Set(nil)
}

// UnsetAlbum ensures that no value is present for Album, not even an explicit nil
func (o *SearchHint) UnsetAlbum() {
	o.Album.Unset()
}

// GetAlbumId returns the AlbumId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetAlbumId() string {
	if o == nil || IsNil(o.AlbumId.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumId.Get()
}

// GetAlbumIdOk returns a tuple with the AlbumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetAlbumIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumId.Get(), o.AlbumId.IsSet()
}

// HasAlbumId returns a boolean if a field has been set.
func (o *SearchHint) HasAlbumId() bool {
	if o != nil && o.AlbumId.IsSet() {
		return true
	}

	return false
}

// SetAlbumId gets a reference to the given NullableString and assigns it to the AlbumId field.
func (o *SearchHint) SetAlbumId(v string) {
	o.AlbumId.Set(&v)
}
// SetAlbumIdNil sets the value for AlbumId to be an explicit nil
func (o *SearchHint) SetAlbumIdNil() {
	o.AlbumId.Set(nil)
}

// UnsetAlbumId ensures that no value is present for AlbumId, not even an explicit nil
func (o *SearchHint) UnsetAlbumId() {
	o.AlbumId.Unset()
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetAlbumArtist() string {
	if o == nil || IsNil(o.AlbumArtist.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumArtist.Get()
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetAlbumArtistOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumArtist.Get(), o.AlbumArtist.IsSet()
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *SearchHint) HasAlbumArtist() bool {
	if o != nil && o.AlbumArtist.IsSet() {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given NullableString and assigns it to the AlbumArtist field.
func (o *SearchHint) SetAlbumArtist(v string) {
	o.AlbumArtist.Set(&v)
}
// SetAlbumArtistNil sets the value for AlbumArtist to be an explicit nil
func (o *SearchHint) SetAlbumArtistNil() {
	o.AlbumArtist.Set(nil)
}

// UnsetAlbumArtist ensures that no value is present for AlbumArtist, not even an explicit nil
func (o *SearchHint) UnsetAlbumArtist() {
	o.AlbumArtist.Unset()
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *SearchHint) GetArtists() []string {
	if o == nil || IsNil(o.Artists) {
		var ret []string
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchHint) GetArtistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *SearchHint) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []string and assigns it to the Artists field.
func (o *SearchHint) SetArtists(v []string) {
	o.Artists = v
}

// GetSongCount returns the SongCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetSongCount() int32 {
	if o == nil || IsNil(o.SongCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SongCount.Get()
}

// GetSongCountOk returns a tuple with the SongCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetSongCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SongCount.Get(), o.SongCount.IsSet()
}

// HasSongCount returns a boolean if a field has been set.
func (o *SearchHint) HasSongCount() bool {
	if o != nil && o.SongCount.IsSet() {
		return true
	}

	return false
}

// SetSongCount gets a reference to the given NullableInt32 and assigns it to the SongCount field.
func (o *SearchHint) SetSongCount(v int32) {
	o.SongCount.Set(&v)
}
// SetSongCountNil sets the value for SongCount to be an explicit nil
func (o *SearchHint) SetSongCountNil() {
	o.SongCount.Set(nil)
}

// UnsetSongCount ensures that no value is present for SongCount, not even an explicit nil
func (o *SearchHint) UnsetSongCount() {
	o.SongCount.Unset()
}

// GetEpisodeCount returns the EpisodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetEpisodeCount() int32 {
	if o == nil || IsNil(o.EpisodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.EpisodeCount.Get()
}

// GetEpisodeCountOk returns a tuple with the EpisodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetEpisodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeCount.Get(), o.EpisodeCount.IsSet()
}

// HasEpisodeCount returns a boolean if a field has been set.
func (o *SearchHint) HasEpisodeCount() bool {
	if o != nil && o.EpisodeCount.IsSet() {
		return true
	}

	return false
}

// SetEpisodeCount gets a reference to the given NullableInt32 and assigns it to the EpisodeCount field.
func (o *SearchHint) SetEpisodeCount(v int32) {
	o.EpisodeCount.Set(&v)
}
// SetEpisodeCountNil sets the value for EpisodeCount to be an explicit nil
func (o *SearchHint) SetEpisodeCountNil() {
	o.EpisodeCount.Set(nil)
}

// UnsetEpisodeCount ensures that no value is present for EpisodeCount, not even an explicit nil
func (o *SearchHint) UnsetEpisodeCount() {
	o.EpisodeCount.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *SearchHint) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *SearchHint) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *SearchHint) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *SearchHint) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *SearchHint) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *SearchHint) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *SearchHint) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *SearchHint) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetPrimaryImageAspectRatio returns the PrimaryImageAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchHint) GetPrimaryImageAspectRatio() float64 {
	if o == nil || IsNil(o.PrimaryImageAspectRatio.Get()) {
		var ret float64
		return ret
	}
	return *o.PrimaryImageAspectRatio.Get()
}

// GetPrimaryImageAspectRatioOk returns a tuple with the PrimaryImageAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchHint) GetPrimaryImageAspectRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageAspectRatio.Get(), o.PrimaryImageAspectRatio.IsSet()
}

// HasPrimaryImageAspectRatio returns a boolean if a field has been set.
func (o *SearchHint) HasPrimaryImageAspectRatio() bool {
	if o != nil && o.PrimaryImageAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageAspectRatio gets a reference to the given NullableFloat64 and assigns it to the PrimaryImageAspectRatio field.
func (o *SearchHint) SetPrimaryImageAspectRatio(v float64) {
	o.PrimaryImageAspectRatio.Set(&v)
}
// SetPrimaryImageAspectRatioNil sets the value for PrimaryImageAspectRatio to be an explicit nil
func (o *SearchHint) SetPrimaryImageAspectRatioNil() {
	o.PrimaryImageAspectRatio.Set(nil)
}

// UnsetPrimaryImageAspectRatio ensures that no value is present for PrimaryImageAspectRatio, not even an explicit nil
func (o *SearchHint) UnsetPrimaryImageAspectRatio() {
	o.PrimaryImageAspectRatio.Unset()
}

func (o SearchHint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchHint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if o.MatchedTerm.IsSet() {
		toSerialize["MatchedTerm"] = o.MatchedTerm.Get()
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if o.PrimaryImageTag.IsSet() {
		toSerialize["PrimaryImageTag"] = o.PrimaryImageTag.Get()
	}
	if o.ThumbImageTag.IsSet() {
		toSerialize["ThumbImageTag"] = o.ThumbImageTag.Get()
	}
	if o.ThumbImageItemId.IsSet() {
		toSerialize["ThumbImageItemId"] = o.ThumbImageItemId.Get()
	}
	if o.BackdropImageTag.IsSet() {
		toSerialize["BackdropImageTag"] = o.BackdropImageTag.Get()
	}
	if o.BackdropImageItemId.IsSet() {
		toSerialize["BackdropImageItemId"] = o.BackdropImageItemId.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.IsFolder.IsSet() {
		toSerialize["IsFolder"] = o.IsFolder.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if !IsNil(o.MediaType) {
		toSerialize["MediaType"] = o.MediaType
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["EndDate"] = o.EndDate.Get()
	}
	if o.Series.IsSet() {
		toSerialize["Series"] = o.Series.Get()
	}
	if o.Status.IsSet() {
		toSerialize["Status"] = o.Status.Get()
	}
	if o.Album.IsSet() {
		toSerialize["Album"] = o.Album.Get()
	}
	if o.AlbumId.IsSet() {
		toSerialize["AlbumId"] = o.AlbumId.Get()
	}
	if o.AlbumArtist.IsSet() {
		toSerialize["AlbumArtist"] = o.AlbumArtist.Get()
	}
	if !IsNil(o.Artists) {
		toSerialize["Artists"] = o.Artists
	}
	if o.SongCount.IsSet() {
		toSerialize["SongCount"] = o.SongCount.Get()
	}
	if o.EpisodeCount.IsSet() {
		toSerialize["EpisodeCount"] = o.EpisodeCount.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.PrimaryImageAspectRatio.IsSet() {
		toSerialize["PrimaryImageAspectRatio"] = o.PrimaryImageAspectRatio.Get()
	}
	return toSerialize, nil
}

type NullableSearchHint struct {
	value *SearchHint
	isSet bool
}

func (v NullableSearchHint) Get() *SearchHint {
	return v.value
}

func (v *NullableSearchHint) Set(val *SearchHint) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchHint) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchHint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchHint(val *SearchHint) *NullableSearchHint {
	return &NullableSearchHint{value: val, isSet: true}
}

func (v NullableSearchHint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchHint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


