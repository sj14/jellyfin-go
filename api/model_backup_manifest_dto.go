/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.11.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the BackupManifestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupManifestDto{}

// BackupManifestDto Manifest type for backups internal structure.
type BackupManifestDto struct {
	// Gets or sets the jellyfin version this backup was created with.
	ServerVersion *string `json:"ServerVersion,omitempty"`
	// Gets or sets the backup engine version this backup was created with.
	BackupEngineVersion *string `json:"BackupEngineVersion,omitempty"`
	// Gets or sets the date this backup was created with.
	DateCreated *time.Time `json:"DateCreated,omitempty"`
	// Gets or sets the path to the backup on the system.
	Path *string `json:"Path,omitempty"`
	// Gets or sets the contents of the backup archive.
	Options *BackupOptionsDto `json:"Options,omitempty"`
}

// NewBackupManifestDto instantiates a new BackupManifestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupManifestDto() *BackupManifestDto {
	this := BackupManifestDto{}
	return &this
}

// NewBackupManifestDtoWithDefaults instantiates a new BackupManifestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupManifestDtoWithDefaults() *BackupManifestDto {
	this := BackupManifestDto{}
	return &this
}

// GetServerVersion returns the ServerVersion field value if set, zero value otherwise.
func (o *BackupManifestDto) GetServerVersion() string {
	if o == nil || IsNil(o.ServerVersion) {
		var ret string
		return ret
	}
	return *o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupManifestDto) GetServerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerVersion) {
		return nil, false
	}
	return o.ServerVersion, true
}

// HasServerVersion returns a boolean if a field has been set.
func (o *BackupManifestDto) HasServerVersion() bool {
	if o != nil && !IsNil(o.ServerVersion) {
		return true
	}

	return false
}

// SetServerVersion gets a reference to the given string and assigns it to the ServerVersion field.
func (o *BackupManifestDto) SetServerVersion(v string) {
	o.ServerVersion = &v
}

// GetBackupEngineVersion returns the BackupEngineVersion field value if set, zero value otherwise.
func (o *BackupManifestDto) GetBackupEngineVersion() string {
	if o == nil || IsNil(o.BackupEngineVersion) {
		var ret string
		return ret
	}
	return *o.BackupEngineVersion
}

// GetBackupEngineVersionOk returns a tuple with the BackupEngineVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupManifestDto) GetBackupEngineVersionOk() (*string, bool) {
	if o == nil || IsNil(o.BackupEngineVersion) {
		return nil, false
	}
	return o.BackupEngineVersion, true
}

// HasBackupEngineVersion returns a boolean if a field has been set.
func (o *BackupManifestDto) HasBackupEngineVersion() bool {
	if o != nil && !IsNil(o.BackupEngineVersion) {
		return true
	}

	return false
}

// SetBackupEngineVersion gets a reference to the given string and assigns it to the BackupEngineVersion field.
func (o *BackupManifestDto) SetBackupEngineVersion(v string) {
	o.BackupEngineVersion = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *BackupManifestDto) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupManifestDto) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *BackupManifestDto) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *BackupManifestDto) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *BackupManifestDto) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupManifestDto) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *BackupManifestDto) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *BackupManifestDto) SetPath(v string) {
	o.Path = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *BackupManifestDto) GetOptions() BackupOptionsDto {
	if o == nil || IsNil(o.Options) {
		var ret BackupOptionsDto
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupManifestDto) GetOptionsOk() (*BackupOptionsDto, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *BackupManifestDto) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given BackupOptionsDto and assigns it to the Options field.
func (o *BackupManifestDto) SetOptions(v BackupOptionsDto) {
	o.Options = &v
}

func (o BackupManifestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupManifestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerVersion) {
		toSerialize["ServerVersion"] = o.ServerVersion
	}
	if !IsNil(o.BackupEngineVersion) {
		toSerialize["BackupEngineVersion"] = o.BackupEngineVersion
	}
	if !IsNil(o.DateCreated) {
		toSerialize["DateCreated"] = o.DateCreated
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.Options) {
		toSerialize["Options"] = o.Options
	}
	return toSerialize, nil
}

type NullableBackupManifestDto struct {
	value *BackupManifestDto
	isSet bool
}

func (v NullableBackupManifestDto) Get() *BackupManifestDto {
	return v.value
}

func (v *NullableBackupManifestDto) Set(val *BackupManifestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupManifestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupManifestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupManifestDto(val *BackupManifestDto) *NullableBackupManifestDto {
	return &NullableBackupManifestDto{value: val, isSet: true}
}

func (v NullableBackupManifestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupManifestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


