/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.8.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SessionInfoNowViewingItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionInfoNowViewingItem{}

// SessionInfoNowViewingItem This is strictly used as a data transfer object from the api layer.  This holds information about a BaseItem in a format that is convenient for the client.
type SessionInfoNowViewingItem struct {
	// Gets or sets the name.
	Name NullableString `json:"Name,omitempty"`
	OriginalTitle NullableString `json:"OriginalTitle,omitempty"`
	// Gets or sets the server identifier.
	ServerId NullableString `json:"ServerId,omitempty"`
	// Gets or sets the id.
	Id *string `json:"Id,omitempty"`
	// Gets or sets the etag.
	Etag NullableString `json:"Etag,omitempty"`
	// Gets or sets the type of the source.
	SourceType NullableString `json:"SourceType,omitempty"`
	// Gets or sets the playlist item identifier.
	PlaylistItemId NullableString `json:"PlaylistItemId,omitempty"`
	// Gets or sets the date created.
	DateCreated NullableTime `json:"DateCreated,omitempty"`
	DateLastMediaAdded NullableTime `json:"DateLastMediaAdded,omitempty"`
	ExtraType NullableString `json:"ExtraType,omitempty"`
	AirsBeforeSeasonNumber NullableInt32 `json:"AirsBeforeSeasonNumber,omitempty"`
	AirsAfterSeasonNumber NullableInt32 `json:"AirsAfterSeasonNumber,omitempty"`
	AirsBeforeEpisodeNumber NullableInt32 `json:"AirsBeforeEpisodeNumber,omitempty"`
	CanDelete NullableBool `json:"CanDelete,omitempty"`
	CanDownload NullableBool `json:"CanDownload,omitempty"`
	HasSubtitles NullableBool `json:"HasSubtitles,omitempty"`
	PreferredMetadataLanguage NullableString `json:"PreferredMetadataLanguage,omitempty"`
	PreferredMetadataCountryCode NullableString `json:"PreferredMetadataCountryCode,omitempty"`
	// Gets or sets a value indicating whether [supports synchronize].
	SupportsSync NullableBool `json:"SupportsSync,omitempty"`
	Container NullableString `json:"Container,omitempty"`
	// Gets or sets the name of the sort.
	SortName NullableString `json:"SortName,omitempty"`
	ForcedSortName NullableString `json:"ForcedSortName,omitempty"`
	// Gets or sets the video3 D format.
	Video3DFormat NullableVideo3DFormat `json:"Video3DFormat,omitempty"`
	// Gets or sets the premiere date.
	PremiereDate NullableTime `json:"PremiereDate,omitempty"`
	// Gets or sets the external urls.
	ExternalUrls []ExternalUrl `json:"ExternalUrls,omitempty"`
	// Gets or sets the media versions.
	MediaSources []MediaSourceInfo `json:"MediaSources,omitempty"`
	// Gets or sets the critic rating.
	CriticRating NullableFloat32 `json:"CriticRating,omitempty"`
	ProductionLocations []string `json:"ProductionLocations,omitempty"`
	// Gets or sets the path.
	Path NullableString `json:"Path,omitempty"`
	EnableMediaSourceDisplay NullableBool `json:"EnableMediaSourceDisplay,omitempty"`
	// Gets or sets the official rating.
	OfficialRating NullableString `json:"OfficialRating,omitempty"`
	// Gets or sets the custom rating.
	CustomRating NullableString `json:"CustomRating,omitempty"`
	// Gets or sets the channel identifier.
	ChannelId NullableString `json:"ChannelId,omitempty"`
	ChannelName NullableString `json:"ChannelName,omitempty"`
	// Gets or sets the overview.
	Overview NullableString `json:"Overview,omitempty"`
	// Gets or sets the taglines.
	Taglines []string `json:"Taglines,omitempty"`
	// Gets or sets the genres.
	Genres []string `json:"Genres,omitempty"`
	// Gets or sets the community rating.
	CommunityRating NullableFloat32 `json:"CommunityRating,omitempty"`
	// Gets or sets the cumulative run time ticks.
	CumulativeRunTimeTicks NullableInt64 `json:"CumulativeRunTimeTicks,omitempty"`
	// Gets or sets the run time ticks.
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	// Gets or sets the play access.
	PlayAccess NullablePlayAccess `json:"PlayAccess,omitempty"`
	// Gets or sets the aspect ratio.
	AspectRatio NullableString `json:"AspectRatio,omitempty"`
	// Gets or sets the production year.
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	// Gets or sets a value indicating whether this instance is place holder.
	IsPlaceHolder NullableBool `json:"IsPlaceHolder,omitempty"`
	// Gets or sets the number.
	Number NullableString `json:"Number,omitempty"`
	ChannelNumber NullableString `json:"ChannelNumber,omitempty"`
	// Gets or sets the index number.
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	// Gets or sets the index number end.
	IndexNumberEnd NullableInt32 `json:"IndexNumberEnd,omitempty"`
	// Gets or sets the parent index number.
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	// Gets or sets the trailer urls.
	RemoteTrailers []MediaUrl `json:"RemoteTrailers,omitempty"`
	// Gets or sets the provider ids.
	ProviderIds map[string]string `json:"ProviderIds,omitempty"`
	// Gets or sets a value indicating whether this instance is HD.
	IsHD NullableBool `json:"IsHD,omitempty"`
	// Gets or sets a value indicating whether this instance is folder.
	IsFolder NullableBool `json:"IsFolder,omitempty"`
	// Gets or sets the parent id.
	ParentId NullableString `json:"ParentId,omitempty"`
	// Gets or sets the type.
	Type *BaseItemKind `json:"Type,omitempty"`
	// Gets or sets the people.
	People []BaseItemPerson `json:"People,omitempty"`
	// Gets or sets the studios.
	Studios []NameGuidPair `json:"Studios,omitempty"`
	GenreItems []NameGuidPair `json:"GenreItems,omitempty"`
	// Gets or sets wether the item has a logo, this will hold the Id of the Parent that has one.
	ParentLogoItemId NullableString `json:"ParentLogoItemId,omitempty"`
	// Gets or sets wether the item has any backdrops, this will hold the Id of the Parent that has one.
	ParentBackdropItemId NullableString `json:"ParentBackdropItemId,omitempty"`
	// Gets or sets the parent backdrop image tags.
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	// Gets or sets the local trailer count.
	LocalTrailerCount NullableInt32 `json:"LocalTrailerCount,omitempty"`
	UserData NullableBaseItemDtoUserData `json:"UserData,omitempty"`
	// Gets or sets the recursive item count.
	RecursiveItemCount NullableInt32 `json:"RecursiveItemCount,omitempty"`
	// Gets or sets the child count.
	ChildCount NullableInt32 `json:"ChildCount,omitempty"`
	// Gets or sets the name of the series.
	SeriesName NullableString `json:"SeriesName,omitempty"`
	// Gets or sets the series id.
	SeriesId NullableString `json:"SeriesId,omitempty"`
	// Gets or sets the season identifier.
	SeasonId NullableString `json:"SeasonId,omitempty"`
	// Gets or sets the special feature count.
	SpecialFeatureCount NullableInt32 `json:"SpecialFeatureCount,omitempty"`
	// Gets or sets the display preferences id.
	DisplayPreferencesId NullableString `json:"DisplayPreferencesId,omitempty"`
	// Gets or sets the status.
	Status NullableString `json:"Status,omitempty"`
	// Gets or sets the air time.
	AirTime NullableString `json:"AirTime,omitempty"`
	// Gets or sets the air days.
	AirDays []DayOfWeek `json:"AirDays,omitempty"`
	// Gets or sets the tags.
	Tags []string `json:"Tags,omitempty"`
	// Gets or sets the primary image aspect ratio, after image enhancements.
	PrimaryImageAspectRatio NullableFloat64 `json:"PrimaryImageAspectRatio,omitempty"`
	// Gets or sets the artists.
	Artists []string `json:"Artists,omitempty"`
	// Gets or sets the artist items.
	ArtistItems []NameGuidPair `json:"ArtistItems,omitempty"`
	// Gets or sets the album.
	Album NullableString `json:"Album,omitempty"`
	// Gets or sets the type of the collection.
	CollectionType NullableString `json:"CollectionType,omitempty"`
	// Gets or sets the display order.
	DisplayOrder NullableString `json:"DisplayOrder,omitempty"`
	// Gets or sets the album id.
	AlbumId NullableString `json:"AlbumId,omitempty"`
	// Gets or sets the album image tag.
	AlbumPrimaryImageTag NullableString `json:"AlbumPrimaryImageTag,omitempty"`
	// Gets or sets the series primary image tag.
	SeriesPrimaryImageTag NullableString `json:"SeriesPrimaryImageTag,omitempty"`
	// Gets or sets the album artist.
	AlbumArtist NullableString `json:"AlbumArtist,omitempty"`
	// Gets or sets the album artists.
	AlbumArtists []NameGuidPair `json:"AlbumArtists,omitempty"`
	// Gets or sets the name of the season.
	SeasonName NullableString `json:"SeasonName,omitempty"`
	// Gets or sets the media streams.
	MediaStreams []MediaStream `json:"MediaStreams,omitempty"`
	// Gets or sets the type of the video.
	VideoType NullableVideoType `json:"VideoType,omitempty"`
	// Gets or sets the part count.
	PartCount NullableInt32 `json:"PartCount,omitempty"`
	MediaSourceCount NullableInt32 `json:"MediaSourceCount,omitempty"`
	// Gets or sets the image tags.
	ImageTags map[string]string `json:"ImageTags,omitempty"`
	// Gets or sets the backdrop image tags.
	BackdropImageTags []string `json:"BackdropImageTags,omitempty"`
	// Gets or sets the screenshot image tags.
	ScreenshotImageTags []string `json:"ScreenshotImageTags,omitempty"`
	// Gets or sets the parent logo image tag.
	ParentLogoImageTag NullableString `json:"ParentLogoImageTag,omitempty"`
	// Gets or sets wether the item has fan art, this will hold the Id of the Parent that has one.
	ParentArtItemId NullableString `json:"ParentArtItemId,omitempty"`
	// Gets or sets the parent art image tag.
	ParentArtImageTag NullableString `json:"ParentArtImageTag,omitempty"`
	// Gets or sets the series thumb image tag.
	SeriesThumbImageTag NullableString `json:"SeriesThumbImageTag,omitempty"`
	ImageBlurHashes NullableBaseItemDtoImageBlurHashes `json:"ImageBlurHashes,omitempty"`
	// Gets or sets the series studio.
	SeriesStudio NullableString `json:"SeriesStudio,omitempty"`
	// Gets or sets the parent thumb item id.
	ParentThumbItemId NullableString `json:"ParentThumbItemId,omitempty"`
	// Gets or sets the parent thumb image tag.
	ParentThumbImageTag NullableString `json:"ParentThumbImageTag,omitempty"`
	// Gets or sets the parent primary image item identifier.
	ParentPrimaryImageItemId NullableString `json:"ParentPrimaryImageItemId,omitempty"`
	// Gets or sets the parent primary image tag.
	ParentPrimaryImageTag NullableString `json:"ParentPrimaryImageTag,omitempty"`
	// Gets or sets the chapters.
	Chapters []ChapterInfo `json:"Chapters,omitempty"`
	// Gets or sets the type of the location.
	LocationType NullableLocationType `json:"LocationType,omitempty"`
	// Gets or sets the type of the iso.
	IsoType NullableIsoType `json:"IsoType,omitempty"`
	// Gets or sets the type of the media.
	MediaType NullableString `json:"MediaType,omitempty"`
	// Gets or sets the end date.
	EndDate NullableTime `json:"EndDate,omitempty"`
	// Gets or sets the locked fields.
	LockedFields []MetadataField `json:"LockedFields,omitempty"`
	// Gets or sets the trailer count.
	TrailerCount NullableInt32 `json:"TrailerCount,omitempty"`
	// Gets or sets the movie count.
	MovieCount NullableInt32 `json:"MovieCount,omitempty"`
	// Gets or sets the series count.
	SeriesCount NullableInt32 `json:"SeriesCount,omitempty"`
	ProgramCount NullableInt32 `json:"ProgramCount,omitempty"`
	// Gets or sets the episode count.
	EpisodeCount NullableInt32 `json:"EpisodeCount,omitempty"`
	// Gets or sets the song count.
	SongCount NullableInt32 `json:"SongCount,omitempty"`
	// Gets or sets the album count.
	AlbumCount NullableInt32 `json:"AlbumCount,omitempty"`
	ArtistCount NullableInt32 `json:"ArtistCount,omitempty"`
	// Gets or sets the music video count.
	MusicVideoCount NullableInt32 `json:"MusicVideoCount,omitempty"`
	// Gets or sets a value indicating whether [enable internet providers].
	LockData NullableBool `json:"LockData,omitempty"`
	Width NullableInt32 `json:"Width,omitempty"`
	Height NullableInt32 `json:"Height,omitempty"`
	CameraMake NullableString `json:"CameraMake,omitempty"`
	CameraModel NullableString `json:"CameraModel,omitempty"`
	Software NullableString `json:"Software,omitempty"`
	ExposureTime NullableFloat64 `json:"ExposureTime,omitempty"`
	FocalLength NullableFloat64 `json:"FocalLength,omitempty"`
	ImageOrientation NullableImageOrientation `json:"ImageOrientation,omitempty"`
	Aperture NullableFloat64 `json:"Aperture,omitempty"`
	ShutterSpeed NullableFloat64 `json:"ShutterSpeed,omitempty"`
	Latitude NullableFloat64 `json:"Latitude,omitempty"`
	Longitude NullableFloat64 `json:"Longitude,omitempty"`
	Altitude NullableFloat64 `json:"Altitude,omitempty"`
	IsoSpeedRating NullableInt32 `json:"IsoSpeedRating,omitempty"`
	// Gets or sets the series timer identifier.
	SeriesTimerId NullableString `json:"SeriesTimerId,omitempty"`
	// Gets or sets the program identifier.
	ProgramId NullableString `json:"ProgramId,omitempty"`
	// Gets or sets the channel primary image tag.
	ChannelPrimaryImageTag NullableString `json:"ChannelPrimaryImageTag,omitempty"`
	// Gets or sets the start date of the recording, in UTC.
	StartDate NullableTime `json:"StartDate,omitempty"`
	// Gets or sets the completion percentage.
	CompletionPercentage NullableFloat64 `json:"CompletionPercentage,omitempty"`
	// Gets or sets a value indicating whether this instance is repeat.
	IsRepeat NullableBool `json:"IsRepeat,omitempty"`
	// Gets or sets the episode title.
	EpisodeTitle NullableString `json:"EpisodeTitle,omitempty"`
	// Gets or sets the type of the channel.
	ChannelType NullableChannelType `json:"ChannelType,omitempty"`
	// Gets or sets the audio.
	Audio NullableProgramAudio `json:"Audio,omitempty"`
	// Gets or sets a value indicating whether this instance is movie.
	IsMovie NullableBool `json:"IsMovie,omitempty"`
	// Gets or sets a value indicating whether this instance is sports.
	IsSports NullableBool `json:"IsSports,omitempty"`
	// Gets or sets a value indicating whether this instance is series.
	IsSeries NullableBool `json:"IsSeries,omitempty"`
	// Gets or sets a value indicating whether this instance is live.
	IsLive NullableBool `json:"IsLive,omitempty"`
	// Gets or sets a value indicating whether this instance is news.
	IsNews NullableBool `json:"IsNews,omitempty"`
	// Gets or sets a value indicating whether this instance is kids.
	IsKids NullableBool `json:"IsKids,omitempty"`
	// Gets or sets a value indicating whether this instance is premiere.
	IsPremiere NullableBool `json:"IsPremiere,omitempty"`
	// Gets or sets the timer identifier.
	TimerId NullableString `json:"TimerId,omitempty"`
	CurrentProgram NullableBaseItemDtoCurrentProgram `json:"CurrentProgram,omitempty"`
}

// NewSessionInfoNowViewingItem instantiates a new SessionInfoNowViewingItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionInfoNowViewingItem() *SessionInfoNowViewingItem {
	this := SessionInfoNowViewingItem{}
	return &this
}

// NewSessionInfoNowViewingItemWithDefaults instantiates a new SessionInfoNowViewingItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionInfoNowViewingItemWithDefaults() *SessionInfoNowViewingItem {
	this := SessionInfoNowViewingItem{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SessionInfoNowViewingItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SessionInfoNowViewingItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetName() {
	o.Name.Unset()
}

// GetOriginalTitle returns the OriginalTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetOriginalTitle() string {
	if o == nil || IsNil(o.OriginalTitle.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalTitle.Get()
}

// GetOriginalTitleOk returns a tuple with the OriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetOriginalTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTitle.Get(), o.OriginalTitle.IsSet()
}

// HasOriginalTitle returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasOriginalTitle() bool {
	if o != nil && o.OriginalTitle.IsSet() {
		return true
	}

	return false
}

// SetOriginalTitle gets a reference to the given NullableString and assigns it to the OriginalTitle field.
func (o *SessionInfoNowViewingItem) SetOriginalTitle(v string) {
	o.OriginalTitle.Set(&v)
}
// SetOriginalTitleNil sets the value for OriginalTitle to be an explicit nil
func (o *SessionInfoNowViewingItem) SetOriginalTitleNil() {
	o.OriginalTitle.Set(nil)
}

// UnsetOriginalTitle ensures that no value is present for OriginalTitle, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetOriginalTitle() {
	o.OriginalTitle.Unset()
}

// GetServerId returns the ServerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetServerId() string {
	if o == nil || IsNil(o.ServerId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerId.Get()
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerId.Get(), o.ServerId.IsSet()
}

// HasServerId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasServerId() bool {
	if o != nil && o.ServerId.IsSet() {
		return true
	}

	return false
}

// SetServerId gets a reference to the given NullableString and assigns it to the ServerId field.
func (o *SessionInfoNowViewingItem) SetServerId(v string) {
	o.ServerId.Set(&v)
}
// SetServerIdNil sets the value for ServerId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetServerIdNil() {
	o.ServerId.Set(nil)
}

// UnsetServerId ensures that no value is present for ServerId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetServerId() {
	o.ServerId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SessionInfoNowViewingItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfoNowViewingItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SessionInfoNowViewingItem) SetId(v string) {
	o.Id = &v
}

// GetEtag returns the Etag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetEtag() string {
	if o == nil || IsNil(o.Etag.Get()) {
		var ret string
		return ret
	}
	return *o.Etag.Get()
}

// GetEtagOk returns a tuple with the Etag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetEtagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Etag.Get(), o.Etag.IsSet()
}

// HasEtag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasEtag() bool {
	if o != nil && o.Etag.IsSet() {
		return true
	}

	return false
}

// SetEtag gets a reference to the given NullableString and assigns it to the Etag field.
func (o *SessionInfoNowViewingItem) SetEtag(v string) {
	o.Etag.Set(&v)
}
// SetEtagNil sets the value for Etag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetEtagNil() {
	o.Etag.Set(nil)
}

// UnsetEtag ensures that no value is present for Etag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetEtag() {
	o.Etag.Unset()
}

// GetSourceType returns the SourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSourceType() string {
	if o == nil || IsNil(o.SourceType.Get()) {
		var ret string
		return ret
	}
	return *o.SourceType.Get()
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceType.Get(), o.SourceType.IsSet()
}

// HasSourceType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSourceType() bool {
	if o != nil && o.SourceType.IsSet() {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given NullableString and assigns it to the SourceType field.
func (o *SessionInfoNowViewingItem) SetSourceType(v string) {
	o.SourceType.Set(&v)
}
// SetSourceTypeNil sets the value for SourceType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSourceTypeNil() {
	o.SourceType.Set(nil)
}

// UnsetSourceType ensures that no value is present for SourceType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSourceType() {
	o.SourceType.Unset()
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId.Get()) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId.Get()
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlaylistItemId.Get(), o.PlaylistItemId.IsSet()
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPlaylistItemId() bool {
	if o != nil && o.PlaylistItemId.IsSet() {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given NullableString and assigns it to the PlaylistItemId field.
func (o *SessionInfoNowViewingItem) SetPlaylistItemId(v string) {
	o.PlaylistItemId.Set(&v)
}
// SetPlaylistItemIdNil sets the value for PlaylistItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPlaylistItemIdNil() {
	o.PlaylistItemId.Set(nil)
}

// UnsetPlaylistItemId ensures that no value is present for PlaylistItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPlaylistItemId() {
	o.PlaylistItemId.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableTime and assigns it to the DateCreated field.
func (o *SessionInfoNowViewingItem) SetDateCreated(v time.Time) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *SessionInfoNowViewingItem) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateLastMediaAdded returns the DateLastMediaAdded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetDateLastMediaAdded() time.Time {
	if o == nil || IsNil(o.DateLastMediaAdded.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateLastMediaAdded.Get()
}

// GetDateLastMediaAddedOk returns a tuple with the DateLastMediaAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetDateLastMediaAddedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateLastMediaAdded.Get(), o.DateLastMediaAdded.IsSet()
}

// HasDateLastMediaAdded returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasDateLastMediaAdded() bool {
	if o != nil && o.DateLastMediaAdded.IsSet() {
		return true
	}

	return false
}

// SetDateLastMediaAdded gets a reference to the given NullableTime and assigns it to the DateLastMediaAdded field.
func (o *SessionInfoNowViewingItem) SetDateLastMediaAdded(v time.Time) {
	o.DateLastMediaAdded.Set(&v)
}
// SetDateLastMediaAddedNil sets the value for DateLastMediaAdded to be an explicit nil
func (o *SessionInfoNowViewingItem) SetDateLastMediaAddedNil() {
	o.DateLastMediaAdded.Set(nil)
}

// UnsetDateLastMediaAdded ensures that no value is present for DateLastMediaAdded, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetDateLastMediaAdded() {
	o.DateLastMediaAdded.Unset()
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraType.Get()
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetExtraTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraType.Get(), o.ExtraType.IsSet()
}

// HasExtraType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasExtraType() bool {
	if o != nil && o.ExtraType.IsSet() {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given NullableString and assigns it to the ExtraType field.
func (o *SessionInfoNowViewingItem) SetExtraType(v string) {
	o.ExtraType.Set(&v)
}
// SetExtraTypeNil sets the value for ExtraType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetExtraTypeNil() {
	o.ExtraType.Set(nil)
}

// UnsetExtraType ensures that no value is present for ExtraType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetExtraType() {
	o.ExtraType.Unset()
}

// GetAirsBeforeSeasonNumber returns the AirsBeforeSeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAirsBeforeSeasonNumber() int32 {
	if o == nil || IsNil(o.AirsBeforeSeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsBeforeSeasonNumber.Get()
}

// GetAirsBeforeSeasonNumberOk returns a tuple with the AirsBeforeSeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAirsBeforeSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsBeforeSeasonNumber.Get(), o.AirsBeforeSeasonNumber.IsSet()
}

// HasAirsBeforeSeasonNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAirsBeforeSeasonNumber() bool {
	if o != nil && o.AirsBeforeSeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsBeforeSeasonNumber gets a reference to the given NullableInt32 and assigns it to the AirsBeforeSeasonNumber field.
func (o *SessionInfoNowViewingItem) SetAirsBeforeSeasonNumber(v int32) {
	o.AirsBeforeSeasonNumber.Set(&v)
}
// SetAirsBeforeSeasonNumberNil sets the value for AirsBeforeSeasonNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAirsBeforeSeasonNumberNil() {
	o.AirsBeforeSeasonNumber.Set(nil)
}

// UnsetAirsBeforeSeasonNumber ensures that no value is present for AirsBeforeSeasonNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAirsBeforeSeasonNumber() {
	o.AirsBeforeSeasonNumber.Unset()
}

// GetAirsAfterSeasonNumber returns the AirsAfterSeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAirsAfterSeasonNumber() int32 {
	if o == nil || IsNil(o.AirsAfterSeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsAfterSeasonNumber.Get()
}

// GetAirsAfterSeasonNumberOk returns a tuple with the AirsAfterSeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAirsAfterSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsAfterSeasonNumber.Get(), o.AirsAfterSeasonNumber.IsSet()
}

// HasAirsAfterSeasonNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAirsAfterSeasonNumber() bool {
	if o != nil && o.AirsAfterSeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsAfterSeasonNumber gets a reference to the given NullableInt32 and assigns it to the AirsAfterSeasonNumber field.
func (o *SessionInfoNowViewingItem) SetAirsAfterSeasonNumber(v int32) {
	o.AirsAfterSeasonNumber.Set(&v)
}
// SetAirsAfterSeasonNumberNil sets the value for AirsAfterSeasonNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAirsAfterSeasonNumberNil() {
	o.AirsAfterSeasonNumber.Set(nil)
}

// UnsetAirsAfterSeasonNumber ensures that no value is present for AirsAfterSeasonNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAirsAfterSeasonNumber() {
	o.AirsAfterSeasonNumber.Unset()
}

// GetAirsBeforeEpisodeNumber returns the AirsBeforeEpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAirsBeforeEpisodeNumber() int32 {
	if o == nil || IsNil(o.AirsBeforeEpisodeNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsBeforeEpisodeNumber.Get()
}

// GetAirsBeforeEpisodeNumberOk returns a tuple with the AirsBeforeEpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAirsBeforeEpisodeNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsBeforeEpisodeNumber.Get(), o.AirsBeforeEpisodeNumber.IsSet()
}

// HasAirsBeforeEpisodeNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAirsBeforeEpisodeNumber() bool {
	if o != nil && o.AirsBeforeEpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsBeforeEpisodeNumber gets a reference to the given NullableInt32 and assigns it to the AirsBeforeEpisodeNumber field.
func (o *SessionInfoNowViewingItem) SetAirsBeforeEpisodeNumber(v int32) {
	o.AirsBeforeEpisodeNumber.Set(&v)
}
// SetAirsBeforeEpisodeNumberNil sets the value for AirsBeforeEpisodeNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAirsBeforeEpisodeNumberNil() {
	o.AirsBeforeEpisodeNumber.Set(nil)
}

// UnsetAirsBeforeEpisodeNumber ensures that no value is present for AirsBeforeEpisodeNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAirsBeforeEpisodeNumber() {
	o.AirsBeforeEpisodeNumber.Unset()
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCanDelete() bool {
	if o == nil || IsNil(o.CanDelete.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDelete.Get()
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCanDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDelete.Get(), o.CanDelete.IsSet()
}

// HasCanDelete returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCanDelete() bool {
	if o != nil && o.CanDelete.IsSet() {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given NullableBool and assigns it to the CanDelete field.
func (o *SessionInfoNowViewingItem) SetCanDelete(v bool) {
	o.CanDelete.Set(&v)
}
// SetCanDeleteNil sets the value for CanDelete to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCanDeleteNil() {
	o.CanDelete.Set(nil)
}

// UnsetCanDelete ensures that no value is present for CanDelete, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCanDelete() {
	o.CanDelete.Unset()
}

// GetCanDownload returns the CanDownload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCanDownload() bool {
	if o == nil || IsNil(o.CanDownload.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDownload.Get()
}

// GetCanDownloadOk returns a tuple with the CanDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCanDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDownload.Get(), o.CanDownload.IsSet()
}

// HasCanDownload returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCanDownload() bool {
	if o != nil && o.CanDownload.IsSet() {
		return true
	}

	return false
}

// SetCanDownload gets a reference to the given NullableBool and assigns it to the CanDownload field.
func (o *SessionInfoNowViewingItem) SetCanDownload(v bool) {
	o.CanDownload.Set(&v)
}
// SetCanDownloadNil sets the value for CanDownload to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCanDownloadNil() {
	o.CanDownload.Set(nil)
}

// UnsetCanDownload ensures that no value is present for CanDownload, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCanDownload() {
	o.CanDownload.Unset()
}

// GetHasSubtitles returns the HasSubtitles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetHasSubtitles() bool {
	if o == nil || IsNil(o.HasSubtitles.Get()) {
		var ret bool
		return ret
	}
	return *o.HasSubtitles.Get()
}

// GetHasSubtitlesOk returns a tuple with the HasSubtitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetHasSubtitlesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasSubtitles.Get(), o.HasSubtitles.IsSet()
}

// HasHasSubtitles returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasHasSubtitles() bool {
	if o != nil && o.HasSubtitles.IsSet() {
		return true
	}

	return false
}

// SetHasSubtitles gets a reference to the given NullableBool and assigns it to the HasSubtitles field.
func (o *SessionInfoNowViewingItem) SetHasSubtitles(v bool) {
	o.HasSubtitles.Set(&v)
}
// SetHasSubtitlesNil sets the value for HasSubtitles to be an explicit nil
func (o *SessionInfoNowViewingItem) SetHasSubtitlesNil() {
	o.HasSubtitles.Set(nil)
}

// UnsetHasSubtitles ensures that no value is present for HasSubtitles, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetHasSubtitles() {
	o.HasSubtitles.Unset()
}

// GetPreferredMetadataLanguage returns the PreferredMetadataLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPreferredMetadataLanguage() string {
	if o == nil || IsNil(o.PreferredMetadataLanguage.Get()) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataLanguage.Get()
}

// GetPreferredMetadataLanguageOk returns a tuple with the PreferredMetadataLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPreferredMetadataLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreferredMetadataLanguage.Get(), o.PreferredMetadataLanguage.IsSet()
}

// HasPreferredMetadataLanguage returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPreferredMetadataLanguage() bool {
	if o != nil && o.PreferredMetadataLanguage.IsSet() {
		return true
	}

	return false
}

// SetPreferredMetadataLanguage gets a reference to the given NullableString and assigns it to the PreferredMetadataLanguage field.
func (o *SessionInfoNowViewingItem) SetPreferredMetadataLanguage(v string) {
	o.PreferredMetadataLanguage.Set(&v)
}
// SetPreferredMetadataLanguageNil sets the value for PreferredMetadataLanguage to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPreferredMetadataLanguageNil() {
	o.PreferredMetadataLanguage.Set(nil)
}

// UnsetPreferredMetadataLanguage ensures that no value is present for PreferredMetadataLanguage, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPreferredMetadataLanguage() {
	o.PreferredMetadataLanguage.Unset()
}

// GetPreferredMetadataCountryCode returns the PreferredMetadataCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPreferredMetadataCountryCode() string {
	if o == nil || IsNil(o.PreferredMetadataCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataCountryCode.Get()
}

// GetPreferredMetadataCountryCodeOk returns a tuple with the PreferredMetadataCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPreferredMetadataCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreferredMetadataCountryCode.Get(), o.PreferredMetadataCountryCode.IsSet()
}

// HasPreferredMetadataCountryCode returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPreferredMetadataCountryCode() bool {
	if o != nil && o.PreferredMetadataCountryCode.IsSet() {
		return true
	}

	return false
}

// SetPreferredMetadataCountryCode gets a reference to the given NullableString and assigns it to the PreferredMetadataCountryCode field.
func (o *SessionInfoNowViewingItem) SetPreferredMetadataCountryCode(v string) {
	o.PreferredMetadataCountryCode.Set(&v)
}
// SetPreferredMetadataCountryCodeNil sets the value for PreferredMetadataCountryCode to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPreferredMetadataCountryCodeNil() {
	o.PreferredMetadataCountryCode.Set(nil)
}

// UnsetPreferredMetadataCountryCode ensures that no value is present for PreferredMetadataCountryCode, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPreferredMetadataCountryCode() {
	o.PreferredMetadataCountryCode.Unset()
}

// GetSupportsSync returns the SupportsSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSupportsSync() bool {
	if o == nil || IsNil(o.SupportsSync.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportsSync.Get()
}

// GetSupportsSyncOk returns a tuple with the SupportsSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSupportsSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportsSync.Get(), o.SupportsSync.IsSet()
}

// HasSupportsSync returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSupportsSync() bool {
	if o != nil && o.SupportsSync.IsSet() {
		return true
	}

	return false
}

// SetSupportsSync gets a reference to the given NullableBool and assigns it to the SupportsSync field.
func (o *SessionInfoNowViewingItem) SetSupportsSync(v bool) {
	o.SupportsSync.Set(&v)
}
// SetSupportsSyncNil sets the value for SupportsSync to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSupportsSyncNil() {
	o.SupportsSync.Set(nil)
}

// UnsetSupportsSync ensures that no value is present for SupportsSync, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSupportsSync() {
	o.SupportsSync.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetContainer() string {
	if o == nil || IsNil(o.Container.Get()) {
		var ret string
		return ret
	}
	return *o.Container.Get()
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Container.Get(), o.Container.IsSet()
}

// HasContainer returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasContainer() bool {
	if o != nil && o.Container.IsSet() {
		return true
	}

	return false
}

// SetContainer gets a reference to the given NullableString and assigns it to the Container field.
func (o *SessionInfoNowViewingItem) SetContainer(v string) {
	o.Container.Set(&v)
}
// SetContainerNil sets the value for Container to be an explicit nil
func (o *SessionInfoNowViewingItem) SetContainerNil() {
	o.Container.Set(nil)
}

// UnsetContainer ensures that no value is present for Container, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetContainer() {
	o.Container.Unset()
}

// GetSortName returns the SortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSortName() string {
	if o == nil || IsNil(o.SortName.Get()) {
		var ret string
		return ret
	}
	return *o.SortName.Get()
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortName.Get(), o.SortName.IsSet()
}

// HasSortName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSortName() bool {
	if o != nil && o.SortName.IsSet() {
		return true
	}

	return false
}

// SetSortName gets a reference to the given NullableString and assigns it to the SortName field.
func (o *SessionInfoNowViewingItem) SetSortName(v string) {
	o.SortName.Set(&v)
}
// SetSortNameNil sets the value for SortName to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSortNameNil() {
	o.SortName.Set(nil)
}

// UnsetSortName ensures that no value is present for SortName, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSortName() {
	o.SortName.Unset()
}

// GetForcedSortName returns the ForcedSortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetForcedSortName() string {
	if o == nil || IsNil(o.ForcedSortName.Get()) {
		var ret string
		return ret
	}
	return *o.ForcedSortName.Get()
}

// GetForcedSortNameOk returns a tuple with the ForcedSortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetForcedSortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForcedSortName.Get(), o.ForcedSortName.IsSet()
}

// HasForcedSortName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasForcedSortName() bool {
	if o != nil && o.ForcedSortName.IsSet() {
		return true
	}

	return false
}

// SetForcedSortName gets a reference to the given NullableString and assigns it to the ForcedSortName field.
func (o *SessionInfoNowViewingItem) SetForcedSortName(v string) {
	o.ForcedSortName.Set(&v)
}
// SetForcedSortNameNil sets the value for ForcedSortName to be an explicit nil
func (o *SessionInfoNowViewingItem) SetForcedSortNameNil() {
	o.ForcedSortName.Set(nil)
}

// UnsetForcedSortName ensures that no value is present for ForcedSortName, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetForcedSortName() {
	o.ForcedSortName.Unset()
}

// GetVideo3DFormat returns the Video3DFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetVideo3DFormat() Video3DFormat {
	if o == nil || IsNil(o.Video3DFormat.Get()) {
		var ret Video3DFormat
		return ret
	}
	return *o.Video3DFormat.Get()
}

// GetVideo3DFormatOk returns a tuple with the Video3DFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetVideo3DFormatOk() (*Video3DFormat, bool) {
	if o == nil {
		return nil, false
	}
	return o.Video3DFormat.Get(), o.Video3DFormat.IsSet()
}

// HasVideo3DFormat returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasVideo3DFormat() bool {
	if o != nil && o.Video3DFormat.IsSet() {
		return true
	}

	return false
}

// SetVideo3DFormat gets a reference to the given NullableVideo3DFormat and assigns it to the Video3DFormat field.
func (o *SessionInfoNowViewingItem) SetVideo3DFormat(v Video3DFormat) {
	o.Video3DFormat.Set(&v)
}
// SetVideo3DFormatNil sets the value for Video3DFormat to be an explicit nil
func (o *SessionInfoNowViewingItem) SetVideo3DFormatNil() {
	o.Video3DFormat.Set(nil)
}

// UnsetVideo3DFormat ensures that no value is present for Video3DFormat, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetVideo3DFormat() {
	o.Video3DFormat.Unset()
}

// GetPremiereDate returns the PremiereDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPremiereDate() time.Time {
	if o == nil || IsNil(o.PremiereDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PremiereDate.Get()
}

// GetPremiereDateOk returns a tuple with the PremiereDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPremiereDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PremiereDate.Get(), o.PremiereDate.IsSet()
}

// HasPremiereDate returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPremiereDate() bool {
	if o != nil && o.PremiereDate.IsSet() {
		return true
	}

	return false
}

// SetPremiereDate gets a reference to the given NullableTime and assigns it to the PremiereDate field.
func (o *SessionInfoNowViewingItem) SetPremiereDate(v time.Time) {
	o.PremiereDate.Set(&v)
}
// SetPremiereDateNil sets the value for PremiereDate to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPremiereDateNil() {
	o.PremiereDate.Set(nil)
}

// UnsetPremiereDate ensures that no value is present for PremiereDate, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPremiereDate() {
	o.PremiereDate.Unset()
}

// GetExternalUrls returns the ExternalUrls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetExternalUrls() []ExternalUrl {
	if o == nil {
		var ret []ExternalUrl
		return ret
	}
	return o.ExternalUrls
}

// GetExternalUrlsOk returns a tuple with the ExternalUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetExternalUrlsOk() ([]ExternalUrl, bool) {
	if o == nil || IsNil(o.ExternalUrls) {
		return nil, false
	}
	return o.ExternalUrls, true
}

// HasExternalUrls returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasExternalUrls() bool {
	if o != nil && !IsNil(o.ExternalUrls) {
		return true
	}

	return false
}

// SetExternalUrls gets a reference to the given []ExternalUrl and assigns it to the ExternalUrls field.
func (o *SessionInfoNowViewingItem) SetExternalUrls(v []ExternalUrl) {
	o.ExternalUrls = v
}

// GetMediaSources returns the MediaSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMediaSources() []MediaSourceInfo {
	if o == nil {
		var ret []MediaSourceInfo
		return ret
	}
	return o.MediaSources
}

// GetMediaSourcesOk returns a tuple with the MediaSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMediaSourcesOk() ([]MediaSourceInfo, bool) {
	if o == nil || IsNil(o.MediaSources) {
		return nil, false
	}
	return o.MediaSources, true
}

// HasMediaSources returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMediaSources() bool {
	if o != nil && !IsNil(o.MediaSources) {
		return true
	}

	return false
}

// SetMediaSources gets a reference to the given []MediaSourceInfo and assigns it to the MediaSources field.
func (o *SessionInfoNowViewingItem) SetMediaSources(v []MediaSourceInfo) {
	o.MediaSources = v
}

// GetCriticRating returns the CriticRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCriticRating() float32 {
	if o == nil || IsNil(o.CriticRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CriticRating.Get()
}

// GetCriticRatingOk returns a tuple with the CriticRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCriticRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CriticRating.Get(), o.CriticRating.IsSet()
}

// HasCriticRating returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCriticRating() bool {
	if o != nil && o.CriticRating.IsSet() {
		return true
	}

	return false
}

// SetCriticRating gets a reference to the given NullableFloat32 and assigns it to the CriticRating field.
func (o *SessionInfoNowViewingItem) SetCriticRating(v float32) {
	o.CriticRating.Set(&v)
}
// SetCriticRatingNil sets the value for CriticRating to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCriticRatingNil() {
	o.CriticRating.Set(nil)
}

// UnsetCriticRating ensures that no value is present for CriticRating, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCriticRating() {
	o.CriticRating.Unset()
}

// GetProductionLocations returns the ProductionLocations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetProductionLocations() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProductionLocations
}

// GetProductionLocationsOk returns a tuple with the ProductionLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetProductionLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductionLocations) {
		return nil, false
	}
	return o.ProductionLocations, true
}

// HasProductionLocations returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasProductionLocations() bool {
	if o != nil && !IsNil(o.ProductionLocations) {
		return true
	}

	return false
}

// SetProductionLocations gets a reference to the given []string and assigns it to the ProductionLocations field.
func (o *SessionInfoNowViewingItem) SetProductionLocations(v []string) {
	o.ProductionLocations = v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *SessionInfoNowViewingItem) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPath() {
	o.Path.Unset()
}

// GetEnableMediaSourceDisplay returns the EnableMediaSourceDisplay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetEnableMediaSourceDisplay() bool {
	if o == nil || IsNil(o.EnableMediaSourceDisplay.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMediaSourceDisplay.Get()
}

// GetEnableMediaSourceDisplayOk returns a tuple with the EnableMediaSourceDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetEnableMediaSourceDisplayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMediaSourceDisplay.Get(), o.EnableMediaSourceDisplay.IsSet()
}

// HasEnableMediaSourceDisplay returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasEnableMediaSourceDisplay() bool {
	if o != nil && o.EnableMediaSourceDisplay.IsSet() {
		return true
	}

	return false
}

// SetEnableMediaSourceDisplay gets a reference to the given NullableBool and assigns it to the EnableMediaSourceDisplay field.
func (o *SessionInfoNowViewingItem) SetEnableMediaSourceDisplay(v bool) {
	o.EnableMediaSourceDisplay.Set(&v)
}
// SetEnableMediaSourceDisplayNil sets the value for EnableMediaSourceDisplay to be an explicit nil
func (o *SessionInfoNowViewingItem) SetEnableMediaSourceDisplayNil() {
	o.EnableMediaSourceDisplay.Set(nil)
}

// UnsetEnableMediaSourceDisplay ensures that no value is present for EnableMediaSourceDisplay, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetEnableMediaSourceDisplay() {
	o.EnableMediaSourceDisplay.Unset()
}

// GetOfficialRating returns the OfficialRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetOfficialRating() string {
	if o == nil || IsNil(o.OfficialRating.Get()) {
		var ret string
		return ret
	}
	return *o.OfficialRating.Get()
}

// GetOfficialRatingOk returns a tuple with the OfficialRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetOfficialRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OfficialRating.Get(), o.OfficialRating.IsSet()
}

// HasOfficialRating returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasOfficialRating() bool {
	if o != nil && o.OfficialRating.IsSet() {
		return true
	}

	return false
}

// SetOfficialRating gets a reference to the given NullableString and assigns it to the OfficialRating field.
func (o *SessionInfoNowViewingItem) SetOfficialRating(v string) {
	o.OfficialRating.Set(&v)
}
// SetOfficialRatingNil sets the value for OfficialRating to be an explicit nil
func (o *SessionInfoNowViewingItem) SetOfficialRatingNil() {
	o.OfficialRating.Set(nil)
}

// UnsetOfficialRating ensures that no value is present for OfficialRating, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetOfficialRating() {
	o.OfficialRating.Unset()
}

// GetCustomRating returns the CustomRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCustomRating() string {
	if o == nil || IsNil(o.CustomRating.Get()) {
		var ret string
		return ret
	}
	return *o.CustomRating.Get()
}

// GetCustomRatingOk returns a tuple with the CustomRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCustomRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomRating.Get(), o.CustomRating.IsSet()
}

// HasCustomRating returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCustomRating() bool {
	if o != nil && o.CustomRating.IsSet() {
		return true
	}

	return false
}

// SetCustomRating gets a reference to the given NullableString and assigns it to the CustomRating field.
func (o *SessionInfoNowViewingItem) SetCustomRating(v string) {
	o.CustomRating.Set(&v)
}
// SetCustomRatingNil sets the value for CustomRating to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCustomRatingNil() {
	o.CustomRating.Set(nil)
}

// UnsetCustomRating ensures that no value is present for CustomRating, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCustomRating() {
	o.CustomRating.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *SessionInfoNowViewingItem) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *SessionInfoNowViewingItem) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *SessionInfoNowViewingItem) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *SessionInfoNowViewingItem) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetOverview() {
	o.Overview.Unset()
}

// GetTaglines returns the Taglines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetTaglines() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Taglines
}

// GetTaglinesOk returns a tuple with the Taglines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetTaglinesOk() ([]string, bool) {
	if o == nil || IsNil(o.Taglines) {
		return nil, false
	}
	return o.Taglines, true
}

// HasTaglines returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasTaglines() bool {
	if o != nil && !IsNil(o.Taglines) {
		return true
	}

	return false
}

// SetTaglines gets a reference to the given []string and assigns it to the Taglines field.
func (o *SessionInfoNowViewingItem) SetTaglines(v []string) {
	o.Taglines = v
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetGenres() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasGenres() bool {
	if o != nil && !IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *SessionInfoNowViewingItem) SetGenres(v []string) {
	o.Genres = v
}

// GetCommunityRating returns the CommunityRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCommunityRating() float32 {
	if o == nil || IsNil(o.CommunityRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CommunityRating.Get()
}

// GetCommunityRatingOk returns a tuple with the CommunityRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCommunityRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunityRating.Get(), o.CommunityRating.IsSet()
}

// HasCommunityRating returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCommunityRating() bool {
	if o != nil && o.CommunityRating.IsSet() {
		return true
	}

	return false
}

// SetCommunityRating gets a reference to the given NullableFloat32 and assigns it to the CommunityRating field.
func (o *SessionInfoNowViewingItem) SetCommunityRating(v float32) {
	o.CommunityRating.Set(&v)
}
// SetCommunityRatingNil sets the value for CommunityRating to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCommunityRatingNil() {
	o.CommunityRating.Set(nil)
}

// UnsetCommunityRating ensures that no value is present for CommunityRating, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCommunityRating() {
	o.CommunityRating.Unset()
}

// GetCumulativeRunTimeTicks returns the CumulativeRunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCumulativeRunTimeTicks() int64 {
	if o == nil || IsNil(o.CumulativeRunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.CumulativeRunTimeTicks.Get()
}

// GetCumulativeRunTimeTicksOk returns a tuple with the CumulativeRunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCumulativeRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeRunTimeTicks.Get(), o.CumulativeRunTimeTicks.IsSet()
}

// HasCumulativeRunTimeTicks returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCumulativeRunTimeTicks() bool {
	if o != nil && o.CumulativeRunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetCumulativeRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the CumulativeRunTimeTicks field.
func (o *SessionInfoNowViewingItem) SetCumulativeRunTimeTicks(v int64) {
	o.CumulativeRunTimeTicks.Set(&v)
}
// SetCumulativeRunTimeTicksNil sets the value for CumulativeRunTimeTicks to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCumulativeRunTimeTicksNil() {
	o.CumulativeRunTimeTicks.Set(nil)
}

// UnsetCumulativeRunTimeTicks ensures that no value is present for CumulativeRunTimeTicks, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCumulativeRunTimeTicks() {
	o.CumulativeRunTimeTicks.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *SessionInfoNowViewingItem) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *SessionInfoNowViewingItem) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetPlayAccess returns the PlayAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPlayAccess() PlayAccess {
	if o == nil || IsNil(o.PlayAccess.Get()) {
		var ret PlayAccess
		return ret
	}
	return *o.PlayAccess.Get()
}

// GetPlayAccessOk returns a tuple with the PlayAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPlayAccessOk() (*PlayAccess, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlayAccess.Get(), o.PlayAccess.IsSet()
}

// HasPlayAccess returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPlayAccess() bool {
	if o != nil && o.PlayAccess.IsSet() {
		return true
	}

	return false
}

// SetPlayAccess gets a reference to the given NullablePlayAccess and assigns it to the PlayAccess field.
func (o *SessionInfoNowViewingItem) SetPlayAccess(v PlayAccess) {
	o.PlayAccess.Set(&v)
}
// SetPlayAccessNil sets the value for PlayAccess to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPlayAccessNil() {
	o.PlayAccess.Set(nil)
}

// UnsetPlayAccess ensures that no value is present for PlayAccess, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPlayAccess() {
	o.PlayAccess.Unset()
}

// GetAspectRatio returns the AspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAspectRatio() string {
	if o == nil || IsNil(o.AspectRatio.Get()) {
		var ret string
		return ret
	}
	return *o.AspectRatio.Get()
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAspectRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AspectRatio.Get(), o.AspectRatio.IsSet()
}

// HasAspectRatio returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAspectRatio() bool {
	if o != nil && o.AspectRatio.IsSet() {
		return true
	}

	return false
}

// SetAspectRatio gets a reference to the given NullableString and assigns it to the AspectRatio field.
func (o *SessionInfoNowViewingItem) SetAspectRatio(v string) {
	o.AspectRatio.Set(&v)
}
// SetAspectRatioNil sets the value for AspectRatio to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAspectRatioNil() {
	o.AspectRatio.Set(nil)
}

// UnsetAspectRatio ensures that no value is present for AspectRatio, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAspectRatio() {
	o.AspectRatio.Unset()
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *SessionInfoNowViewingItem) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *SessionInfoNowViewingItem) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetIsPlaceHolder returns the IsPlaceHolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsPlaceHolder() bool {
	if o == nil || IsNil(o.IsPlaceHolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPlaceHolder.Get()
}

// GetIsPlaceHolderOk returns a tuple with the IsPlaceHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsPlaceHolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPlaceHolder.Get(), o.IsPlaceHolder.IsSet()
}

// HasIsPlaceHolder returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsPlaceHolder() bool {
	if o != nil && o.IsPlaceHolder.IsSet() {
		return true
	}

	return false
}

// SetIsPlaceHolder gets a reference to the given NullableBool and assigns it to the IsPlaceHolder field.
func (o *SessionInfoNowViewingItem) SetIsPlaceHolder(v bool) {
	o.IsPlaceHolder.Set(&v)
}
// SetIsPlaceHolderNil sets the value for IsPlaceHolder to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsPlaceHolderNil() {
	o.IsPlaceHolder.Set(nil)
}

// UnsetIsPlaceHolder ensures that no value is present for IsPlaceHolder, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsPlaceHolder() {
	o.IsPlaceHolder.Unset()
}

// GetNumber returns the Number field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetNumber() string {
	if o == nil || IsNil(o.Number.Get()) {
		var ret string
		return ret
	}
	return *o.Number.Get()
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Number.Get(), o.Number.IsSet()
}

// HasNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasNumber() bool {
	if o != nil && o.Number.IsSet() {
		return true
	}

	return false
}

// SetNumber gets a reference to the given NullableString and assigns it to the Number field.
func (o *SessionInfoNowViewingItem) SetNumber(v string) {
	o.Number.Set(&v)
}
// SetNumberNil sets the value for Number to be an explicit nil
func (o *SessionInfoNowViewingItem) SetNumberNil() {
	o.Number.Set(nil)
}

// UnsetNumber ensures that no value is present for Number, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetNumber() {
	o.Number.Unset()
}

// GetChannelNumber returns the ChannelNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChannelNumber() string {
	if o == nil || IsNil(o.ChannelNumber.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelNumber.Get()
}

// GetChannelNumberOk returns a tuple with the ChannelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChannelNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelNumber.Get(), o.ChannelNumber.IsSet()
}

// HasChannelNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChannelNumber() bool {
	if o != nil && o.ChannelNumber.IsSet() {
		return true
	}

	return false
}

// SetChannelNumber gets a reference to the given NullableString and assigns it to the ChannelNumber field.
func (o *SessionInfoNowViewingItem) SetChannelNumber(v string) {
	o.ChannelNumber.Set(&v)
}
// SetChannelNumberNil sets the value for ChannelNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChannelNumberNil() {
	o.ChannelNumber.Set(nil)
}

// UnsetChannelNumber ensures that no value is present for ChannelNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChannelNumber() {
	o.ChannelNumber.Unset()
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *SessionInfoNowViewingItem) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetIndexNumberEnd returns the IndexNumberEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIndexNumberEnd() int32 {
	if o == nil || IsNil(o.IndexNumberEnd.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumberEnd.Get()
}

// GetIndexNumberEndOk returns a tuple with the IndexNumberEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIndexNumberEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumberEnd.Get(), o.IndexNumberEnd.IsSet()
}

// HasIndexNumberEnd returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIndexNumberEnd() bool {
	if o != nil && o.IndexNumberEnd.IsSet() {
		return true
	}

	return false
}

// SetIndexNumberEnd gets a reference to the given NullableInt32 and assigns it to the IndexNumberEnd field.
func (o *SessionInfoNowViewingItem) SetIndexNumberEnd(v int32) {
	o.IndexNumberEnd.Set(&v)
}
// SetIndexNumberEndNil sets the value for IndexNumberEnd to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIndexNumberEndNil() {
	o.IndexNumberEnd.Set(nil)
}

// UnsetIndexNumberEnd ensures that no value is present for IndexNumberEnd, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIndexNumberEnd() {
	o.IndexNumberEnd.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *SessionInfoNowViewingItem) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetRemoteTrailers returns the RemoteTrailers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetRemoteTrailers() []MediaUrl {
	if o == nil {
		var ret []MediaUrl
		return ret
	}
	return o.RemoteTrailers
}

// GetRemoteTrailersOk returns a tuple with the RemoteTrailers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetRemoteTrailersOk() ([]MediaUrl, bool) {
	if o == nil || IsNil(o.RemoteTrailers) {
		return nil, false
	}
	return o.RemoteTrailers, true
}

// HasRemoteTrailers returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasRemoteTrailers() bool {
	if o != nil && !IsNil(o.RemoteTrailers) {
		return true
	}

	return false
}

// SetRemoteTrailers gets a reference to the given []MediaUrl and assigns it to the RemoteTrailers field.
func (o *SessionInfoNowViewingItem) SetRemoteTrailers(v []MediaUrl) {
	o.RemoteTrailers = v
}

// GetProviderIds returns the ProviderIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetProviderIds() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ProviderIds
}

// GetProviderIdsOk returns a tuple with the ProviderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetProviderIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProviderIds) {
		return nil, false
	}
	return &o.ProviderIds, true
}

// HasProviderIds returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasProviderIds() bool {
	if o != nil && !IsNil(o.ProviderIds) {
		return true
	}

	return false
}

// SetProviderIds gets a reference to the given map[string]string and assigns it to the ProviderIds field.
func (o *SessionInfoNowViewingItem) SetProviderIds(v map[string]string) {
	o.ProviderIds = v
}

// GetIsHD returns the IsHD field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsHD() bool {
	if o == nil || IsNil(o.IsHD.Get()) {
		var ret bool
		return ret
	}
	return *o.IsHD.Get()
}

// GetIsHDOk returns a tuple with the IsHD field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsHDOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsHD.Get(), o.IsHD.IsSet()
}

// HasIsHD returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsHD() bool {
	if o != nil && o.IsHD.IsSet() {
		return true
	}

	return false
}

// SetIsHD gets a reference to the given NullableBool and assigns it to the IsHD field.
func (o *SessionInfoNowViewingItem) SetIsHD(v bool) {
	o.IsHD.Set(&v)
}
// SetIsHDNil sets the value for IsHD to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsHDNil() {
	o.IsHD.Set(nil)
}

// UnsetIsHD ensures that no value is present for IsHD, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsHD() {
	o.IsHD.Unset()
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFolder.Get()
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsFolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFolder.Get(), o.IsFolder.IsSet()
}

// HasIsFolder returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsFolder() bool {
	if o != nil && o.IsFolder.IsSet() {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given NullableBool and assigns it to the IsFolder field.
func (o *SessionInfoNowViewingItem) SetIsFolder(v bool) {
	o.IsFolder.Set(&v)
}
// SetIsFolderNil sets the value for IsFolder to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsFolderNil() {
	o.IsFolder.Set(nil)
}

// UnsetIsFolder ensures that no value is present for IsFolder, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsFolder() {
	o.IsFolder.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *SessionInfoNowViewingItem) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentId() {
	o.ParentId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SessionInfoNowViewingItem) GetType() BaseItemKind {
	if o == nil || IsNil(o.Type) {
		var ret BaseItemKind
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfoNowViewingItem) GetTypeOk() (*BaseItemKind, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BaseItemKind and assigns it to the Type field.
func (o *SessionInfoNowViewingItem) SetType(v BaseItemKind) {
	o.Type = &v
}

// GetPeople returns the People field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPeople() []BaseItemPerson {
	if o == nil {
		var ret []BaseItemPerson
		return ret
	}
	return o.People
}

// GetPeopleOk returns a tuple with the People field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPeopleOk() ([]BaseItemPerson, bool) {
	if o == nil || IsNil(o.People) {
		return nil, false
	}
	return o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPeople() bool {
	if o != nil && !IsNil(o.People) {
		return true
	}

	return false
}

// SetPeople gets a reference to the given []BaseItemPerson and assigns it to the People field.
func (o *SessionInfoNowViewingItem) SetPeople(v []BaseItemPerson) {
	o.People = v
}

// GetStudios returns the Studios field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetStudios() []NameGuidPair {
	if o == nil {
		var ret []NameGuidPair
		return ret
	}
	return o.Studios
}

// GetStudiosOk returns a tuple with the Studios field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetStudiosOk() ([]NameGuidPair, bool) {
	if o == nil || IsNil(o.Studios) {
		return nil, false
	}
	return o.Studios, true
}

// HasStudios returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasStudios() bool {
	if o != nil && !IsNil(o.Studios) {
		return true
	}

	return false
}

// SetStudios gets a reference to the given []NameGuidPair and assigns it to the Studios field.
func (o *SessionInfoNowViewingItem) SetStudios(v []NameGuidPair) {
	o.Studios = v
}

// GetGenreItems returns the GenreItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetGenreItems() []NameGuidPair {
	if o == nil {
		var ret []NameGuidPair
		return ret
	}
	return o.GenreItems
}

// GetGenreItemsOk returns a tuple with the GenreItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetGenreItemsOk() ([]NameGuidPair, bool) {
	if o == nil || IsNil(o.GenreItems) {
		return nil, false
	}
	return o.GenreItems, true
}

// HasGenreItems returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasGenreItems() bool {
	if o != nil && !IsNil(o.GenreItems) {
		return true
	}

	return false
}

// SetGenreItems gets a reference to the given []NameGuidPair and assigns it to the GenreItems field.
func (o *SessionInfoNowViewingItem) SetGenreItems(v []NameGuidPair) {
	o.GenreItems = v
}

// GetParentLogoItemId returns the ParentLogoItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentLogoItemId() string {
	if o == nil || IsNil(o.ParentLogoItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentLogoItemId.Get()
}

// GetParentLogoItemIdOk returns a tuple with the ParentLogoItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentLogoItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentLogoItemId.Get(), o.ParentLogoItemId.IsSet()
}

// HasParentLogoItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentLogoItemId() bool {
	if o != nil && o.ParentLogoItemId.IsSet() {
		return true
	}

	return false
}

// SetParentLogoItemId gets a reference to the given NullableString and assigns it to the ParentLogoItemId field.
func (o *SessionInfoNowViewingItem) SetParentLogoItemId(v string) {
	o.ParentLogoItemId.Set(&v)
}
// SetParentLogoItemIdNil sets the value for ParentLogoItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentLogoItemIdNil() {
	o.ParentLogoItemId.Set(nil)
}

// UnsetParentLogoItemId ensures that no value is present for ParentLogoItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentLogoItemId() {
	o.ParentLogoItemId.Unset()
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId.Get()
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBackdropItemId.Get(), o.ParentBackdropItemId.IsSet()
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentBackdropItemId() bool {
	if o != nil && o.ParentBackdropItemId.IsSet() {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given NullableString and assigns it to the ParentBackdropItemId field.
func (o *SessionInfoNowViewingItem) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId.Set(&v)
}
// SetParentBackdropItemIdNil sets the value for ParentBackdropItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentBackdropItemIdNil() {
	o.ParentBackdropItemId.Set(nil)
}

// UnsetParentBackdropItemId ensures that no value is present for ParentBackdropItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentBackdropItemId() {
	o.ParentBackdropItemId.Unset()
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentBackdropImageTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *SessionInfoNowViewingItem) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetLocalTrailerCount returns the LocalTrailerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLocalTrailerCount() int32 {
	if o == nil || IsNil(o.LocalTrailerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.LocalTrailerCount.Get()
}

// GetLocalTrailerCountOk returns a tuple with the LocalTrailerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLocalTrailerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTrailerCount.Get(), o.LocalTrailerCount.IsSet()
}

// HasLocalTrailerCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLocalTrailerCount() bool {
	if o != nil && o.LocalTrailerCount.IsSet() {
		return true
	}

	return false
}

// SetLocalTrailerCount gets a reference to the given NullableInt32 and assigns it to the LocalTrailerCount field.
func (o *SessionInfoNowViewingItem) SetLocalTrailerCount(v int32) {
	o.LocalTrailerCount.Set(&v)
}
// SetLocalTrailerCountNil sets the value for LocalTrailerCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetLocalTrailerCountNil() {
	o.LocalTrailerCount.Set(nil)
}

// UnsetLocalTrailerCount ensures that no value is present for LocalTrailerCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetLocalTrailerCount() {
	o.LocalTrailerCount.Unset()
}

// GetUserData returns the UserData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetUserData() BaseItemDtoUserData {
	if o == nil || IsNil(o.UserData.Get()) {
		var ret BaseItemDtoUserData
		return ret
	}
	return *o.UserData.Get()
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetUserDataOk() (*BaseItemDtoUserData, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserData.Get(), o.UserData.IsSet()
}

// HasUserData returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasUserData() bool {
	if o != nil && o.UserData.IsSet() {
		return true
	}

	return false
}

// SetUserData gets a reference to the given NullableBaseItemDtoUserData and assigns it to the UserData field.
func (o *SessionInfoNowViewingItem) SetUserData(v BaseItemDtoUserData) {
	o.UserData.Set(&v)
}
// SetUserDataNil sets the value for UserData to be an explicit nil
func (o *SessionInfoNowViewingItem) SetUserDataNil() {
	o.UserData.Set(nil)
}

// UnsetUserData ensures that no value is present for UserData, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetUserData() {
	o.UserData.Unset()
}

// GetRecursiveItemCount returns the RecursiveItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetRecursiveItemCount() int32 {
	if o == nil || IsNil(o.RecursiveItemCount.Get()) {
		var ret int32
		return ret
	}
	return *o.RecursiveItemCount.Get()
}

// GetRecursiveItemCountOk returns a tuple with the RecursiveItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetRecursiveItemCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecursiveItemCount.Get(), o.RecursiveItemCount.IsSet()
}

// HasRecursiveItemCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasRecursiveItemCount() bool {
	if o != nil && o.RecursiveItemCount.IsSet() {
		return true
	}

	return false
}

// SetRecursiveItemCount gets a reference to the given NullableInt32 and assigns it to the RecursiveItemCount field.
func (o *SessionInfoNowViewingItem) SetRecursiveItemCount(v int32) {
	o.RecursiveItemCount.Set(&v)
}
// SetRecursiveItemCountNil sets the value for RecursiveItemCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetRecursiveItemCountNil() {
	o.RecursiveItemCount.Set(nil)
}

// UnsetRecursiveItemCount ensures that no value is present for RecursiveItemCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetRecursiveItemCount() {
	o.RecursiveItemCount.Unset()
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChildCount() int32 {
	if o == nil || IsNil(o.ChildCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ChildCount.Get()
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChildCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChildCount.Get(), o.ChildCount.IsSet()
}

// HasChildCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChildCount() bool {
	if o != nil && o.ChildCount.IsSet() {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given NullableInt32 and assigns it to the ChildCount field.
func (o *SessionInfoNowViewingItem) SetChildCount(v int32) {
	o.ChildCount.Set(&v)
}
// SetChildCountNil sets the value for ChildCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChildCountNil() {
	o.ChildCount.Set(nil)
}

// UnsetChildCount ensures that no value is present for ChildCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChildCount() {
	o.ChildCount.Unset()
}

// GetSeriesName returns the SeriesName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesName() string {
	if o == nil || IsNil(o.SeriesName.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesName.Get()
}

// GetSeriesNameOk returns a tuple with the SeriesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesName.Get(), o.SeriesName.IsSet()
}

// HasSeriesName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesName() bool {
	if o != nil && o.SeriesName.IsSet() {
		return true
	}

	return false
}

// SetSeriesName gets a reference to the given NullableString and assigns it to the SeriesName field.
func (o *SessionInfoNowViewingItem) SetSeriesName(v string) {
	o.SeriesName.Set(&v)
}
// SetSeriesNameNil sets the value for SeriesName to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesNameNil() {
	o.SeriesName.Set(nil)
}

// UnsetSeriesName ensures that no value is present for SeriesName, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesName() {
	o.SeriesName.Unset()
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesId() string {
	if o == nil || IsNil(o.SeriesId.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesId.Get()
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesId.Get(), o.SeriesId.IsSet()
}

// HasSeriesId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesId() bool {
	if o != nil && o.SeriesId.IsSet() {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given NullableString and assigns it to the SeriesId field.
func (o *SessionInfoNowViewingItem) SetSeriesId(v string) {
	o.SeriesId.Set(&v)
}
// SetSeriesIdNil sets the value for SeriesId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesIdNil() {
	o.SeriesId.Set(nil)
}

// UnsetSeriesId ensures that no value is present for SeriesId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesId() {
	o.SeriesId.Unset()
}

// GetSeasonId returns the SeasonId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeasonId() string {
	if o == nil || IsNil(o.SeasonId.Get()) {
		var ret string
		return ret
	}
	return *o.SeasonId.Get()
}

// GetSeasonIdOk returns a tuple with the SeasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeasonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeasonId.Get(), o.SeasonId.IsSet()
}

// HasSeasonId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeasonId() bool {
	if o != nil && o.SeasonId.IsSet() {
		return true
	}

	return false
}

// SetSeasonId gets a reference to the given NullableString and assigns it to the SeasonId field.
func (o *SessionInfoNowViewingItem) SetSeasonId(v string) {
	o.SeasonId.Set(&v)
}
// SetSeasonIdNil sets the value for SeasonId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeasonIdNil() {
	o.SeasonId.Set(nil)
}

// UnsetSeasonId ensures that no value is present for SeasonId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeasonId() {
	o.SeasonId.Unset()
}

// GetSpecialFeatureCount returns the SpecialFeatureCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSpecialFeatureCount() int32 {
	if o == nil || IsNil(o.SpecialFeatureCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SpecialFeatureCount.Get()
}

// GetSpecialFeatureCountOk returns a tuple with the SpecialFeatureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSpecialFeatureCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecialFeatureCount.Get(), o.SpecialFeatureCount.IsSet()
}

// HasSpecialFeatureCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSpecialFeatureCount() bool {
	if o != nil && o.SpecialFeatureCount.IsSet() {
		return true
	}

	return false
}

// SetSpecialFeatureCount gets a reference to the given NullableInt32 and assigns it to the SpecialFeatureCount field.
func (o *SessionInfoNowViewingItem) SetSpecialFeatureCount(v int32) {
	o.SpecialFeatureCount.Set(&v)
}
// SetSpecialFeatureCountNil sets the value for SpecialFeatureCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSpecialFeatureCountNil() {
	o.SpecialFeatureCount.Set(nil)
}

// UnsetSpecialFeatureCount ensures that no value is present for SpecialFeatureCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSpecialFeatureCount() {
	o.SpecialFeatureCount.Unset()
}

// GetDisplayPreferencesId returns the DisplayPreferencesId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetDisplayPreferencesId() string {
	if o == nil || IsNil(o.DisplayPreferencesId.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayPreferencesId.Get()
}

// GetDisplayPreferencesIdOk returns a tuple with the DisplayPreferencesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetDisplayPreferencesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayPreferencesId.Get(), o.DisplayPreferencesId.IsSet()
}

// HasDisplayPreferencesId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasDisplayPreferencesId() bool {
	if o != nil && o.DisplayPreferencesId.IsSet() {
		return true
	}

	return false
}

// SetDisplayPreferencesId gets a reference to the given NullableString and assigns it to the DisplayPreferencesId field.
func (o *SessionInfoNowViewingItem) SetDisplayPreferencesId(v string) {
	o.DisplayPreferencesId.Set(&v)
}
// SetDisplayPreferencesIdNil sets the value for DisplayPreferencesId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetDisplayPreferencesIdNil() {
	o.DisplayPreferencesId.Set(nil)
}

// UnsetDisplayPreferencesId ensures that no value is present for DisplayPreferencesId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetDisplayPreferencesId() {
	o.DisplayPreferencesId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *SessionInfoNowViewingItem) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *SessionInfoNowViewingItem) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetStatus() {
	o.Status.Unset()
}

// GetAirTime returns the AirTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAirTime() string {
	if o == nil || IsNil(o.AirTime.Get()) {
		var ret string
		return ret
	}
	return *o.AirTime.Get()
}

// GetAirTimeOk returns a tuple with the AirTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAirTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirTime.Get(), o.AirTime.IsSet()
}

// HasAirTime returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAirTime() bool {
	if o != nil && o.AirTime.IsSet() {
		return true
	}

	return false
}

// SetAirTime gets a reference to the given NullableString and assigns it to the AirTime field.
func (o *SessionInfoNowViewingItem) SetAirTime(v string) {
	o.AirTime.Set(&v)
}
// SetAirTimeNil sets the value for AirTime to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAirTimeNil() {
	o.AirTime.Set(nil)
}

// UnsetAirTime ensures that no value is present for AirTime, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAirTime() {
	o.AirTime.Unset()
}

// GetAirDays returns the AirDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAirDays() []DayOfWeek {
	if o == nil {
		var ret []DayOfWeek
		return ret
	}
	return o.AirDays
}

// GetAirDaysOk returns a tuple with the AirDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAirDaysOk() ([]DayOfWeek, bool) {
	if o == nil || IsNil(o.AirDays) {
		return nil, false
	}
	return o.AirDays, true
}

// HasAirDays returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAirDays() bool {
	if o != nil && !IsNil(o.AirDays) {
		return true
	}

	return false
}

// SetAirDays gets a reference to the given []DayOfWeek and assigns it to the AirDays field.
func (o *SessionInfoNowViewingItem) SetAirDays(v []DayOfWeek) {
	o.AirDays = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SessionInfoNowViewingItem) SetTags(v []string) {
	o.Tags = v
}

// GetPrimaryImageAspectRatio returns the PrimaryImageAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPrimaryImageAspectRatio() float64 {
	if o == nil || IsNil(o.PrimaryImageAspectRatio.Get()) {
		var ret float64
		return ret
	}
	return *o.PrimaryImageAspectRatio.Get()
}

// GetPrimaryImageAspectRatioOk returns a tuple with the PrimaryImageAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPrimaryImageAspectRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageAspectRatio.Get(), o.PrimaryImageAspectRatio.IsSet()
}

// HasPrimaryImageAspectRatio returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPrimaryImageAspectRatio() bool {
	if o != nil && o.PrimaryImageAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageAspectRatio gets a reference to the given NullableFloat64 and assigns it to the PrimaryImageAspectRatio field.
func (o *SessionInfoNowViewingItem) SetPrimaryImageAspectRatio(v float64) {
	o.PrimaryImageAspectRatio.Set(&v)
}
// SetPrimaryImageAspectRatioNil sets the value for PrimaryImageAspectRatio to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPrimaryImageAspectRatioNil() {
	o.PrimaryImageAspectRatio.Set(nil)
}

// UnsetPrimaryImageAspectRatio ensures that no value is present for PrimaryImageAspectRatio, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPrimaryImageAspectRatio() {
	o.PrimaryImageAspectRatio.Unset()
}

// GetArtists returns the Artists field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetArtists() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetArtistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []string and assigns it to the Artists field.
func (o *SessionInfoNowViewingItem) SetArtists(v []string) {
	o.Artists = v
}

// GetArtistItems returns the ArtistItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetArtistItems() []NameGuidPair {
	if o == nil {
		var ret []NameGuidPair
		return ret
	}
	return o.ArtistItems
}

// GetArtistItemsOk returns a tuple with the ArtistItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetArtistItemsOk() ([]NameGuidPair, bool) {
	if o == nil || IsNil(o.ArtistItems) {
		return nil, false
	}
	return o.ArtistItems, true
}

// HasArtistItems returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasArtistItems() bool {
	if o != nil && !IsNil(o.ArtistItems) {
		return true
	}

	return false
}

// SetArtistItems gets a reference to the given []NameGuidPair and assigns it to the ArtistItems field.
func (o *SessionInfoNowViewingItem) SetArtistItems(v []NameGuidPair) {
	o.ArtistItems = v
}

// GetAlbum returns the Album field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbum() string {
	if o == nil || IsNil(o.Album.Get()) {
		var ret string
		return ret
	}
	return *o.Album.Get()
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Album.Get(), o.Album.IsSet()
}

// HasAlbum returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbum() bool {
	if o != nil && o.Album.IsSet() {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given NullableString and assigns it to the Album field.
func (o *SessionInfoNowViewingItem) SetAlbum(v string) {
	o.Album.Set(&v)
}
// SetAlbumNil sets the value for Album to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAlbumNil() {
	o.Album.Set(nil)
}

// UnsetAlbum ensures that no value is present for Album, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAlbum() {
	o.Album.Unset()
}

// GetCollectionType returns the CollectionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCollectionType() string {
	if o == nil || IsNil(o.CollectionType.Get()) {
		var ret string
		return ret
	}
	return *o.CollectionType.Get()
}

// GetCollectionTypeOk returns a tuple with the CollectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCollectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionType.Get(), o.CollectionType.IsSet()
}

// HasCollectionType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCollectionType() bool {
	if o != nil && o.CollectionType.IsSet() {
		return true
	}

	return false
}

// SetCollectionType gets a reference to the given NullableString and assigns it to the CollectionType field.
func (o *SessionInfoNowViewingItem) SetCollectionType(v string) {
	o.CollectionType.Set(&v)
}
// SetCollectionTypeNil sets the value for CollectionType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCollectionTypeNil() {
	o.CollectionType.Set(nil)
}

// UnsetCollectionType ensures that no value is present for CollectionType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCollectionType() {
	o.CollectionType.Unset()
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetDisplayOrder() string {
	if o == nil || IsNil(o.DisplayOrder.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayOrder.Get()
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetDisplayOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayOrder.Get(), o.DisplayOrder.IsSet()
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder.IsSet() {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given NullableString and assigns it to the DisplayOrder field.
func (o *SessionInfoNowViewingItem) SetDisplayOrder(v string) {
	o.DisplayOrder.Set(&v)
}
// SetDisplayOrderNil sets the value for DisplayOrder to be an explicit nil
func (o *SessionInfoNowViewingItem) SetDisplayOrderNil() {
	o.DisplayOrder.Set(nil)
}

// UnsetDisplayOrder ensures that no value is present for DisplayOrder, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetDisplayOrder() {
	o.DisplayOrder.Unset()
}

// GetAlbumId returns the AlbumId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbumId() string {
	if o == nil || IsNil(o.AlbumId.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumId.Get()
}

// GetAlbumIdOk returns a tuple with the AlbumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumId.Get(), o.AlbumId.IsSet()
}

// HasAlbumId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbumId() bool {
	if o != nil && o.AlbumId.IsSet() {
		return true
	}

	return false
}

// SetAlbumId gets a reference to the given NullableString and assigns it to the AlbumId field.
func (o *SessionInfoNowViewingItem) SetAlbumId(v string) {
	o.AlbumId.Set(&v)
}
// SetAlbumIdNil sets the value for AlbumId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAlbumIdNil() {
	o.AlbumId.Set(nil)
}

// UnsetAlbumId ensures that no value is present for AlbumId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAlbumId() {
	o.AlbumId.Unset()
}

// GetAlbumPrimaryImageTag returns the AlbumPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbumPrimaryImageTag() string {
	if o == nil || IsNil(o.AlbumPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumPrimaryImageTag.Get()
}

// GetAlbumPrimaryImageTagOk returns a tuple with the AlbumPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumPrimaryImageTag.Get(), o.AlbumPrimaryImageTag.IsSet()
}

// HasAlbumPrimaryImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbumPrimaryImageTag() bool {
	if o != nil && o.AlbumPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetAlbumPrimaryImageTag gets a reference to the given NullableString and assigns it to the AlbumPrimaryImageTag field.
func (o *SessionInfoNowViewingItem) SetAlbumPrimaryImageTag(v string) {
	o.AlbumPrimaryImageTag.Set(&v)
}
// SetAlbumPrimaryImageTagNil sets the value for AlbumPrimaryImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAlbumPrimaryImageTagNil() {
	o.AlbumPrimaryImageTag.Set(nil)
}

// UnsetAlbumPrimaryImageTag ensures that no value is present for AlbumPrimaryImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAlbumPrimaryImageTag() {
	o.AlbumPrimaryImageTag.Unset()
}

// GetSeriesPrimaryImageTag returns the SeriesPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesPrimaryImageTag() string {
	if o == nil || IsNil(o.SeriesPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesPrimaryImageTag.Get()
}

// GetSeriesPrimaryImageTagOk returns a tuple with the SeriesPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesPrimaryImageTag.Get(), o.SeriesPrimaryImageTag.IsSet()
}

// HasSeriesPrimaryImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesPrimaryImageTag() bool {
	if o != nil && o.SeriesPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetSeriesPrimaryImageTag gets a reference to the given NullableString and assigns it to the SeriesPrimaryImageTag field.
func (o *SessionInfoNowViewingItem) SetSeriesPrimaryImageTag(v string) {
	o.SeriesPrimaryImageTag.Set(&v)
}
// SetSeriesPrimaryImageTagNil sets the value for SeriesPrimaryImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesPrimaryImageTagNil() {
	o.SeriesPrimaryImageTag.Set(nil)
}

// UnsetSeriesPrimaryImageTag ensures that no value is present for SeriesPrimaryImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesPrimaryImageTag() {
	o.SeriesPrimaryImageTag.Unset()
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbumArtist() string {
	if o == nil || IsNil(o.AlbumArtist.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumArtist.Get()
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumArtistOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumArtist.Get(), o.AlbumArtist.IsSet()
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbumArtist() bool {
	if o != nil && o.AlbumArtist.IsSet() {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given NullableString and assigns it to the AlbumArtist field.
func (o *SessionInfoNowViewingItem) SetAlbumArtist(v string) {
	o.AlbumArtist.Set(&v)
}
// SetAlbumArtistNil sets the value for AlbumArtist to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAlbumArtistNil() {
	o.AlbumArtist.Set(nil)
}

// UnsetAlbumArtist ensures that no value is present for AlbumArtist, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAlbumArtist() {
	o.AlbumArtist.Unset()
}

// GetAlbumArtists returns the AlbumArtists field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbumArtists() []NameGuidPair {
	if o == nil {
		var ret []NameGuidPair
		return ret
	}
	return o.AlbumArtists
}

// GetAlbumArtistsOk returns a tuple with the AlbumArtists field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumArtistsOk() ([]NameGuidPair, bool) {
	if o == nil || IsNil(o.AlbumArtists) {
		return nil, false
	}
	return o.AlbumArtists, true
}

// HasAlbumArtists returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbumArtists() bool {
	if o != nil && !IsNil(o.AlbumArtists) {
		return true
	}

	return false
}

// SetAlbumArtists gets a reference to the given []NameGuidPair and assigns it to the AlbumArtists field.
func (o *SessionInfoNowViewingItem) SetAlbumArtists(v []NameGuidPair) {
	o.AlbumArtists = v
}

// GetSeasonName returns the SeasonName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeasonName() string {
	if o == nil || IsNil(o.SeasonName.Get()) {
		var ret string
		return ret
	}
	return *o.SeasonName.Get()
}

// GetSeasonNameOk returns a tuple with the SeasonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeasonNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeasonName.Get(), o.SeasonName.IsSet()
}

// HasSeasonName returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeasonName() bool {
	if o != nil && o.SeasonName.IsSet() {
		return true
	}

	return false
}

// SetSeasonName gets a reference to the given NullableString and assigns it to the SeasonName field.
func (o *SessionInfoNowViewingItem) SetSeasonName(v string) {
	o.SeasonName.Set(&v)
}
// SetSeasonNameNil sets the value for SeasonName to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeasonNameNil() {
	o.SeasonName.Set(nil)
}

// UnsetSeasonName ensures that no value is present for SeasonName, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeasonName() {
	o.SeasonName.Unset()
}

// GetMediaStreams returns the MediaStreams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMediaStreams() []MediaStream {
	if o == nil {
		var ret []MediaStream
		return ret
	}
	return o.MediaStreams
}

// GetMediaStreamsOk returns a tuple with the MediaStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMediaStreamsOk() ([]MediaStream, bool) {
	if o == nil || IsNil(o.MediaStreams) {
		return nil, false
	}
	return o.MediaStreams, true
}

// HasMediaStreams returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMediaStreams() bool {
	if o != nil && !IsNil(o.MediaStreams) {
		return true
	}

	return false
}

// SetMediaStreams gets a reference to the given []MediaStream and assigns it to the MediaStreams field.
func (o *SessionInfoNowViewingItem) SetMediaStreams(v []MediaStream) {
	o.MediaStreams = v
}

// GetVideoType returns the VideoType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetVideoType() VideoType {
	if o == nil || IsNil(o.VideoType.Get()) {
		var ret VideoType
		return ret
	}
	return *o.VideoType.Get()
}

// GetVideoTypeOk returns a tuple with the VideoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetVideoTypeOk() (*VideoType, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoType.Get(), o.VideoType.IsSet()
}

// HasVideoType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasVideoType() bool {
	if o != nil && o.VideoType.IsSet() {
		return true
	}

	return false
}

// SetVideoType gets a reference to the given NullableVideoType and assigns it to the VideoType field.
func (o *SessionInfoNowViewingItem) SetVideoType(v VideoType) {
	o.VideoType.Set(&v)
}
// SetVideoTypeNil sets the value for VideoType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetVideoTypeNil() {
	o.VideoType.Set(nil)
}

// UnsetVideoType ensures that no value is present for VideoType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetVideoType() {
	o.VideoType.Unset()
}

// GetPartCount returns the PartCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetPartCount() int32 {
	if o == nil || IsNil(o.PartCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PartCount.Get()
}

// GetPartCountOk returns a tuple with the PartCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetPartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartCount.Get(), o.PartCount.IsSet()
}

// HasPartCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasPartCount() bool {
	if o != nil && o.PartCount.IsSet() {
		return true
	}

	return false
}

// SetPartCount gets a reference to the given NullableInt32 and assigns it to the PartCount field.
func (o *SessionInfoNowViewingItem) SetPartCount(v int32) {
	o.PartCount.Set(&v)
}
// SetPartCountNil sets the value for PartCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetPartCountNil() {
	o.PartCount.Set(nil)
}

// UnsetPartCount ensures that no value is present for PartCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetPartCount() {
	o.PartCount.Unset()
}

// GetMediaSourceCount returns the MediaSourceCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMediaSourceCount() int32 {
	if o == nil || IsNil(o.MediaSourceCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MediaSourceCount.Get()
}

// GetMediaSourceCountOk returns a tuple with the MediaSourceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMediaSourceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediaSourceCount.Get(), o.MediaSourceCount.IsSet()
}

// HasMediaSourceCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMediaSourceCount() bool {
	if o != nil && o.MediaSourceCount.IsSet() {
		return true
	}

	return false
}

// SetMediaSourceCount gets a reference to the given NullableInt32 and assigns it to the MediaSourceCount field.
func (o *SessionInfoNowViewingItem) SetMediaSourceCount(v int32) {
	o.MediaSourceCount.Set(&v)
}
// SetMediaSourceCountNil sets the value for MediaSourceCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetMediaSourceCountNil() {
	o.MediaSourceCount.Set(nil)
}

// UnsetMediaSourceCount ensures that no value is present for MediaSourceCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetMediaSourceCount() {
	o.MediaSourceCount.Unset()
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetImageTags() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return &o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *SessionInfoNowViewingItem) SetImageTags(v map[string]string) {
	o.ImageTags = v
}

// GetBackdropImageTags returns the BackdropImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetBackdropImageTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.BackdropImageTags
}

// GetBackdropImageTagsOk returns a tuple with the BackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.BackdropImageTags) {
		return nil, false
	}
	return o.BackdropImageTags, true
}

// HasBackdropImageTags returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasBackdropImageTags() bool {
	if o != nil && !IsNil(o.BackdropImageTags) {
		return true
	}

	return false
}

// SetBackdropImageTags gets a reference to the given []string and assigns it to the BackdropImageTags field.
func (o *SessionInfoNowViewingItem) SetBackdropImageTags(v []string) {
	o.BackdropImageTags = v
}

// GetScreenshotImageTags returns the ScreenshotImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetScreenshotImageTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ScreenshotImageTags
}

// GetScreenshotImageTagsOk returns a tuple with the ScreenshotImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetScreenshotImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ScreenshotImageTags) {
		return nil, false
	}
	return o.ScreenshotImageTags, true
}

// HasScreenshotImageTags returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasScreenshotImageTags() bool {
	if o != nil && !IsNil(o.ScreenshotImageTags) {
		return true
	}

	return false
}

// SetScreenshotImageTags gets a reference to the given []string and assigns it to the ScreenshotImageTags field.
func (o *SessionInfoNowViewingItem) SetScreenshotImageTags(v []string) {
	o.ScreenshotImageTags = v
}

// GetParentLogoImageTag returns the ParentLogoImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentLogoImageTag() string {
	if o == nil || IsNil(o.ParentLogoImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentLogoImageTag.Get()
}

// GetParentLogoImageTagOk returns a tuple with the ParentLogoImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentLogoImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentLogoImageTag.Get(), o.ParentLogoImageTag.IsSet()
}

// HasParentLogoImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentLogoImageTag() bool {
	if o != nil && o.ParentLogoImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentLogoImageTag gets a reference to the given NullableString and assigns it to the ParentLogoImageTag field.
func (o *SessionInfoNowViewingItem) SetParentLogoImageTag(v string) {
	o.ParentLogoImageTag.Set(&v)
}
// SetParentLogoImageTagNil sets the value for ParentLogoImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentLogoImageTagNil() {
	o.ParentLogoImageTag.Set(nil)
}

// UnsetParentLogoImageTag ensures that no value is present for ParentLogoImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentLogoImageTag() {
	o.ParentLogoImageTag.Unset()
}

// GetParentArtItemId returns the ParentArtItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentArtItemId() string {
	if o == nil || IsNil(o.ParentArtItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentArtItemId.Get()
}

// GetParentArtItemIdOk returns a tuple with the ParentArtItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentArtItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentArtItemId.Get(), o.ParentArtItemId.IsSet()
}

// HasParentArtItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentArtItemId() bool {
	if o != nil && o.ParentArtItemId.IsSet() {
		return true
	}

	return false
}

// SetParentArtItemId gets a reference to the given NullableString and assigns it to the ParentArtItemId field.
func (o *SessionInfoNowViewingItem) SetParentArtItemId(v string) {
	o.ParentArtItemId.Set(&v)
}
// SetParentArtItemIdNil sets the value for ParentArtItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentArtItemIdNil() {
	o.ParentArtItemId.Set(nil)
}

// UnsetParentArtItemId ensures that no value is present for ParentArtItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentArtItemId() {
	o.ParentArtItemId.Unset()
}

// GetParentArtImageTag returns the ParentArtImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentArtImageTag() string {
	if o == nil || IsNil(o.ParentArtImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentArtImageTag.Get()
}

// GetParentArtImageTagOk returns a tuple with the ParentArtImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentArtImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentArtImageTag.Get(), o.ParentArtImageTag.IsSet()
}

// HasParentArtImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentArtImageTag() bool {
	if o != nil && o.ParentArtImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentArtImageTag gets a reference to the given NullableString and assigns it to the ParentArtImageTag field.
func (o *SessionInfoNowViewingItem) SetParentArtImageTag(v string) {
	o.ParentArtImageTag.Set(&v)
}
// SetParentArtImageTagNil sets the value for ParentArtImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentArtImageTagNil() {
	o.ParentArtImageTag.Set(nil)
}

// UnsetParentArtImageTag ensures that no value is present for ParentArtImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentArtImageTag() {
	o.ParentArtImageTag.Unset()
}

// GetSeriesThumbImageTag returns the SeriesThumbImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesThumbImageTag() string {
	if o == nil || IsNil(o.SeriesThumbImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesThumbImageTag.Get()
}

// GetSeriesThumbImageTagOk returns a tuple with the SeriesThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesThumbImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesThumbImageTag.Get(), o.SeriesThumbImageTag.IsSet()
}

// HasSeriesThumbImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesThumbImageTag() bool {
	if o != nil && o.SeriesThumbImageTag.IsSet() {
		return true
	}

	return false
}

// SetSeriesThumbImageTag gets a reference to the given NullableString and assigns it to the SeriesThumbImageTag field.
func (o *SessionInfoNowViewingItem) SetSeriesThumbImageTag(v string) {
	o.SeriesThumbImageTag.Set(&v)
}
// SetSeriesThumbImageTagNil sets the value for SeriesThumbImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesThumbImageTagNil() {
	o.SeriesThumbImageTag.Set(nil)
}

// UnsetSeriesThumbImageTag ensures that no value is present for SeriesThumbImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesThumbImageTag() {
	o.SeriesThumbImageTag.Unset()
}

// GetImageBlurHashes returns the ImageBlurHashes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetImageBlurHashes() BaseItemDtoImageBlurHashes {
	if o == nil || IsNil(o.ImageBlurHashes.Get()) {
		var ret BaseItemDtoImageBlurHashes
		return ret
	}
	return *o.ImageBlurHashes.Get()
}

// GetImageBlurHashesOk returns a tuple with the ImageBlurHashes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetImageBlurHashesOk() (*BaseItemDtoImageBlurHashes, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageBlurHashes.Get(), o.ImageBlurHashes.IsSet()
}

// HasImageBlurHashes returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasImageBlurHashes() bool {
	if o != nil && o.ImageBlurHashes.IsSet() {
		return true
	}

	return false
}

// SetImageBlurHashes gets a reference to the given NullableBaseItemDtoImageBlurHashes and assigns it to the ImageBlurHashes field.
func (o *SessionInfoNowViewingItem) SetImageBlurHashes(v BaseItemDtoImageBlurHashes) {
	o.ImageBlurHashes.Set(&v)
}
// SetImageBlurHashesNil sets the value for ImageBlurHashes to be an explicit nil
func (o *SessionInfoNowViewingItem) SetImageBlurHashesNil() {
	o.ImageBlurHashes.Set(nil)
}

// UnsetImageBlurHashes ensures that no value is present for ImageBlurHashes, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetImageBlurHashes() {
	o.ImageBlurHashes.Unset()
}

// GetSeriesStudio returns the SeriesStudio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesStudio() string {
	if o == nil || IsNil(o.SeriesStudio.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesStudio.Get()
}

// GetSeriesStudioOk returns a tuple with the SeriesStudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesStudioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesStudio.Get(), o.SeriesStudio.IsSet()
}

// HasSeriesStudio returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesStudio() bool {
	if o != nil && o.SeriesStudio.IsSet() {
		return true
	}

	return false
}

// SetSeriesStudio gets a reference to the given NullableString and assigns it to the SeriesStudio field.
func (o *SessionInfoNowViewingItem) SetSeriesStudio(v string) {
	o.SeriesStudio.Set(&v)
}
// SetSeriesStudioNil sets the value for SeriesStudio to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesStudioNil() {
	o.SeriesStudio.Set(nil)
}

// UnsetSeriesStudio ensures that no value is present for SeriesStudio, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesStudio() {
	o.SeriesStudio.Unset()
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId.Get()
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentThumbItemId.Get(), o.ParentThumbItemId.IsSet()
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentThumbItemId() bool {
	if o != nil && o.ParentThumbItemId.IsSet() {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given NullableString and assigns it to the ParentThumbItemId field.
func (o *SessionInfoNowViewingItem) SetParentThumbItemId(v string) {
	o.ParentThumbItemId.Set(&v)
}
// SetParentThumbItemIdNil sets the value for ParentThumbItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentThumbItemIdNil() {
	o.ParentThumbItemId.Set(nil)
}

// UnsetParentThumbItemId ensures that no value is present for ParentThumbItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentThumbItemId() {
	o.ParentThumbItemId.Unset()
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag.Get()
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentThumbImageTag.Get(), o.ParentThumbImageTag.IsSet()
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentThumbImageTag() bool {
	if o != nil && o.ParentThumbImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given NullableString and assigns it to the ParentThumbImageTag field.
func (o *SessionInfoNowViewingItem) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag.Set(&v)
}
// SetParentThumbImageTagNil sets the value for ParentThumbImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentThumbImageTagNil() {
	o.ParentThumbImageTag.Set(nil)
}

// UnsetParentThumbImageTag ensures that no value is present for ParentThumbImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentThumbImageTag() {
	o.ParentThumbImageTag.Unset()
}

// GetParentPrimaryImageItemId returns the ParentPrimaryImageItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentPrimaryImageItemId() string {
	if o == nil || IsNil(o.ParentPrimaryImageItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageItemId.Get()
}

// GetParentPrimaryImageItemIdOk returns a tuple with the ParentPrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentPrimaryImageItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPrimaryImageItemId.Get(), o.ParentPrimaryImageItemId.IsSet()
}

// HasParentPrimaryImageItemId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentPrimaryImageItemId() bool {
	if o != nil && o.ParentPrimaryImageItemId.IsSet() {
		return true
	}

	return false
}

// SetParentPrimaryImageItemId gets a reference to the given NullableString and assigns it to the ParentPrimaryImageItemId field.
func (o *SessionInfoNowViewingItem) SetParentPrimaryImageItemId(v string) {
	o.ParentPrimaryImageItemId.Set(&v)
}
// SetParentPrimaryImageItemIdNil sets the value for ParentPrimaryImageItemId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentPrimaryImageItemIdNil() {
	o.ParentPrimaryImageItemId.Set(nil)
}

// UnsetParentPrimaryImageItemId ensures that no value is present for ParentPrimaryImageItemId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentPrimaryImageItemId() {
	o.ParentPrimaryImageItemId.Unset()
}

// GetParentPrimaryImageTag returns the ParentPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetParentPrimaryImageTag() string {
	if o == nil || IsNil(o.ParentPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageTag.Get()
}

// GetParentPrimaryImageTagOk returns a tuple with the ParentPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetParentPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPrimaryImageTag.Get(), o.ParentPrimaryImageTag.IsSet()
}

// HasParentPrimaryImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasParentPrimaryImageTag() bool {
	if o != nil && o.ParentPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetParentPrimaryImageTag gets a reference to the given NullableString and assigns it to the ParentPrimaryImageTag field.
func (o *SessionInfoNowViewingItem) SetParentPrimaryImageTag(v string) {
	o.ParentPrimaryImageTag.Set(&v)
}
// SetParentPrimaryImageTagNil sets the value for ParentPrimaryImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetParentPrimaryImageTagNil() {
	o.ParentPrimaryImageTag.Set(nil)
}

// UnsetParentPrimaryImageTag ensures that no value is present for ParentPrimaryImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetParentPrimaryImageTag() {
	o.ParentPrimaryImageTag.Unset()
}

// GetChapters returns the Chapters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChapters() []ChapterInfo {
	if o == nil {
		var ret []ChapterInfo
		return ret
	}
	return o.Chapters
}

// GetChaptersOk returns a tuple with the Chapters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChaptersOk() ([]ChapterInfo, bool) {
	if o == nil || IsNil(o.Chapters) {
		return nil, false
	}
	return o.Chapters, true
}

// HasChapters returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChapters() bool {
	if o != nil && !IsNil(o.Chapters) {
		return true
	}

	return false
}

// SetChapters gets a reference to the given []ChapterInfo and assigns it to the Chapters field.
func (o *SessionInfoNowViewingItem) SetChapters(v []ChapterInfo) {
	o.Chapters = v
}

// GetLocationType returns the LocationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLocationType() LocationType {
	if o == nil || IsNil(o.LocationType.Get()) {
		var ret LocationType
		return ret
	}
	return *o.LocationType.Get()
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLocationTypeOk() (*LocationType, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationType.Get(), o.LocationType.IsSet()
}

// HasLocationType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLocationType() bool {
	if o != nil && o.LocationType.IsSet() {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given NullableLocationType and assigns it to the LocationType field.
func (o *SessionInfoNowViewingItem) SetLocationType(v LocationType) {
	o.LocationType.Set(&v)
}
// SetLocationTypeNil sets the value for LocationType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetLocationTypeNil() {
	o.LocationType.Set(nil)
}

// UnsetLocationType ensures that no value is present for LocationType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetLocationType() {
	o.LocationType.Unset()
}

// GetIsoType returns the IsoType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsoType() IsoType {
	if o == nil || IsNil(o.IsoType.Get()) {
		var ret IsoType
		return ret
	}
	return *o.IsoType.Get()
}

// GetIsoTypeOk returns a tuple with the IsoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsoTypeOk() (*IsoType, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsoType.Get(), o.IsoType.IsSet()
}

// HasIsoType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsoType() bool {
	if o != nil && o.IsoType.IsSet() {
		return true
	}

	return false
}

// SetIsoType gets a reference to the given NullableIsoType and assigns it to the IsoType field.
func (o *SessionInfoNowViewingItem) SetIsoType(v IsoType) {
	o.IsoType.Set(&v)
}
// SetIsoTypeNil sets the value for IsoType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsoTypeNil() {
	o.IsoType.Set(nil)
}

// UnsetIsoType ensures that no value is present for IsoType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsoType() {
	o.IsoType.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMediaType() string {
	if o == nil || IsNil(o.MediaType.Get()) {
		var ret string
		return ret
	}
	return *o.MediaType.Get()
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediaType.Get(), o.MediaType.IsSet()
}

// HasMediaType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMediaType() bool {
	if o != nil && o.MediaType.IsSet() {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given NullableString and assigns it to the MediaType field.
func (o *SessionInfoNowViewingItem) SetMediaType(v string) {
	o.MediaType.Set(&v)
}
// SetMediaTypeNil sets the value for MediaType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetMediaTypeNil() {
	o.MediaType.Set(nil)
}

// UnsetMediaType ensures that no value is present for MediaType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetMediaType() {
	o.MediaType.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *SessionInfoNowViewingItem) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *SessionInfoNowViewingItem) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetLockedFields returns the LockedFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLockedFields() []MetadataField {
	if o == nil {
		var ret []MetadataField
		return ret
	}
	return o.LockedFields
}

// GetLockedFieldsOk returns a tuple with the LockedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLockedFieldsOk() ([]MetadataField, bool) {
	if o == nil || IsNil(o.LockedFields) {
		return nil, false
	}
	return o.LockedFields, true
}

// HasLockedFields returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLockedFields() bool {
	if o != nil && !IsNil(o.LockedFields) {
		return true
	}

	return false
}

// SetLockedFields gets a reference to the given []MetadataField and assigns it to the LockedFields field.
func (o *SessionInfoNowViewingItem) SetLockedFields(v []MetadataField) {
	o.LockedFields = v
}

// GetTrailerCount returns the TrailerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetTrailerCount() int32 {
	if o == nil || IsNil(o.TrailerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.TrailerCount.Get()
}

// GetTrailerCountOk returns a tuple with the TrailerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetTrailerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailerCount.Get(), o.TrailerCount.IsSet()
}

// HasTrailerCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasTrailerCount() bool {
	if o != nil && o.TrailerCount.IsSet() {
		return true
	}

	return false
}

// SetTrailerCount gets a reference to the given NullableInt32 and assigns it to the TrailerCount field.
func (o *SessionInfoNowViewingItem) SetTrailerCount(v int32) {
	o.TrailerCount.Set(&v)
}
// SetTrailerCountNil sets the value for TrailerCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetTrailerCountNil() {
	o.TrailerCount.Set(nil)
}

// UnsetTrailerCount ensures that no value is present for TrailerCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetTrailerCount() {
	o.TrailerCount.Unset()
}

// GetMovieCount returns the MovieCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMovieCount() int32 {
	if o == nil || IsNil(o.MovieCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MovieCount.Get()
}

// GetMovieCountOk returns a tuple with the MovieCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMovieCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MovieCount.Get(), o.MovieCount.IsSet()
}

// HasMovieCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMovieCount() bool {
	if o != nil && o.MovieCount.IsSet() {
		return true
	}

	return false
}

// SetMovieCount gets a reference to the given NullableInt32 and assigns it to the MovieCount field.
func (o *SessionInfoNowViewingItem) SetMovieCount(v int32) {
	o.MovieCount.Set(&v)
}
// SetMovieCountNil sets the value for MovieCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetMovieCountNil() {
	o.MovieCount.Set(nil)
}

// UnsetMovieCount ensures that no value is present for MovieCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetMovieCount() {
	o.MovieCount.Unset()
}

// GetSeriesCount returns the SeriesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesCount() int32 {
	if o == nil || IsNil(o.SeriesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SeriesCount.Get()
}

// GetSeriesCountOk returns a tuple with the SeriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesCount.Get(), o.SeriesCount.IsSet()
}

// HasSeriesCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesCount() bool {
	if o != nil && o.SeriesCount.IsSet() {
		return true
	}

	return false
}

// SetSeriesCount gets a reference to the given NullableInt32 and assigns it to the SeriesCount field.
func (o *SessionInfoNowViewingItem) SetSeriesCount(v int32) {
	o.SeriesCount.Set(&v)
}
// SetSeriesCountNil sets the value for SeriesCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesCountNil() {
	o.SeriesCount.Set(nil)
}

// UnsetSeriesCount ensures that no value is present for SeriesCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesCount() {
	o.SeriesCount.Unset()
}

// GetProgramCount returns the ProgramCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetProgramCount() int32 {
	if o == nil || IsNil(o.ProgramCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ProgramCount.Get()
}

// GetProgramCountOk returns a tuple with the ProgramCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetProgramCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramCount.Get(), o.ProgramCount.IsSet()
}

// HasProgramCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasProgramCount() bool {
	if o != nil && o.ProgramCount.IsSet() {
		return true
	}

	return false
}

// SetProgramCount gets a reference to the given NullableInt32 and assigns it to the ProgramCount field.
func (o *SessionInfoNowViewingItem) SetProgramCount(v int32) {
	o.ProgramCount.Set(&v)
}
// SetProgramCountNil sets the value for ProgramCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetProgramCountNil() {
	o.ProgramCount.Set(nil)
}

// UnsetProgramCount ensures that no value is present for ProgramCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetProgramCount() {
	o.ProgramCount.Unset()
}

// GetEpisodeCount returns the EpisodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetEpisodeCount() int32 {
	if o == nil || IsNil(o.EpisodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.EpisodeCount.Get()
}

// GetEpisodeCountOk returns a tuple with the EpisodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetEpisodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeCount.Get(), o.EpisodeCount.IsSet()
}

// HasEpisodeCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasEpisodeCount() bool {
	if o != nil && o.EpisodeCount.IsSet() {
		return true
	}

	return false
}

// SetEpisodeCount gets a reference to the given NullableInt32 and assigns it to the EpisodeCount field.
func (o *SessionInfoNowViewingItem) SetEpisodeCount(v int32) {
	o.EpisodeCount.Set(&v)
}
// SetEpisodeCountNil sets the value for EpisodeCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetEpisodeCountNil() {
	o.EpisodeCount.Set(nil)
}

// UnsetEpisodeCount ensures that no value is present for EpisodeCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetEpisodeCount() {
	o.EpisodeCount.Unset()
}

// GetSongCount returns the SongCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSongCount() int32 {
	if o == nil || IsNil(o.SongCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SongCount.Get()
}

// GetSongCountOk returns a tuple with the SongCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSongCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SongCount.Get(), o.SongCount.IsSet()
}

// HasSongCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSongCount() bool {
	if o != nil && o.SongCount.IsSet() {
		return true
	}

	return false
}

// SetSongCount gets a reference to the given NullableInt32 and assigns it to the SongCount field.
func (o *SessionInfoNowViewingItem) SetSongCount(v int32) {
	o.SongCount.Set(&v)
}
// SetSongCountNil sets the value for SongCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSongCountNil() {
	o.SongCount.Set(nil)
}

// UnsetSongCount ensures that no value is present for SongCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSongCount() {
	o.SongCount.Unset()
}

// GetAlbumCount returns the AlbumCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAlbumCount() int32 {
	if o == nil || IsNil(o.AlbumCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AlbumCount.Get()
}

// GetAlbumCountOk returns a tuple with the AlbumCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAlbumCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumCount.Get(), o.AlbumCount.IsSet()
}

// HasAlbumCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAlbumCount() bool {
	if o != nil && o.AlbumCount.IsSet() {
		return true
	}

	return false
}

// SetAlbumCount gets a reference to the given NullableInt32 and assigns it to the AlbumCount field.
func (o *SessionInfoNowViewingItem) SetAlbumCount(v int32) {
	o.AlbumCount.Set(&v)
}
// SetAlbumCountNil sets the value for AlbumCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAlbumCountNil() {
	o.AlbumCount.Set(nil)
}

// UnsetAlbumCount ensures that no value is present for AlbumCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAlbumCount() {
	o.AlbumCount.Unset()
}

// GetArtistCount returns the ArtistCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetArtistCount() int32 {
	if o == nil || IsNil(o.ArtistCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ArtistCount.Get()
}

// GetArtistCountOk returns a tuple with the ArtistCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetArtistCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArtistCount.Get(), o.ArtistCount.IsSet()
}

// HasArtistCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasArtistCount() bool {
	if o != nil && o.ArtistCount.IsSet() {
		return true
	}

	return false
}

// SetArtistCount gets a reference to the given NullableInt32 and assigns it to the ArtistCount field.
func (o *SessionInfoNowViewingItem) SetArtistCount(v int32) {
	o.ArtistCount.Set(&v)
}
// SetArtistCountNil sets the value for ArtistCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetArtistCountNil() {
	o.ArtistCount.Set(nil)
}

// UnsetArtistCount ensures that no value is present for ArtistCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetArtistCount() {
	o.ArtistCount.Unset()
}

// GetMusicVideoCount returns the MusicVideoCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetMusicVideoCount() int32 {
	if o == nil || IsNil(o.MusicVideoCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MusicVideoCount.Get()
}

// GetMusicVideoCountOk returns a tuple with the MusicVideoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetMusicVideoCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MusicVideoCount.Get(), o.MusicVideoCount.IsSet()
}

// HasMusicVideoCount returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasMusicVideoCount() bool {
	if o != nil && o.MusicVideoCount.IsSet() {
		return true
	}

	return false
}

// SetMusicVideoCount gets a reference to the given NullableInt32 and assigns it to the MusicVideoCount field.
func (o *SessionInfoNowViewingItem) SetMusicVideoCount(v int32) {
	o.MusicVideoCount.Set(&v)
}
// SetMusicVideoCountNil sets the value for MusicVideoCount to be an explicit nil
func (o *SessionInfoNowViewingItem) SetMusicVideoCountNil() {
	o.MusicVideoCount.Set(nil)
}

// UnsetMusicVideoCount ensures that no value is present for MusicVideoCount, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetMusicVideoCount() {
	o.MusicVideoCount.Unset()
}

// GetLockData returns the LockData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLockData() bool {
	if o == nil || IsNil(o.LockData.Get()) {
		var ret bool
		return ret
	}
	return *o.LockData.Get()
}

// GetLockDataOk returns a tuple with the LockData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLockDataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockData.Get(), o.LockData.IsSet()
}

// HasLockData returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLockData() bool {
	if o != nil && o.LockData.IsSet() {
		return true
	}

	return false
}

// SetLockData gets a reference to the given NullableBool and assigns it to the LockData field.
func (o *SessionInfoNowViewingItem) SetLockData(v bool) {
	o.LockData.Set(&v)
}
// SetLockDataNil sets the value for LockData to be an explicit nil
func (o *SessionInfoNowViewingItem) SetLockDataNil() {
	o.LockData.Set(nil)
}

// UnsetLockData ensures that no value is present for LockData, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetLockData() {
	o.LockData.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *SessionInfoNowViewingItem) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *SessionInfoNowViewingItem) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetWidth() {
	o.Width.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *SessionInfoNowViewingItem) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *SessionInfoNowViewingItem) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetHeight() {
	o.Height.Unset()
}

// GetCameraMake returns the CameraMake field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCameraMake() string {
	if o == nil || IsNil(o.CameraMake.Get()) {
		var ret string
		return ret
	}
	return *o.CameraMake.Get()
}

// GetCameraMakeOk returns a tuple with the CameraMake field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCameraMakeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CameraMake.Get(), o.CameraMake.IsSet()
}

// HasCameraMake returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCameraMake() bool {
	if o != nil && o.CameraMake.IsSet() {
		return true
	}

	return false
}

// SetCameraMake gets a reference to the given NullableString and assigns it to the CameraMake field.
func (o *SessionInfoNowViewingItem) SetCameraMake(v string) {
	o.CameraMake.Set(&v)
}
// SetCameraMakeNil sets the value for CameraMake to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCameraMakeNil() {
	o.CameraMake.Set(nil)
}

// UnsetCameraMake ensures that no value is present for CameraMake, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCameraMake() {
	o.CameraMake.Unset()
}

// GetCameraModel returns the CameraModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCameraModel() string {
	if o == nil || IsNil(o.CameraModel.Get()) {
		var ret string
		return ret
	}
	return *o.CameraModel.Get()
}

// GetCameraModelOk returns a tuple with the CameraModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCameraModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CameraModel.Get(), o.CameraModel.IsSet()
}

// HasCameraModel returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCameraModel() bool {
	if o != nil && o.CameraModel.IsSet() {
		return true
	}

	return false
}

// SetCameraModel gets a reference to the given NullableString and assigns it to the CameraModel field.
func (o *SessionInfoNowViewingItem) SetCameraModel(v string) {
	o.CameraModel.Set(&v)
}
// SetCameraModelNil sets the value for CameraModel to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCameraModelNil() {
	o.CameraModel.Set(nil)
}

// UnsetCameraModel ensures that no value is present for CameraModel, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCameraModel() {
	o.CameraModel.Unset()
}

// GetSoftware returns the Software field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSoftware() string {
	if o == nil || IsNil(o.Software.Get()) {
		var ret string
		return ret
	}
	return *o.Software.Get()
}

// GetSoftwareOk returns a tuple with the Software field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSoftwareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Software.Get(), o.Software.IsSet()
}

// HasSoftware returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSoftware() bool {
	if o != nil && o.Software.IsSet() {
		return true
	}

	return false
}

// SetSoftware gets a reference to the given NullableString and assigns it to the Software field.
func (o *SessionInfoNowViewingItem) SetSoftware(v string) {
	o.Software.Set(&v)
}
// SetSoftwareNil sets the value for Software to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSoftwareNil() {
	o.Software.Set(nil)
}

// UnsetSoftware ensures that no value is present for Software, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSoftware() {
	o.Software.Unset()
}

// GetExposureTime returns the ExposureTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetExposureTime() float64 {
	if o == nil || IsNil(o.ExposureTime.Get()) {
		var ret float64
		return ret
	}
	return *o.ExposureTime.Get()
}

// GetExposureTimeOk returns a tuple with the ExposureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetExposureTimeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExposureTime.Get(), o.ExposureTime.IsSet()
}

// HasExposureTime returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasExposureTime() bool {
	if o != nil && o.ExposureTime.IsSet() {
		return true
	}

	return false
}

// SetExposureTime gets a reference to the given NullableFloat64 and assigns it to the ExposureTime field.
func (o *SessionInfoNowViewingItem) SetExposureTime(v float64) {
	o.ExposureTime.Set(&v)
}
// SetExposureTimeNil sets the value for ExposureTime to be an explicit nil
func (o *SessionInfoNowViewingItem) SetExposureTimeNil() {
	o.ExposureTime.Set(nil)
}

// UnsetExposureTime ensures that no value is present for ExposureTime, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetExposureTime() {
	o.ExposureTime.Unset()
}

// GetFocalLength returns the FocalLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetFocalLength() float64 {
	if o == nil || IsNil(o.FocalLength.Get()) {
		var ret float64
		return ret
	}
	return *o.FocalLength.Get()
}

// GetFocalLengthOk returns a tuple with the FocalLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetFocalLengthOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FocalLength.Get(), o.FocalLength.IsSet()
}

// HasFocalLength returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasFocalLength() bool {
	if o != nil && o.FocalLength.IsSet() {
		return true
	}

	return false
}

// SetFocalLength gets a reference to the given NullableFloat64 and assigns it to the FocalLength field.
func (o *SessionInfoNowViewingItem) SetFocalLength(v float64) {
	o.FocalLength.Set(&v)
}
// SetFocalLengthNil sets the value for FocalLength to be an explicit nil
func (o *SessionInfoNowViewingItem) SetFocalLengthNil() {
	o.FocalLength.Set(nil)
}

// UnsetFocalLength ensures that no value is present for FocalLength, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetFocalLength() {
	o.FocalLength.Unset()
}

// GetImageOrientation returns the ImageOrientation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetImageOrientation() ImageOrientation {
	if o == nil || IsNil(o.ImageOrientation.Get()) {
		var ret ImageOrientation
		return ret
	}
	return *o.ImageOrientation.Get()
}

// GetImageOrientationOk returns a tuple with the ImageOrientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetImageOrientationOk() (*ImageOrientation, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageOrientation.Get(), o.ImageOrientation.IsSet()
}

// HasImageOrientation returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasImageOrientation() bool {
	if o != nil && o.ImageOrientation.IsSet() {
		return true
	}

	return false
}

// SetImageOrientation gets a reference to the given NullableImageOrientation and assigns it to the ImageOrientation field.
func (o *SessionInfoNowViewingItem) SetImageOrientation(v ImageOrientation) {
	o.ImageOrientation.Set(&v)
}
// SetImageOrientationNil sets the value for ImageOrientation to be an explicit nil
func (o *SessionInfoNowViewingItem) SetImageOrientationNil() {
	o.ImageOrientation.Set(nil)
}

// UnsetImageOrientation ensures that no value is present for ImageOrientation, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetImageOrientation() {
	o.ImageOrientation.Unset()
}

// GetAperture returns the Aperture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAperture() float64 {
	if o == nil || IsNil(o.Aperture.Get()) {
		var ret float64
		return ret
	}
	return *o.Aperture.Get()
}

// GetApertureOk returns a tuple with the Aperture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetApertureOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aperture.Get(), o.Aperture.IsSet()
}

// HasAperture returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAperture() bool {
	if o != nil && o.Aperture.IsSet() {
		return true
	}

	return false
}

// SetAperture gets a reference to the given NullableFloat64 and assigns it to the Aperture field.
func (o *SessionInfoNowViewingItem) SetAperture(v float64) {
	o.Aperture.Set(&v)
}
// SetApertureNil sets the value for Aperture to be an explicit nil
func (o *SessionInfoNowViewingItem) SetApertureNil() {
	o.Aperture.Set(nil)
}

// UnsetAperture ensures that no value is present for Aperture, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAperture() {
	o.Aperture.Unset()
}

// GetShutterSpeed returns the ShutterSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetShutterSpeed() float64 {
	if o == nil || IsNil(o.ShutterSpeed.Get()) {
		var ret float64
		return ret
	}
	return *o.ShutterSpeed.Get()
}

// GetShutterSpeedOk returns a tuple with the ShutterSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetShutterSpeedOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShutterSpeed.Get(), o.ShutterSpeed.IsSet()
}

// HasShutterSpeed returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasShutterSpeed() bool {
	if o != nil && o.ShutterSpeed.IsSet() {
		return true
	}

	return false
}

// SetShutterSpeed gets a reference to the given NullableFloat64 and assigns it to the ShutterSpeed field.
func (o *SessionInfoNowViewingItem) SetShutterSpeed(v float64) {
	o.ShutterSpeed.Set(&v)
}
// SetShutterSpeedNil sets the value for ShutterSpeed to be an explicit nil
func (o *SessionInfoNowViewingItem) SetShutterSpeedNil() {
	o.ShutterSpeed.Set(nil)
}

// UnsetShutterSpeed ensures that no value is present for ShutterSpeed, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetShutterSpeed() {
	o.ShutterSpeed.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat64 and assigns it to the Latitude field.
func (o *SessionInfoNowViewingItem) SetLatitude(v float64) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *SessionInfoNowViewingItem) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat64 and assigns it to the Longitude field.
func (o *SessionInfoNowViewingItem) SetLongitude(v float64) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *SessionInfoNowViewingItem) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetAltitude returns the Altitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAltitude() float64 {
	if o == nil || IsNil(o.Altitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Altitude.Get()
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAltitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Altitude.Get(), o.Altitude.IsSet()
}

// HasAltitude returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAltitude() bool {
	if o != nil && o.Altitude.IsSet() {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given NullableFloat64 and assigns it to the Altitude field.
func (o *SessionInfoNowViewingItem) SetAltitude(v float64) {
	o.Altitude.Set(&v)
}
// SetAltitudeNil sets the value for Altitude to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAltitudeNil() {
	o.Altitude.Set(nil)
}

// UnsetAltitude ensures that no value is present for Altitude, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAltitude() {
	o.Altitude.Unset()
}

// GetIsoSpeedRating returns the IsoSpeedRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsoSpeedRating() int32 {
	if o == nil || IsNil(o.IsoSpeedRating.Get()) {
		var ret int32
		return ret
	}
	return *o.IsoSpeedRating.Get()
}

// GetIsoSpeedRatingOk returns a tuple with the IsoSpeedRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsoSpeedRatingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsoSpeedRating.Get(), o.IsoSpeedRating.IsSet()
}

// HasIsoSpeedRating returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsoSpeedRating() bool {
	if o != nil && o.IsoSpeedRating.IsSet() {
		return true
	}

	return false
}

// SetIsoSpeedRating gets a reference to the given NullableInt32 and assigns it to the IsoSpeedRating field.
func (o *SessionInfoNowViewingItem) SetIsoSpeedRating(v int32) {
	o.IsoSpeedRating.Set(&v)
}
// SetIsoSpeedRatingNil sets the value for IsoSpeedRating to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsoSpeedRatingNil() {
	o.IsoSpeedRating.Set(nil)
}

// UnsetIsoSpeedRating ensures that no value is present for IsoSpeedRating, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsoSpeedRating() {
	o.IsoSpeedRating.Unset()
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId.Get()
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesTimerId.Get(), o.SeriesTimerId.IsSet()
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasSeriesTimerId() bool {
	if o != nil && o.SeriesTimerId.IsSet() {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given NullableString and assigns it to the SeriesTimerId field.
func (o *SessionInfoNowViewingItem) SetSeriesTimerId(v string) {
	o.SeriesTimerId.Set(&v)
}
// SetSeriesTimerIdNil sets the value for SeriesTimerId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetSeriesTimerIdNil() {
	o.SeriesTimerId.Set(nil)
}

// UnsetSeriesTimerId ensures that no value is present for SeriesTimerId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetSeriesTimerId() {
	o.SeriesTimerId.Unset()
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId.Get()) {
		var ret string
		return ret
	}
	return *o.ProgramId.Get()
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramId.Get(), o.ProgramId.IsSet()
}

// HasProgramId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasProgramId() bool {
	if o != nil && o.ProgramId.IsSet() {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given NullableString and assigns it to the ProgramId field.
func (o *SessionInfoNowViewingItem) SetProgramId(v string) {
	o.ProgramId.Set(&v)
}
// SetProgramIdNil sets the value for ProgramId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetProgramIdNil() {
	o.ProgramId.Set(nil)
}

// UnsetProgramId ensures that no value is present for ProgramId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetProgramId() {
	o.ProgramId.Unset()
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag.Get()
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelPrimaryImageTag.Get(), o.ChannelPrimaryImageTag.IsSet()
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChannelPrimaryImageTag() bool {
	if o != nil && o.ChannelPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given NullableString and assigns it to the ChannelPrimaryImageTag field.
func (o *SessionInfoNowViewingItem) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag.Set(&v)
}
// SetChannelPrimaryImageTagNil sets the value for ChannelPrimaryImageTag to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChannelPrimaryImageTagNil() {
	o.ChannelPrimaryImageTag.Set(nil)
}

// UnsetChannelPrimaryImageTag ensures that no value is present for ChannelPrimaryImageTag, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChannelPrimaryImageTag() {
	o.ChannelPrimaryImageTag.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *SessionInfoNowViewingItem) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *SessionInfoNowViewingItem) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCompletionPercentage() float64 {
	if o == nil || IsNil(o.CompletionPercentage.Get()) {
		var ret float64
		return ret
	}
	return *o.CompletionPercentage.Get()
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCompletionPercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionPercentage.Get(), o.CompletionPercentage.IsSet()
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCompletionPercentage() bool {
	if o != nil && o.CompletionPercentage.IsSet() {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given NullableFloat64 and assigns it to the CompletionPercentage field.
func (o *SessionInfoNowViewingItem) SetCompletionPercentage(v float64) {
	o.CompletionPercentage.Set(&v)
}
// SetCompletionPercentageNil sets the value for CompletionPercentage to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCompletionPercentageNil() {
	o.CompletionPercentage.Set(nil)
}

// UnsetCompletionPercentage ensures that no value is present for CompletionPercentage, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCompletionPercentage() {
	o.CompletionPercentage.Unset()
}

// GetIsRepeat returns the IsRepeat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsRepeat() bool {
	if o == nil || IsNil(o.IsRepeat.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRepeat.Get()
}

// GetIsRepeatOk returns a tuple with the IsRepeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsRepeatOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRepeat.Get(), o.IsRepeat.IsSet()
}

// HasIsRepeat returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsRepeat() bool {
	if o != nil && o.IsRepeat.IsSet() {
		return true
	}

	return false
}

// SetIsRepeat gets a reference to the given NullableBool and assigns it to the IsRepeat field.
func (o *SessionInfoNowViewingItem) SetIsRepeat(v bool) {
	o.IsRepeat.Set(&v)
}
// SetIsRepeatNil sets the value for IsRepeat to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsRepeatNil() {
	o.IsRepeat.Set(nil)
}

// UnsetIsRepeat ensures that no value is present for IsRepeat, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsRepeat() {
	o.IsRepeat.Unset()
}

// GetEpisodeTitle returns the EpisodeTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetEpisodeTitle() string {
	if o == nil || IsNil(o.EpisodeTitle.Get()) {
		var ret string
		return ret
	}
	return *o.EpisodeTitle.Get()
}

// GetEpisodeTitleOk returns a tuple with the EpisodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetEpisodeTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeTitle.Get(), o.EpisodeTitle.IsSet()
}

// HasEpisodeTitle returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasEpisodeTitle() bool {
	if o != nil && o.EpisodeTitle.IsSet() {
		return true
	}

	return false
}

// SetEpisodeTitle gets a reference to the given NullableString and assigns it to the EpisodeTitle field.
func (o *SessionInfoNowViewingItem) SetEpisodeTitle(v string) {
	o.EpisodeTitle.Set(&v)
}
// SetEpisodeTitleNil sets the value for EpisodeTitle to be an explicit nil
func (o *SessionInfoNowViewingItem) SetEpisodeTitleNil() {
	o.EpisodeTitle.Set(nil)
}

// UnsetEpisodeTitle ensures that no value is present for EpisodeTitle, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetEpisodeTitle() {
	o.EpisodeTitle.Unset()
}

// GetChannelType returns the ChannelType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetChannelType() ChannelType {
	if o == nil || IsNil(o.ChannelType.Get()) {
		var ret ChannelType
		return ret
	}
	return *o.ChannelType.Get()
}

// GetChannelTypeOk returns a tuple with the ChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetChannelTypeOk() (*ChannelType, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelType.Get(), o.ChannelType.IsSet()
}

// HasChannelType returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasChannelType() bool {
	if o != nil && o.ChannelType.IsSet() {
		return true
	}

	return false
}

// SetChannelType gets a reference to the given NullableChannelType and assigns it to the ChannelType field.
func (o *SessionInfoNowViewingItem) SetChannelType(v ChannelType) {
	o.ChannelType.Set(&v)
}
// SetChannelTypeNil sets the value for ChannelType to be an explicit nil
func (o *SessionInfoNowViewingItem) SetChannelTypeNil() {
	o.ChannelType.Set(nil)
}

// UnsetChannelType ensures that no value is present for ChannelType, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetChannelType() {
	o.ChannelType.Unset()
}

// GetAudio returns the Audio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetAudio() ProgramAudio {
	if o == nil || IsNil(o.Audio.Get()) {
		var ret ProgramAudio
		return ret
	}
	return *o.Audio.Get()
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetAudioOk() (*ProgramAudio, bool) {
	if o == nil {
		return nil, false
	}
	return o.Audio.Get(), o.Audio.IsSet()
}

// HasAudio returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasAudio() bool {
	if o != nil && o.Audio.IsSet() {
		return true
	}

	return false
}

// SetAudio gets a reference to the given NullableProgramAudio and assigns it to the Audio field.
func (o *SessionInfoNowViewingItem) SetAudio(v ProgramAudio) {
	o.Audio.Set(&v)
}
// SetAudioNil sets the value for Audio to be an explicit nil
func (o *SessionInfoNowViewingItem) SetAudioNil() {
	o.Audio.Set(nil)
}

// UnsetAudio ensures that no value is present for Audio, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetAudio() {
	o.Audio.Unset()
}

// GetIsMovie returns the IsMovie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsMovie() bool {
	if o == nil || IsNil(o.IsMovie.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMovie.Get()
}

// GetIsMovieOk returns a tuple with the IsMovie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsMovieOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMovie.Get(), o.IsMovie.IsSet()
}

// HasIsMovie returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsMovie() bool {
	if o != nil && o.IsMovie.IsSet() {
		return true
	}

	return false
}

// SetIsMovie gets a reference to the given NullableBool and assigns it to the IsMovie field.
func (o *SessionInfoNowViewingItem) SetIsMovie(v bool) {
	o.IsMovie.Set(&v)
}
// SetIsMovieNil sets the value for IsMovie to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsMovieNil() {
	o.IsMovie.Set(nil)
}

// UnsetIsMovie ensures that no value is present for IsMovie, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsMovie() {
	o.IsMovie.Unset()
}

// GetIsSports returns the IsSports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsSports() bool {
	if o == nil || IsNil(o.IsSports.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSports.Get()
}

// GetIsSportsOk returns a tuple with the IsSports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsSportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSports.Get(), o.IsSports.IsSet()
}

// HasIsSports returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsSports() bool {
	if o != nil && o.IsSports.IsSet() {
		return true
	}

	return false
}

// SetIsSports gets a reference to the given NullableBool and assigns it to the IsSports field.
func (o *SessionInfoNowViewingItem) SetIsSports(v bool) {
	o.IsSports.Set(&v)
}
// SetIsSportsNil sets the value for IsSports to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsSportsNil() {
	o.IsSports.Set(nil)
}

// UnsetIsSports ensures that no value is present for IsSports, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsSports() {
	o.IsSports.Unset()
}

// GetIsSeries returns the IsSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsSeries() bool {
	if o == nil || IsNil(o.IsSeries.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSeries.Get()
}

// GetIsSeriesOk returns a tuple with the IsSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsSeriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSeries.Get(), o.IsSeries.IsSet()
}

// HasIsSeries returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsSeries() bool {
	if o != nil && o.IsSeries.IsSet() {
		return true
	}

	return false
}

// SetIsSeries gets a reference to the given NullableBool and assigns it to the IsSeries field.
func (o *SessionInfoNowViewingItem) SetIsSeries(v bool) {
	o.IsSeries.Set(&v)
}
// SetIsSeriesNil sets the value for IsSeries to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsSeriesNil() {
	o.IsSeries.Set(nil)
}

// UnsetIsSeries ensures that no value is present for IsSeries, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsSeries() {
	o.IsSeries.Unset()
}

// GetIsLive returns the IsLive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsLive() bool {
	if o == nil || IsNil(o.IsLive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsLive.Get()
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsLiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsLive.Get(), o.IsLive.IsSet()
}

// HasIsLive returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsLive() bool {
	if o != nil && o.IsLive.IsSet() {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given NullableBool and assigns it to the IsLive field.
func (o *SessionInfoNowViewingItem) SetIsLive(v bool) {
	o.IsLive.Set(&v)
}
// SetIsLiveNil sets the value for IsLive to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsLiveNil() {
	o.IsLive.Set(nil)
}

// UnsetIsLive ensures that no value is present for IsLive, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsLive() {
	o.IsLive.Unset()
}

// GetIsNews returns the IsNews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsNews() bool {
	if o == nil || IsNil(o.IsNews.Get()) {
		var ret bool
		return ret
	}
	return *o.IsNews.Get()
}

// GetIsNewsOk returns a tuple with the IsNews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsNewsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNews.Get(), o.IsNews.IsSet()
}

// HasIsNews returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsNews() bool {
	if o != nil && o.IsNews.IsSet() {
		return true
	}

	return false
}

// SetIsNews gets a reference to the given NullableBool and assigns it to the IsNews field.
func (o *SessionInfoNowViewingItem) SetIsNews(v bool) {
	o.IsNews.Set(&v)
}
// SetIsNewsNil sets the value for IsNews to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsNewsNil() {
	o.IsNews.Set(nil)
}

// UnsetIsNews ensures that no value is present for IsNews, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsNews() {
	o.IsNews.Unset()
}

// GetIsKids returns the IsKids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsKids() bool {
	if o == nil || IsNil(o.IsKids.Get()) {
		var ret bool
		return ret
	}
	return *o.IsKids.Get()
}

// GetIsKidsOk returns a tuple with the IsKids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsKidsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsKids.Get(), o.IsKids.IsSet()
}

// HasIsKids returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsKids() bool {
	if o != nil && o.IsKids.IsSet() {
		return true
	}

	return false
}

// SetIsKids gets a reference to the given NullableBool and assigns it to the IsKids field.
func (o *SessionInfoNowViewingItem) SetIsKids(v bool) {
	o.IsKids.Set(&v)
}
// SetIsKidsNil sets the value for IsKids to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsKidsNil() {
	o.IsKids.Set(nil)
}

// UnsetIsKids ensures that no value is present for IsKids, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsKids() {
	o.IsKids.Unset()
}

// GetIsPremiere returns the IsPremiere field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetIsPremiere() bool {
	if o == nil || IsNil(o.IsPremiere.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPremiere.Get()
}

// GetIsPremiereOk returns a tuple with the IsPremiere field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetIsPremiereOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPremiere.Get(), o.IsPremiere.IsSet()
}

// HasIsPremiere returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasIsPremiere() bool {
	if o != nil && o.IsPremiere.IsSet() {
		return true
	}

	return false
}

// SetIsPremiere gets a reference to the given NullableBool and assigns it to the IsPremiere field.
func (o *SessionInfoNowViewingItem) SetIsPremiere(v bool) {
	o.IsPremiere.Set(&v)
}
// SetIsPremiereNil sets the value for IsPremiere to be an explicit nil
func (o *SessionInfoNowViewingItem) SetIsPremiereNil() {
	o.IsPremiere.Set(nil)
}

// UnsetIsPremiere ensures that no value is present for IsPremiere, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetIsPremiere() {
	o.IsPremiere.Unset()
}

// GetTimerId returns the TimerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetTimerId() string {
	if o == nil || IsNil(o.TimerId.Get()) {
		var ret string
		return ret
	}
	return *o.TimerId.Get()
}

// GetTimerIdOk returns a tuple with the TimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetTimerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimerId.Get(), o.TimerId.IsSet()
}

// HasTimerId returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasTimerId() bool {
	if o != nil && o.TimerId.IsSet() {
		return true
	}

	return false
}

// SetTimerId gets a reference to the given NullableString and assigns it to the TimerId field.
func (o *SessionInfoNowViewingItem) SetTimerId(v string) {
	o.TimerId.Set(&v)
}
// SetTimerIdNil sets the value for TimerId to be an explicit nil
func (o *SessionInfoNowViewingItem) SetTimerIdNil() {
	o.TimerId.Set(nil)
}

// UnsetTimerId ensures that no value is present for TimerId, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetTimerId() {
	o.TimerId.Unset()
}

// GetCurrentProgram returns the CurrentProgram field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionInfoNowViewingItem) GetCurrentProgram() BaseItemDtoCurrentProgram {
	if o == nil || IsNil(o.CurrentProgram.Get()) {
		var ret BaseItemDtoCurrentProgram
		return ret
	}
	return *o.CurrentProgram.Get()
}

// GetCurrentProgramOk returns a tuple with the CurrentProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionInfoNowViewingItem) GetCurrentProgramOk() (*BaseItemDtoCurrentProgram, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentProgram.Get(), o.CurrentProgram.IsSet()
}

// HasCurrentProgram returns a boolean if a field has been set.
func (o *SessionInfoNowViewingItem) HasCurrentProgram() bool {
	if o != nil && o.CurrentProgram.IsSet() {
		return true
	}

	return false
}

// SetCurrentProgram gets a reference to the given NullableBaseItemDtoCurrentProgram and assigns it to the CurrentProgram field.
func (o *SessionInfoNowViewingItem) SetCurrentProgram(v BaseItemDtoCurrentProgram) {
	o.CurrentProgram.Set(&v)
}
// SetCurrentProgramNil sets the value for CurrentProgram to be an explicit nil
func (o *SessionInfoNowViewingItem) SetCurrentProgramNil() {
	o.CurrentProgram.Set(nil)
}

// UnsetCurrentProgram ensures that no value is present for CurrentProgram, not even an explicit nil
func (o *SessionInfoNowViewingItem) UnsetCurrentProgram() {
	o.CurrentProgram.Unset()
}

func (o SessionInfoNowViewingItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionInfoNowViewingItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.OriginalTitle.IsSet() {
		toSerialize["OriginalTitle"] = o.OriginalTitle.Get()
	}
	if o.ServerId.IsSet() {
		toSerialize["ServerId"] = o.ServerId.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.Etag.IsSet() {
		toSerialize["Etag"] = o.Etag.Get()
	}
	if o.SourceType.IsSet() {
		toSerialize["SourceType"] = o.SourceType.Get()
	}
	if o.PlaylistItemId.IsSet() {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["DateCreated"] = o.DateCreated.Get()
	}
	if o.DateLastMediaAdded.IsSet() {
		toSerialize["DateLastMediaAdded"] = o.DateLastMediaAdded.Get()
	}
	if o.ExtraType.IsSet() {
		toSerialize["ExtraType"] = o.ExtraType.Get()
	}
	if o.AirsBeforeSeasonNumber.IsSet() {
		toSerialize["AirsBeforeSeasonNumber"] = o.AirsBeforeSeasonNumber.Get()
	}
	if o.AirsAfterSeasonNumber.IsSet() {
		toSerialize["AirsAfterSeasonNumber"] = o.AirsAfterSeasonNumber.Get()
	}
	if o.AirsBeforeEpisodeNumber.IsSet() {
		toSerialize["AirsBeforeEpisodeNumber"] = o.AirsBeforeEpisodeNumber.Get()
	}
	if o.CanDelete.IsSet() {
		toSerialize["CanDelete"] = o.CanDelete.Get()
	}
	if o.CanDownload.IsSet() {
		toSerialize["CanDownload"] = o.CanDownload.Get()
	}
	if o.HasSubtitles.IsSet() {
		toSerialize["HasSubtitles"] = o.HasSubtitles.Get()
	}
	if o.PreferredMetadataLanguage.IsSet() {
		toSerialize["PreferredMetadataLanguage"] = o.PreferredMetadataLanguage.Get()
	}
	if o.PreferredMetadataCountryCode.IsSet() {
		toSerialize["PreferredMetadataCountryCode"] = o.PreferredMetadataCountryCode.Get()
	}
	if o.SupportsSync.IsSet() {
		toSerialize["SupportsSync"] = o.SupportsSync.Get()
	}
	if o.Container.IsSet() {
		toSerialize["Container"] = o.Container.Get()
	}
	if o.SortName.IsSet() {
		toSerialize["SortName"] = o.SortName.Get()
	}
	if o.ForcedSortName.IsSet() {
		toSerialize["ForcedSortName"] = o.ForcedSortName.Get()
	}
	if o.Video3DFormat.IsSet() {
		toSerialize["Video3DFormat"] = o.Video3DFormat.Get()
	}
	if o.PremiereDate.IsSet() {
		toSerialize["PremiereDate"] = o.PremiereDate.Get()
	}
	if o.ExternalUrls != nil {
		toSerialize["ExternalUrls"] = o.ExternalUrls
	}
	if o.MediaSources != nil {
		toSerialize["MediaSources"] = o.MediaSources
	}
	if o.CriticRating.IsSet() {
		toSerialize["CriticRating"] = o.CriticRating.Get()
	}
	if o.ProductionLocations != nil {
		toSerialize["ProductionLocations"] = o.ProductionLocations
	}
	if o.Path.IsSet() {
		toSerialize["Path"] = o.Path.Get()
	}
	if o.EnableMediaSourceDisplay.IsSet() {
		toSerialize["EnableMediaSourceDisplay"] = o.EnableMediaSourceDisplay.Get()
	}
	if o.OfficialRating.IsSet() {
		toSerialize["OfficialRating"] = o.OfficialRating.Get()
	}
	if o.CustomRating.IsSet() {
		toSerialize["CustomRating"] = o.CustomRating.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["Overview"] = o.Overview.Get()
	}
	if o.Taglines != nil {
		toSerialize["Taglines"] = o.Taglines
	}
	if o.Genres != nil {
		toSerialize["Genres"] = o.Genres
	}
	if o.CommunityRating.IsSet() {
		toSerialize["CommunityRating"] = o.CommunityRating.Get()
	}
	if o.CumulativeRunTimeTicks.IsSet() {
		toSerialize["CumulativeRunTimeTicks"] = o.CumulativeRunTimeTicks.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if o.PlayAccess.IsSet() {
		toSerialize["PlayAccess"] = o.PlayAccess.Get()
	}
	if o.AspectRatio.IsSet() {
		toSerialize["AspectRatio"] = o.AspectRatio.Get()
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if o.IsPlaceHolder.IsSet() {
		toSerialize["IsPlaceHolder"] = o.IsPlaceHolder.Get()
	}
	if o.Number.IsSet() {
		toSerialize["Number"] = o.Number.Get()
	}
	if o.ChannelNumber.IsSet() {
		toSerialize["ChannelNumber"] = o.ChannelNumber.Get()
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.IndexNumberEnd.IsSet() {
		toSerialize["IndexNumberEnd"] = o.IndexNumberEnd.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if o.RemoteTrailers != nil {
		toSerialize["RemoteTrailers"] = o.RemoteTrailers
	}
	if o.ProviderIds != nil {
		toSerialize["ProviderIds"] = o.ProviderIds
	}
	if o.IsHD.IsSet() {
		toSerialize["IsHD"] = o.IsHD.Get()
	}
	if o.IsFolder.IsSet() {
		toSerialize["IsFolder"] = o.IsFolder.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["ParentId"] = o.ParentId.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.People != nil {
		toSerialize["People"] = o.People
	}
	if o.Studios != nil {
		toSerialize["Studios"] = o.Studios
	}
	if o.GenreItems != nil {
		toSerialize["GenreItems"] = o.GenreItems
	}
	if o.ParentLogoItemId.IsSet() {
		toSerialize["ParentLogoItemId"] = o.ParentLogoItemId.Get()
	}
	if o.ParentBackdropItemId.IsSet() {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId.Get()
	}
	if o.ParentBackdropImageTags != nil {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if o.LocalTrailerCount.IsSet() {
		toSerialize["LocalTrailerCount"] = o.LocalTrailerCount.Get()
	}
	if o.UserData.IsSet() {
		toSerialize["UserData"] = o.UserData.Get()
	}
	if o.RecursiveItemCount.IsSet() {
		toSerialize["RecursiveItemCount"] = o.RecursiveItemCount.Get()
	}
	if o.ChildCount.IsSet() {
		toSerialize["ChildCount"] = o.ChildCount.Get()
	}
	if o.SeriesName.IsSet() {
		toSerialize["SeriesName"] = o.SeriesName.Get()
	}
	if o.SeriesId.IsSet() {
		toSerialize["SeriesId"] = o.SeriesId.Get()
	}
	if o.SeasonId.IsSet() {
		toSerialize["SeasonId"] = o.SeasonId.Get()
	}
	if o.SpecialFeatureCount.IsSet() {
		toSerialize["SpecialFeatureCount"] = o.SpecialFeatureCount.Get()
	}
	if o.DisplayPreferencesId.IsSet() {
		toSerialize["DisplayPreferencesId"] = o.DisplayPreferencesId.Get()
	}
	if o.Status.IsSet() {
		toSerialize["Status"] = o.Status.Get()
	}
	if o.AirTime.IsSet() {
		toSerialize["AirTime"] = o.AirTime.Get()
	}
	if o.AirDays != nil {
		toSerialize["AirDays"] = o.AirDays
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.PrimaryImageAspectRatio.IsSet() {
		toSerialize["PrimaryImageAspectRatio"] = o.PrimaryImageAspectRatio.Get()
	}
	if o.Artists != nil {
		toSerialize["Artists"] = o.Artists
	}
	if o.ArtistItems != nil {
		toSerialize["ArtistItems"] = o.ArtistItems
	}
	if o.Album.IsSet() {
		toSerialize["Album"] = o.Album.Get()
	}
	if o.CollectionType.IsSet() {
		toSerialize["CollectionType"] = o.CollectionType.Get()
	}
	if o.DisplayOrder.IsSet() {
		toSerialize["DisplayOrder"] = o.DisplayOrder.Get()
	}
	if o.AlbumId.IsSet() {
		toSerialize["AlbumId"] = o.AlbumId.Get()
	}
	if o.AlbumPrimaryImageTag.IsSet() {
		toSerialize["AlbumPrimaryImageTag"] = o.AlbumPrimaryImageTag.Get()
	}
	if o.SeriesPrimaryImageTag.IsSet() {
		toSerialize["SeriesPrimaryImageTag"] = o.SeriesPrimaryImageTag.Get()
	}
	if o.AlbumArtist.IsSet() {
		toSerialize["AlbumArtist"] = o.AlbumArtist.Get()
	}
	if o.AlbumArtists != nil {
		toSerialize["AlbumArtists"] = o.AlbumArtists
	}
	if o.SeasonName.IsSet() {
		toSerialize["SeasonName"] = o.SeasonName.Get()
	}
	if o.MediaStreams != nil {
		toSerialize["MediaStreams"] = o.MediaStreams
	}
	if o.VideoType.IsSet() {
		toSerialize["VideoType"] = o.VideoType.Get()
	}
	if o.PartCount.IsSet() {
		toSerialize["PartCount"] = o.PartCount.Get()
	}
	if o.MediaSourceCount.IsSet() {
		toSerialize["MediaSourceCount"] = o.MediaSourceCount.Get()
	}
	if o.ImageTags != nil {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if o.BackdropImageTags != nil {
		toSerialize["BackdropImageTags"] = o.BackdropImageTags
	}
	if o.ScreenshotImageTags != nil {
		toSerialize["ScreenshotImageTags"] = o.ScreenshotImageTags
	}
	if o.ParentLogoImageTag.IsSet() {
		toSerialize["ParentLogoImageTag"] = o.ParentLogoImageTag.Get()
	}
	if o.ParentArtItemId.IsSet() {
		toSerialize["ParentArtItemId"] = o.ParentArtItemId.Get()
	}
	if o.ParentArtImageTag.IsSet() {
		toSerialize["ParentArtImageTag"] = o.ParentArtImageTag.Get()
	}
	if o.SeriesThumbImageTag.IsSet() {
		toSerialize["SeriesThumbImageTag"] = o.SeriesThumbImageTag.Get()
	}
	if o.ImageBlurHashes.IsSet() {
		toSerialize["ImageBlurHashes"] = o.ImageBlurHashes.Get()
	}
	if o.SeriesStudio.IsSet() {
		toSerialize["SeriesStudio"] = o.SeriesStudio.Get()
	}
	if o.ParentThumbItemId.IsSet() {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId.Get()
	}
	if o.ParentThumbImageTag.IsSet() {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag.Get()
	}
	if o.ParentPrimaryImageItemId.IsSet() {
		toSerialize["ParentPrimaryImageItemId"] = o.ParentPrimaryImageItemId.Get()
	}
	if o.ParentPrimaryImageTag.IsSet() {
		toSerialize["ParentPrimaryImageTag"] = o.ParentPrimaryImageTag.Get()
	}
	if o.Chapters != nil {
		toSerialize["Chapters"] = o.Chapters
	}
	if o.LocationType.IsSet() {
		toSerialize["LocationType"] = o.LocationType.Get()
	}
	if o.IsoType.IsSet() {
		toSerialize["IsoType"] = o.IsoType.Get()
	}
	if o.MediaType.IsSet() {
		toSerialize["MediaType"] = o.MediaType.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["EndDate"] = o.EndDate.Get()
	}
	if o.LockedFields != nil {
		toSerialize["LockedFields"] = o.LockedFields
	}
	if o.TrailerCount.IsSet() {
		toSerialize["TrailerCount"] = o.TrailerCount.Get()
	}
	if o.MovieCount.IsSet() {
		toSerialize["MovieCount"] = o.MovieCount.Get()
	}
	if o.SeriesCount.IsSet() {
		toSerialize["SeriesCount"] = o.SeriesCount.Get()
	}
	if o.ProgramCount.IsSet() {
		toSerialize["ProgramCount"] = o.ProgramCount.Get()
	}
	if o.EpisodeCount.IsSet() {
		toSerialize["EpisodeCount"] = o.EpisodeCount.Get()
	}
	if o.SongCount.IsSet() {
		toSerialize["SongCount"] = o.SongCount.Get()
	}
	if o.AlbumCount.IsSet() {
		toSerialize["AlbumCount"] = o.AlbumCount.Get()
	}
	if o.ArtistCount.IsSet() {
		toSerialize["ArtistCount"] = o.ArtistCount.Get()
	}
	if o.MusicVideoCount.IsSet() {
		toSerialize["MusicVideoCount"] = o.MusicVideoCount.Get()
	}
	if o.LockData.IsSet() {
		toSerialize["LockData"] = o.LockData.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if o.CameraMake.IsSet() {
		toSerialize["CameraMake"] = o.CameraMake.Get()
	}
	if o.CameraModel.IsSet() {
		toSerialize["CameraModel"] = o.CameraModel.Get()
	}
	if o.Software.IsSet() {
		toSerialize["Software"] = o.Software.Get()
	}
	if o.ExposureTime.IsSet() {
		toSerialize["ExposureTime"] = o.ExposureTime.Get()
	}
	if o.FocalLength.IsSet() {
		toSerialize["FocalLength"] = o.FocalLength.Get()
	}
	if o.ImageOrientation.IsSet() {
		toSerialize["ImageOrientation"] = o.ImageOrientation.Get()
	}
	if o.Aperture.IsSet() {
		toSerialize["Aperture"] = o.Aperture.Get()
	}
	if o.ShutterSpeed.IsSet() {
		toSerialize["ShutterSpeed"] = o.ShutterSpeed.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["Latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["Longitude"] = o.Longitude.Get()
	}
	if o.Altitude.IsSet() {
		toSerialize["Altitude"] = o.Altitude.Get()
	}
	if o.IsoSpeedRating.IsSet() {
		toSerialize["IsoSpeedRating"] = o.IsoSpeedRating.Get()
	}
	if o.SeriesTimerId.IsSet() {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId.Get()
	}
	if o.ProgramId.IsSet() {
		toSerialize["ProgramId"] = o.ProgramId.Get()
	}
	if o.ChannelPrimaryImageTag.IsSet() {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag.Get()
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.CompletionPercentage.IsSet() {
		toSerialize["CompletionPercentage"] = o.CompletionPercentage.Get()
	}
	if o.IsRepeat.IsSet() {
		toSerialize["IsRepeat"] = o.IsRepeat.Get()
	}
	if o.EpisodeTitle.IsSet() {
		toSerialize["EpisodeTitle"] = o.EpisodeTitle.Get()
	}
	if o.ChannelType.IsSet() {
		toSerialize["ChannelType"] = o.ChannelType.Get()
	}
	if o.Audio.IsSet() {
		toSerialize["Audio"] = o.Audio.Get()
	}
	if o.IsMovie.IsSet() {
		toSerialize["IsMovie"] = o.IsMovie.Get()
	}
	if o.IsSports.IsSet() {
		toSerialize["IsSports"] = o.IsSports.Get()
	}
	if o.IsSeries.IsSet() {
		toSerialize["IsSeries"] = o.IsSeries.Get()
	}
	if o.IsLive.IsSet() {
		toSerialize["IsLive"] = o.IsLive.Get()
	}
	if o.IsNews.IsSet() {
		toSerialize["IsNews"] = o.IsNews.Get()
	}
	if o.IsKids.IsSet() {
		toSerialize["IsKids"] = o.IsKids.Get()
	}
	if o.IsPremiere.IsSet() {
		toSerialize["IsPremiere"] = o.IsPremiere.Get()
	}
	if o.TimerId.IsSet() {
		toSerialize["TimerId"] = o.TimerId.Get()
	}
	if o.CurrentProgram.IsSet() {
		toSerialize["CurrentProgram"] = o.CurrentProgram.Get()
	}
	return toSerialize, nil
}

type NullableSessionInfoNowViewingItem struct {
	value *SessionInfoNowViewingItem
	isSet bool
}

func (v NullableSessionInfoNowViewingItem) Get() *SessionInfoNowViewingItem {
	return v.value
}

func (v *NullableSessionInfoNowViewingItem) Set(val *SessionInfoNowViewingItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionInfoNowViewingItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionInfoNowViewingItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionInfoNowViewingItem(val *SessionInfoNowViewingItem) *NullableSessionInfoNowViewingItem {
	return &NullableSessionInfoNowViewingItem{value: val, isSet: true}
}

func (v NullableSessionInfoNowViewingItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionInfoNowViewingItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


