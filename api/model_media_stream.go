/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MediaStream type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaStream{}

// MediaStream Class MediaStream.
type MediaStream struct {
	// Gets or sets the codec.
	Codec NullableString `json:"Codec,omitempty"`
	// Gets or sets the codec tag.
	CodecTag NullableString `json:"CodecTag,omitempty"`
	// Gets or sets the language.
	Language NullableString `json:"Language,omitempty"`
	// Gets or sets the color range.
	ColorRange NullableString `json:"ColorRange,omitempty"`
	// Gets or sets the color space.
	ColorSpace NullableString `json:"ColorSpace,omitempty"`
	// Gets or sets the color transfer.
	ColorTransfer NullableString `json:"ColorTransfer,omitempty"`
	// Gets or sets the color primaries.
	ColorPrimaries NullableString `json:"ColorPrimaries,omitempty"`
	// Gets or sets the Dolby Vision version major.
	DvVersionMajor NullableInt32 `json:"DvVersionMajor,omitempty"`
	// Gets or sets the Dolby Vision version minor.
	DvVersionMinor NullableInt32 `json:"DvVersionMinor,omitempty"`
	// Gets or sets the Dolby Vision profile.
	DvProfile NullableInt32 `json:"DvProfile,omitempty"`
	// Gets or sets the Dolby Vision level.
	DvLevel NullableInt32 `json:"DvLevel,omitempty"`
	// Gets or sets the Dolby Vision rpu present flag.
	RpuPresentFlag NullableInt32 `json:"RpuPresentFlag,omitempty"`
	// Gets or sets the Dolby Vision el present flag.
	ElPresentFlag NullableInt32 `json:"ElPresentFlag,omitempty"`
	// Gets or sets the Dolby Vision bl present flag.
	BlPresentFlag NullableInt32 `json:"BlPresentFlag,omitempty"`
	// Gets or sets the Dolby Vision bl signal compatibility id.
	DvBlSignalCompatibilityId NullableInt32 `json:"DvBlSignalCompatibilityId,omitempty"`
	// Gets or sets the Rotation in degrees.
	Rotation NullableInt32 `json:"Rotation,omitempty"`
	// Gets or sets the comment.
	Comment NullableString `json:"Comment,omitempty"`
	// Gets or sets the time base.
	TimeBase NullableString `json:"TimeBase,omitempty"`
	// Gets or sets the codec time base.
	CodecTimeBase NullableString `json:"CodecTimeBase,omitempty"`
	// Gets or sets the title.
	Title NullableString `json:"Title,omitempty"`
	// An enum representing video ranges.
	VideoRange *VideoRange `json:"VideoRange,omitempty"`
	// An enum representing types of video ranges.
	VideoRangeType *VideoRangeType `json:"VideoRangeType,omitempty"`
	// Gets the video dovi title.
	VideoDoViTitle NullableString `json:"VideoDoViTitle,omitempty"`
	// An enum representing formats of spatial audio.
	AudioSpatialFormat *AudioSpatialFormat `json:"AudioSpatialFormat,omitempty"`
	LocalizedUndefined NullableString `json:"LocalizedUndefined,omitempty"`
	LocalizedDefault NullableString `json:"LocalizedDefault,omitempty"`
	LocalizedForced NullableString `json:"LocalizedForced,omitempty"`
	LocalizedExternal NullableString `json:"LocalizedExternal,omitempty"`
	LocalizedHearingImpaired NullableString `json:"LocalizedHearingImpaired,omitempty"`
	DisplayTitle NullableString `json:"DisplayTitle,omitempty"`
	NalLengthSize NullableString `json:"NalLengthSize,omitempty"`
	// Gets or sets a value indicating whether this instance is interlaced.
	IsInterlaced *bool `json:"IsInterlaced,omitempty"`
	IsAVC NullableBool `json:"IsAVC,omitempty"`
	// Gets or sets the channel layout.
	ChannelLayout NullableString `json:"ChannelLayout,omitempty"`
	// Gets or sets the bit rate.
	BitRate NullableInt32 `json:"BitRate,omitempty"`
	// Gets or sets the bit depth.
	BitDepth NullableInt32 `json:"BitDepth,omitempty"`
	// Gets or sets the reference frames.
	RefFrames NullableInt32 `json:"RefFrames,omitempty"`
	// Gets or sets the length of the packet.
	PacketLength NullableInt32 `json:"PacketLength,omitempty"`
	// Gets or sets the channels.
	Channels NullableInt32 `json:"Channels,omitempty"`
	// Gets or sets the sample rate.
	SampleRate NullableInt32 `json:"SampleRate,omitempty"`
	// Gets or sets a value indicating whether this instance is default.
	IsDefault *bool `json:"IsDefault,omitempty"`
	// Gets or sets a value indicating whether this instance is forced.
	IsForced *bool `json:"IsForced,omitempty"`
	// Gets or sets a value indicating whether this instance is for the hearing impaired.
	IsHearingImpaired *bool `json:"IsHearingImpaired,omitempty"`
	// Gets or sets the height.
	Height NullableInt32 `json:"Height,omitempty"`
	// Gets or sets the width.
	Width NullableInt32 `json:"Width,omitempty"`
	// Gets or sets the average frame rate.
	AverageFrameRate NullableFloat32 `json:"AverageFrameRate,omitempty"`
	// Gets or sets the real frame rate.
	RealFrameRate NullableFloat32 `json:"RealFrameRate,omitempty"`
	// Gets the framerate used as reference.  Prefer AverageFrameRate, if that is null or an unrealistic value  then fallback to RealFrameRate.
	ReferenceFrameRate NullableFloat32 `json:"ReferenceFrameRate,omitempty"`
	// Gets or sets the profile.
	Profile NullableString `json:"Profile,omitempty"`
	// Gets or sets the type.
	Type *MediaStreamType `json:"Type,omitempty"`
	// Gets or sets the aspect ratio.
	AspectRatio NullableString `json:"AspectRatio,omitempty"`
	// Gets or sets the index.
	Index *int32 `json:"Index,omitempty"`
	// Gets or sets the score.
	Score NullableInt32 `json:"Score,omitempty"`
	// Gets or sets a value indicating whether this instance is external.
	IsExternal *bool `json:"IsExternal,omitempty"`
	// Gets or sets the method.
	DeliveryMethod NullableSubtitleDeliveryMethod `json:"DeliveryMethod,omitempty"`
	// Gets or sets the delivery URL.
	DeliveryUrl NullableString `json:"DeliveryUrl,omitempty"`
	// Gets or sets a value indicating whether this instance is external URL.
	IsExternalUrl NullableBool `json:"IsExternalUrl,omitempty"`
	IsTextSubtitleStream *bool `json:"IsTextSubtitleStream,omitempty"`
	// Gets or sets a value indicating whether [supports external stream].
	SupportsExternalStream *bool `json:"SupportsExternalStream,omitempty"`
	// Gets or sets the filename.
	Path NullableString `json:"Path,omitempty"`
	// Gets or sets the pixel format.
	PixelFormat NullableString `json:"PixelFormat,omitempty"`
	// Gets or sets the level.
	Level NullableFloat64 `json:"Level,omitempty"`
	// Gets or sets whether this instance is anamorphic.
	IsAnamorphic NullableBool `json:"IsAnamorphic,omitempty"`
}

// NewMediaStream instantiates a new MediaStream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaStream() *MediaStream {
	this := MediaStream{}
	return &this
}

// NewMediaStreamWithDefaults instantiates a new MediaStream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaStreamWithDefaults() *MediaStream {
	this := MediaStream{}
	return &this
}

// GetCodec returns the Codec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetCodec() string {
	if o == nil || IsNil(o.Codec.Get()) {
		var ret string
		return ret
	}
	return *o.Codec.Get()
}

// GetCodecOk returns a tuple with the Codec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetCodecOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Codec.Get(), o.Codec.IsSet()
}

// HasCodec returns a boolean if a field has been set.
func (o *MediaStream) HasCodec() bool {
	if o != nil && o.Codec.IsSet() {
		return true
	}

	return false
}

// SetCodec gets a reference to the given NullableString and assigns it to the Codec field.
func (o *MediaStream) SetCodec(v string) {
	o.Codec.Set(&v)
}
// SetCodecNil sets the value for Codec to be an explicit nil
func (o *MediaStream) SetCodecNil() {
	o.Codec.Set(nil)
}

// UnsetCodec ensures that no value is present for Codec, not even an explicit nil
func (o *MediaStream) UnsetCodec() {
	o.Codec.Unset()
}

// GetCodecTag returns the CodecTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetCodecTag() string {
	if o == nil || IsNil(o.CodecTag.Get()) {
		var ret string
		return ret
	}
	return *o.CodecTag.Get()
}

// GetCodecTagOk returns a tuple with the CodecTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetCodecTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CodecTag.Get(), o.CodecTag.IsSet()
}

// HasCodecTag returns a boolean if a field has been set.
func (o *MediaStream) HasCodecTag() bool {
	if o != nil && o.CodecTag.IsSet() {
		return true
	}

	return false
}

// SetCodecTag gets a reference to the given NullableString and assigns it to the CodecTag field.
func (o *MediaStream) SetCodecTag(v string) {
	o.CodecTag.Set(&v)
}
// SetCodecTagNil sets the value for CodecTag to be an explicit nil
func (o *MediaStream) SetCodecTagNil() {
	o.CodecTag.Set(nil)
}

// UnsetCodecTag ensures that no value is present for CodecTag, not even an explicit nil
func (o *MediaStream) UnsetCodecTag() {
	o.CodecTag.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *MediaStream) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *MediaStream) SetLanguage(v string) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *MediaStream) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *MediaStream) UnsetLanguage() {
	o.Language.Unset()
}

// GetColorRange returns the ColorRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetColorRange() string {
	if o == nil || IsNil(o.ColorRange.Get()) {
		var ret string
		return ret
	}
	return *o.ColorRange.Get()
}

// GetColorRangeOk returns a tuple with the ColorRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetColorRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColorRange.Get(), o.ColorRange.IsSet()
}

// HasColorRange returns a boolean if a field has been set.
func (o *MediaStream) HasColorRange() bool {
	if o != nil && o.ColorRange.IsSet() {
		return true
	}

	return false
}

// SetColorRange gets a reference to the given NullableString and assigns it to the ColorRange field.
func (o *MediaStream) SetColorRange(v string) {
	o.ColorRange.Set(&v)
}
// SetColorRangeNil sets the value for ColorRange to be an explicit nil
func (o *MediaStream) SetColorRangeNil() {
	o.ColorRange.Set(nil)
}

// UnsetColorRange ensures that no value is present for ColorRange, not even an explicit nil
func (o *MediaStream) UnsetColorRange() {
	o.ColorRange.Unset()
}

// GetColorSpace returns the ColorSpace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetColorSpace() string {
	if o == nil || IsNil(o.ColorSpace.Get()) {
		var ret string
		return ret
	}
	return *o.ColorSpace.Get()
}

// GetColorSpaceOk returns a tuple with the ColorSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetColorSpaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColorSpace.Get(), o.ColorSpace.IsSet()
}

// HasColorSpace returns a boolean if a field has been set.
func (o *MediaStream) HasColorSpace() bool {
	if o != nil && o.ColorSpace.IsSet() {
		return true
	}

	return false
}

// SetColorSpace gets a reference to the given NullableString and assigns it to the ColorSpace field.
func (o *MediaStream) SetColorSpace(v string) {
	o.ColorSpace.Set(&v)
}
// SetColorSpaceNil sets the value for ColorSpace to be an explicit nil
func (o *MediaStream) SetColorSpaceNil() {
	o.ColorSpace.Set(nil)
}

// UnsetColorSpace ensures that no value is present for ColorSpace, not even an explicit nil
func (o *MediaStream) UnsetColorSpace() {
	o.ColorSpace.Unset()
}

// GetColorTransfer returns the ColorTransfer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetColorTransfer() string {
	if o == nil || IsNil(o.ColorTransfer.Get()) {
		var ret string
		return ret
	}
	return *o.ColorTransfer.Get()
}

// GetColorTransferOk returns a tuple with the ColorTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetColorTransferOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColorTransfer.Get(), o.ColorTransfer.IsSet()
}

// HasColorTransfer returns a boolean if a field has been set.
func (o *MediaStream) HasColorTransfer() bool {
	if o != nil && o.ColorTransfer.IsSet() {
		return true
	}

	return false
}

// SetColorTransfer gets a reference to the given NullableString and assigns it to the ColorTransfer field.
func (o *MediaStream) SetColorTransfer(v string) {
	o.ColorTransfer.Set(&v)
}
// SetColorTransferNil sets the value for ColorTransfer to be an explicit nil
func (o *MediaStream) SetColorTransferNil() {
	o.ColorTransfer.Set(nil)
}

// UnsetColorTransfer ensures that no value is present for ColorTransfer, not even an explicit nil
func (o *MediaStream) UnsetColorTransfer() {
	o.ColorTransfer.Unset()
}

// GetColorPrimaries returns the ColorPrimaries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetColorPrimaries() string {
	if o == nil || IsNil(o.ColorPrimaries.Get()) {
		var ret string
		return ret
	}
	return *o.ColorPrimaries.Get()
}

// GetColorPrimariesOk returns a tuple with the ColorPrimaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetColorPrimariesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColorPrimaries.Get(), o.ColorPrimaries.IsSet()
}

// HasColorPrimaries returns a boolean if a field has been set.
func (o *MediaStream) HasColorPrimaries() bool {
	if o != nil && o.ColorPrimaries.IsSet() {
		return true
	}

	return false
}

// SetColorPrimaries gets a reference to the given NullableString and assigns it to the ColorPrimaries field.
func (o *MediaStream) SetColorPrimaries(v string) {
	o.ColorPrimaries.Set(&v)
}
// SetColorPrimariesNil sets the value for ColorPrimaries to be an explicit nil
func (o *MediaStream) SetColorPrimariesNil() {
	o.ColorPrimaries.Set(nil)
}

// UnsetColorPrimaries ensures that no value is present for ColorPrimaries, not even an explicit nil
func (o *MediaStream) UnsetColorPrimaries() {
	o.ColorPrimaries.Unset()
}

// GetDvVersionMajor returns the DvVersionMajor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDvVersionMajor() int32 {
	if o == nil || IsNil(o.DvVersionMajor.Get()) {
		var ret int32
		return ret
	}
	return *o.DvVersionMajor.Get()
}

// GetDvVersionMajorOk returns a tuple with the DvVersionMajor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDvVersionMajorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DvVersionMajor.Get(), o.DvVersionMajor.IsSet()
}

// HasDvVersionMajor returns a boolean if a field has been set.
func (o *MediaStream) HasDvVersionMajor() bool {
	if o != nil && o.DvVersionMajor.IsSet() {
		return true
	}

	return false
}

// SetDvVersionMajor gets a reference to the given NullableInt32 and assigns it to the DvVersionMajor field.
func (o *MediaStream) SetDvVersionMajor(v int32) {
	o.DvVersionMajor.Set(&v)
}
// SetDvVersionMajorNil sets the value for DvVersionMajor to be an explicit nil
func (o *MediaStream) SetDvVersionMajorNil() {
	o.DvVersionMajor.Set(nil)
}

// UnsetDvVersionMajor ensures that no value is present for DvVersionMajor, not even an explicit nil
func (o *MediaStream) UnsetDvVersionMajor() {
	o.DvVersionMajor.Unset()
}

// GetDvVersionMinor returns the DvVersionMinor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDvVersionMinor() int32 {
	if o == nil || IsNil(o.DvVersionMinor.Get()) {
		var ret int32
		return ret
	}
	return *o.DvVersionMinor.Get()
}

// GetDvVersionMinorOk returns a tuple with the DvVersionMinor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDvVersionMinorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DvVersionMinor.Get(), o.DvVersionMinor.IsSet()
}

// HasDvVersionMinor returns a boolean if a field has been set.
func (o *MediaStream) HasDvVersionMinor() bool {
	if o != nil && o.DvVersionMinor.IsSet() {
		return true
	}

	return false
}

// SetDvVersionMinor gets a reference to the given NullableInt32 and assigns it to the DvVersionMinor field.
func (o *MediaStream) SetDvVersionMinor(v int32) {
	o.DvVersionMinor.Set(&v)
}
// SetDvVersionMinorNil sets the value for DvVersionMinor to be an explicit nil
func (o *MediaStream) SetDvVersionMinorNil() {
	o.DvVersionMinor.Set(nil)
}

// UnsetDvVersionMinor ensures that no value is present for DvVersionMinor, not even an explicit nil
func (o *MediaStream) UnsetDvVersionMinor() {
	o.DvVersionMinor.Unset()
}

// GetDvProfile returns the DvProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDvProfile() int32 {
	if o == nil || IsNil(o.DvProfile.Get()) {
		var ret int32
		return ret
	}
	return *o.DvProfile.Get()
}

// GetDvProfileOk returns a tuple with the DvProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDvProfileOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DvProfile.Get(), o.DvProfile.IsSet()
}

// HasDvProfile returns a boolean if a field has been set.
func (o *MediaStream) HasDvProfile() bool {
	if o != nil && o.DvProfile.IsSet() {
		return true
	}

	return false
}

// SetDvProfile gets a reference to the given NullableInt32 and assigns it to the DvProfile field.
func (o *MediaStream) SetDvProfile(v int32) {
	o.DvProfile.Set(&v)
}
// SetDvProfileNil sets the value for DvProfile to be an explicit nil
func (o *MediaStream) SetDvProfileNil() {
	o.DvProfile.Set(nil)
}

// UnsetDvProfile ensures that no value is present for DvProfile, not even an explicit nil
func (o *MediaStream) UnsetDvProfile() {
	o.DvProfile.Unset()
}

// GetDvLevel returns the DvLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDvLevel() int32 {
	if o == nil || IsNil(o.DvLevel.Get()) {
		var ret int32
		return ret
	}
	return *o.DvLevel.Get()
}

// GetDvLevelOk returns a tuple with the DvLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDvLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DvLevel.Get(), o.DvLevel.IsSet()
}

// HasDvLevel returns a boolean if a field has been set.
func (o *MediaStream) HasDvLevel() bool {
	if o != nil && o.DvLevel.IsSet() {
		return true
	}

	return false
}

// SetDvLevel gets a reference to the given NullableInt32 and assigns it to the DvLevel field.
func (o *MediaStream) SetDvLevel(v int32) {
	o.DvLevel.Set(&v)
}
// SetDvLevelNil sets the value for DvLevel to be an explicit nil
func (o *MediaStream) SetDvLevelNil() {
	o.DvLevel.Set(nil)
}

// UnsetDvLevel ensures that no value is present for DvLevel, not even an explicit nil
func (o *MediaStream) UnsetDvLevel() {
	o.DvLevel.Unset()
}

// GetRpuPresentFlag returns the RpuPresentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetRpuPresentFlag() int32 {
	if o == nil || IsNil(o.RpuPresentFlag.Get()) {
		var ret int32
		return ret
	}
	return *o.RpuPresentFlag.Get()
}

// GetRpuPresentFlagOk returns a tuple with the RpuPresentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetRpuPresentFlagOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RpuPresentFlag.Get(), o.RpuPresentFlag.IsSet()
}

// HasRpuPresentFlag returns a boolean if a field has been set.
func (o *MediaStream) HasRpuPresentFlag() bool {
	if o != nil && o.RpuPresentFlag.IsSet() {
		return true
	}

	return false
}

// SetRpuPresentFlag gets a reference to the given NullableInt32 and assigns it to the RpuPresentFlag field.
func (o *MediaStream) SetRpuPresentFlag(v int32) {
	o.RpuPresentFlag.Set(&v)
}
// SetRpuPresentFlagNil sets the value for RpuPresentFlag to be an explicit nil
func (o *MediaStream) SetRpuPresentFlagNil() {
	o.RpuPresentFlag.Set(nil)
}

// UnsetRpuPresentFlag ensures that no value is present for RpuPresentFlag, not even an explicit nil
func (o *MediaStream) UnsetRpuPresentFlag() {
	o.RpuPresentFlag.Unset()
}

// GetElPresentFlag returns the ElPresentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetElPresentFlag() int32 {
	if o == nil || IsNil(o.ElPresentFlag.Get()) {
		var ret int32
		return ret
	}
	return *o.ElPresentFlag.Get()
}

// GetElPresentFlagOk returns a tuple with the ElPresentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetElPresentFlagOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ElPresentFlag.Get(), o.ElPresentFlag.IsSet()
}

// HasElPresentFlag returns a boolean if a field has been set.
func (o *MediaStream) HasElPresentFlag() bool {
	if o != nil && o.ElPresentFlag.IsSet() {
		return true
	}

	return false
}

// SetElPresentFlag gets a reference to the given NullableInt32 and assigns it to the ElPresentFlag field.
func (o *MediaStream) SetElPresentFlag(v int32) {
	o.ElPresentFlag.Set(&v)
}
// SetElPresentFlagNil sets the value for ElPresentFlag to be an explicit nil
func (o *MediaStream) SetElPresentFlagNil() {
	o.ElPresentFlag.Set(nil)
}

// UnsetElPresentFlag ensures that no value is present for ElPresentFlag, not even an explicit nil
func (o *MediaStream) UnsetElPresentFlag() {
	o.ElPresentFlag.Unset()
}

// GetBlPresentFlag returns the BlPresentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetBlPresentFlag() int32 {
	if o == nil || IsNil(o.BlPresentFlag.Get()) {
		var ret int32
		return ret
	}
	return *o.BlPresentFlag.Get()
}

// GetBlPresentFlagOk returns a tuple with the BlPresentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetBlPresentFlagOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlPresentFlag.Get(), o.BlPresentFlag.IsSet()
}

// HasBlPresentFlag returns a boolean if a field has been set.
func (o *MediaStream) HasBlPresentFlag() bool {
	if o != nil && o.BlPresentFlag.IsSet() {
		return true
	}

	return false
}

// SetBlPresentFlag gets a reference to the given NullableInt32 and assigns it to the BlPresentFlag field.
func (o *MediaStream) SetBlPresentFlag(v int32) {
	o.BlPresentFlag.Set(&v)
}
// SetBlPresentFlagNil sets the value for BlPresentFlag to be an explicit nil
func (o *MediaStream) SetBlPresentFlagNil() {
	o.BlPresentFlag.Set(nil)
}

// UnsetBlPresentFlag ensures that no value is present for BlPresentFlag, not even an explicit nil
func (o *MediaStream) UnsetBlPresentFlag() {
	o.BlPresentFlag.Unset()
}

// GetDvBlSignalCompatibilityId returns the DvBlSignalCompatibilityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDvBlSignalCompatibilityId() int32 {
	if o == nil || IsNil(o.DvBlSignalCompatibilityId.Get()) {
		var ret int32
		return ret
	}
	return *o.DvBlSignalCompatibilityId.Get()
}

// GetDvBlSignalCompatibilityIdOk returns a tuple with the DvBlSignalCompatibilityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDvBlSignalCompatibilityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DvBlSignalCompatibilityId.Get(), o.DvBlSignalCompatibilityId.IsSet()
}

// HasDvBlSignalCompatibilityId returns a boolean if a field has been set.
func (o *MediaStream) HasDvBlSignalCompatibilityId() bool {
	if o != nil && o.DvBlSignalCompatibilityId.IsSet() {
		return true
	}

	return false
}

// SetDvBlSignalCompatibilityId gets a reference to the given NullableInt32 and assigns it to the DvBlSignalCompatibilityId field.
func (o *MediaStream) SetDvBlSignalCompatibilityId(v int32) {
	o.DvBlSignalCompatibilityId.Set(&v)
}
// SetDvBlSignalCompatibilityIdNil sets the value for DvBlSignalCompatibilityId to be an explicit nil
func (o *MediaStream) SetDvBlSignalCompatibilityIdNil() {
	o.DvBlSignalCompatibilityId.Set(nil)
}

// UnsetDvBlSignalCompatibilityId ensures that no value is present for DvBlSignalCompatibilityId, not even an explicit nil
func (o *MediaStream) UnsetDvBlSignalCompatibilityId() {
	o.DvBlSignalCompatibilityId.Unset()
}

// GetRotation returns the Rotation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetRotation() int32 {
	if o == nil || IsNil(o.Rotation.Get()) {
		var ret int32
		return ret
	}
	return *o.Rotation.Get()
}

// GetRotationOk returns a tuple with the Rotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetRotationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rotation.Get(), o.Rotation.IsSet()
}

// HasRotation returns a boolean if a field has been set.
func (o *MediaStream) HasRotation() bool {
	if o != nil && o.Rotation.IsSet() {
		return true
	}

	return false
}

// SetRotation gets a reference to the given NullableInt32 and assigns it to the Rotation field.
func (o *MediaStream) SetRotation(v int32) {
	o.Rotation.Set(&v)
}
// SetRotationNil sets the value for Rotation to be an explicit nil
func (o *MediaStream) SetRotationNil() {
	o.Rotation.Set(nil)
}

// UnsetRotation ensures that no value is present for Rotation, not even an explicit nil
func (o *MediaStream) UnsetRotation() {
	o.Rotation.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *MediaStream) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *MediaStream) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *MediaStream) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *MediaStream) UnsetComment() {
	o.Comment.Unset()
}

// GetTimeBase returns the TimeBase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetTimeBase() string {
	if o == nil || IsNil(o.TimeBase.Get()) {
		var ret string
		return ret
	}
	return *o.TimeBase.Get()
}

// GetTimeBaseOk returns a tuple with the TimeBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetTimeBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeBase.Get(), o.TimeBase.IsSet()
}

// HasTimeBase returns a boolean if a field has been set.
func (o *MediaStream) HasTimeBase() bool {
	if o != nil && o.TimeBase.IsSet() {
		return true
	}

	return false
}

// SetTimeBase gets a reference to the given NullableString and assigns it to the TimeBase field.
func (o *MediaStream) SetTimeBase(v string) {
	o.TimeBase.Set(&v)
}
// SetTimeBaseNil sets the value for TimeBase to be an explicit nil
func (o *MediaStream) SetTimeBaseNil() {
	o.TimeBase.Set(nil)
}

// UnsetTimeBase ensures that no value is present for TimeBase, not even an explicit nil
func (o *MediaStream) UnsetTimeBase() {
	o.TimeBase.Unset()
}

// GetCodecTimeBase returns the CodecTimeBase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetCodecTimeBase() string {
	if o == nil || IsNil(o.CodecTimeBase.Get()) {
		var ret string
		return ret
	}
	return *o.CodecTimeBase.Get()
}

// GetCodecTimeBaseOk returns a tuple with the CodecTimeBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetCodecTimeBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CodecTimeBase.Get(), o.CodecTimeBase.IsSet()
}

// HasCodecTimeBase returns a boolean if a field has been set.
func (o *MediaStream) HasCodecTimeBase() bool {
	if o != nil && o.CodecTimeBase.IsSet() {
		return true
	}

	return false
}

// SetCodecTimeBase gets a reference to the given NullableString and assigns it to the CodecTimeBase field.
func (o *MediaStream) SetCodecTimeBase(v string) {
	o.CodecTimeBase.Set(&v)
}
// SetCodecTimeBaseNil sets the value for CodecTimeBase to be an explicit nil
func (o *MediaStream) SetCodecTimeBaseNil() {
	o.CodecTimeBase.Set(nil)
}

// UnsetCodecTimeBase ensures that no value is present for CodecTimeBase, not even an explicit nil
func (o *MediaStream) UnsetCodecTimeBase() {
	o.CodecTimeBase.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *MediaStream) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *MediaStream) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *MediaStream) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *MediaStream) UnsetTitle() {
	o.Title.Unset()
}

// GetVideoRange returns the VideoRange field value if set, zero value otherwise.
func (o *MediaStream) GetVideoRange() VideoRange {
	if o == nil || IsNil(o.VideoRange) {
		var ret VideoRange
		return ret
	}
	return *o.VideoRange
}

// GetVideoRangeOk returns a tuple with the VideoRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetVideoRangeOk() (*VideoRange, bool) {
	if o == nil || IsNil(o.VideoRange) {
		return nil, false
	}
	return o.VideoRange, true
}

// HasVideoRange returns a boolean if a field has been set.
func (o *MediaStream) HasVideoRange() bool {
	if o != nil && !IsNil(o.VideoRange) {
		return true
	}

	return false
}

// SetVideoRange gets a reference to the given VideoRange and assigns it to the VideoRange field.
func (o *MediaStream) SetVideoRange(v VideoRange) {
	o.VideoRange = &v
}

// GetVideoRangeType returns the VideoRangeType field value if set, zero value otherwise.
func (o *MediaStream) GetVideoRangeType() VideoRangeType {
	if o == nil || IsNil(o.VideoRangeType) {
		var ret VideoRangeType
		return ret
	}
	return *o.VideoRangeType
}

// GetVideoRangeTypeOk returns a tuple with the VideoRangeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetVideoRangeTypeOk() (*VideoRangeType, bool) {
	if o == nil || IsNil(o.VideoRangeType) {
		return nil, false
	}
	return o.VideoRangeType, true
}

// HasVideoRangeType returns a boolean if a field has been set.
func (o *MediaStream) HasVideoRangeType() bool {
	if o != nil && !IsNil(o.VideoRangeType) {
		return true
	}

	return false
}

// SetVideoRangeType gets a reference to the given VideoRangeType and assigns it to the VideoRangeType field.
func (o *MediaStream) SetVideoRangeType(v VideoRangeType) {
	o.VideoRangeType = &v
}

// GetVideoDoViTitle returns the VideoDoViTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetVideoDoViTitle() string {
	if o == nil || IsNil(o.VideoDoViTitle.Get()) {
		var ret string
		return ret
	}
	return *o.VideoDoViTitle.Get()
}

// GetVideoDoViTitleOk returns a tuple with the VideoDoViTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetVideoDoViTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoDoViTitle.Get(), o.VideoDoViTitle.IsSet()
}

// HasVideoDoViTitle returns a boolean if a field has been set.
func (o *MediaStream) HasVideoDoViTitle() bool {
	if o != nil && o.VideoDoViTitle.IsSet() {
		return true
	}

	return false
}

// SetVideoDoViTitle gets a reference to the given NullableString and assigns it to the VideoDoViTitle field.
func (o *MediaStream) SetVideoDoViTitle(v string) {
	o.VideoDoViTitle.Set(&v)
}
// SetVideoDoViTitleNil sets the value for VideoDoViTitle to be an explicit nil
func (o *MediaStream) SetVideoDoViTitleNil() {
	o.VideoDoViTitle.Set(nil)
}

// UnsetVideoDoViTitle ensures that no value is present for VideoDoViTitle, not even an explicit nil
func (o *MediaStream) UnsetVideoDoViTitle() {
	o.VideoDoViTitle.Unset()
}

// GetAudioSpatialFormat returns the AudioSpatialFormat field value if set, zero value otherwise.
func (o *MediaStream) GetAudioSpatialFormat() AudioSpatialFormat {
	if o == nil || IsNil(o.AudioSpatialFormat) {
		var ret AudioSpatialFormat
		return ret
	}
	return *o.AudioSpatialFormat
}

// GetAudioSpatialFormatOk returns a tuple with the AudioSpatialFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetAudioSpatialFormatOk() (*AudioSpatialFormat, bool) {
	if o == nil || IsNil(o.AudioSpatialFormat) {
		return nil, false
	}
	return o.AudioSpatialFormat, true
}

// HasAudioSpatialFormat returns a boolean if a field has been set.
func (o *MediaStream) HasAudioSpatialFormat() bool {
	if o != nil && !IsNil(o.AudioSpatialFormat) {
		return true
	}

	return false
}

// SetAudioSpatialFormat gets a reference to the given AudioSpatialFormat and assigns it to the AudioSpatialFormat field.
func (o *MediaStream) SetAudioSpatialFormat(v AudioSpatialFormat) {
	o.AudioSpatialFormat = &v
}

// GetLocalizedUndefined returns the LocalizedUndefined field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLocalizedUndefined() string {
	if o == nil || IsNil(o.LocalizedUndefined.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedUndefined.Get()
}

// GetLocalizedUndefinedOk returns a tuple with the LocalizedUndefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLocalizedUndefinedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedUndefined.Get(), o.LocalizedUndefined.IsSet()
}

// HasLocalizedUndefined returns a boolean if a field has been set.
func (o *MediaStream) HasLocalizedUndefined() bool {
	if o != nil && o.LocalizedUndefined.IsSet() {
		return true
	}

	return false
}

// SetLocalizedUndefined gets a reference to the given NullableString and assigns it to the LocalizedUndefined field.
func (o *MediaStream) SetLocalizedUndefined(v string) {
	o.LocalizedUndefined.Set(&v)
}
// SetLocalizedUndefinedNil sets the value for LocalizedUndefined to be an explicit nil
func (o *MediaStream) SetLocalizedUndefinedNil() {
	o.LocalizedUndefined.Set(nil)
}

// UnsetLocalizedUndefined ensures that no value is present for LocalizedUndefined, not even an explicit nil
func (o *MediaStream) UnsetLocalizedUndefined() {
	o.LocalizedUndefined.Unset()
}

// GetLocalizedDefault returns the LocalizedDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLocalizedDefault() string {
	if o == nil || IsNil(o.LocalizedDefault.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedDefault.Get()
}

// GetLocalizedDefaultOk returns a tuple with the LocalizedDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLocalizedDefaultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedDefault.Get(), o.LocalizedDefault.IsSet()
}

// HasLocalizedDefault returns a boolean if a field has been set.
func (o *MediaStream) HasLocalizedDefault() bool {
	if o != nil && o.LocalizedDefault.IsSet() {
		return true
	}

	return false
}

// SetLocalizedDefault gets a reference to the given NullableString and assigns it to the LocalizedDefault field.
func (o *MediaStream) SetLocalizedDefault(v string) {
	o.LocalizedDefault.Set(&v)
}
// SetLocalizedDefaultNil sets the value for LocalizedDefault to be an explicit nil
func (o *MediaStream) SetLocalizedDefaultNil() {
	o.LocalizedDefault.Set(nil)
}

// UnsetLocalizedDefault ensures that no value is present for LocalizedDefault, not even an explicit nil
func (o *MediaStream) UnsetLocalizedDefault() {
	o.LocalizedDefault.Unset()
}

// GetLocalizedForced returns the LocalizedForced field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLocalizedForced() string {
	if o == nil || IsNil(o.LocalizedForced.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedForced.Get()
}

// GetLocalizedForcedOk returns a tuple with the LocalizedForced field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLocalizedForcedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedForced.Get(), o.LocalizedForced.IsSet()
}

// HasLocalizedForced returns a boolean if a field has been set.
func (o *MediaStream) HasLocalizedForced() bool {
	if o != nil && o.LocalizedForced.IsSet() {
		return true
	}

	return false
}

// SetLocalizedForced gets a reference to the given NullableString and assigns it to the LocalizedForced field.
func (o *MediaStream) SetLocalizedForced(v string) {
	o.LocalizedForced.Set(&v)
}
// SetLocalizedForcedNil sets the value for LocalizedForced to be an explicit nil
func (o *MediaStream) SetLocalizedForcedNil() {
	o.LocalizedForced.Set(nil)
}

// UnsetLocalizedForced ensures that no value is present for LocalizedForced, not even an explicit nil
func (o *MediaStream) UnsetLocalizedForced() {
	o.LocalizedForced.Unset()
}

// GetLocalizedExternal returns the LocalizedExternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLocalizedExternal() string {
	if o == nil || IsNil(o.LocalizedExternal.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedExternal.Get()
}

// GetLocalizedExternalOk returns a tuple with the LocalizedExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLocalizedExternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedExternal.Get(), o.LocalizedExternal.IsSet()
}

// HasLocalizedExternal returns a boolean if a field has been set.
func (o *MediaStream) HasLocalizedExternal() bool {
	if o != nil && o.LocalizedExternal.IsSet() {
		return true
	}

	return false
}

// SetLocalizedExternal gets a reference to the given NullableString and assigns it to the LocalizedExternal field.
func (o *MediaStream) SetLocalizedExternal(v string) {
	o.LocalizedExternal.Set(&v)
}
// SetLocalizedExternalNil sets the value for LocalizedExternal to be an explicit nil
func (o *MediaStream) SetLocalizedExternalNil() {
	o.LocalizedExternal.Set(nil)
}

// UnsetLocalizedExternal ensures that no value is present for LocalizedExternal, not even an explicit nil
func (o *MediaStream) UnsetLocalizedExternal() {
	o.LocalizedExternal.Unset()
}

// GetLocalizedHearingImpaired returns the LocalizedHearingImpaired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLocalizedHearingImpaired() string {
	if o == nil || IsNil(o.LocalizedHearingImpaired.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedHearingImpaired.Get()
}

// GetLocalizedHearingImpairedOk returns a tuple with the LocalizedHearingImpaired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLocalizedHearingImpairedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedHearingImpaired.Get(), o.LocalizedHearingImpaired.IsSet()
}

// HasLocalizedHearingImpaired returns a boolean if a field has been set.
func (o *MediaStream) HasLocalizedHearingImpaired() bool {
	if o != nil && o.LocalizedHearingImpaired.IsSet() {
		return true
	}

	return false
}

// SetLocalizedHearingImpaired gets a reference to the given NullableString and assigns it to the LocalizedHearingImpaired field.
func (o *MediaStream) SetLocalizedHearingImpaired(v string) {
	o.LocalizedHearingImpaired.Set(&v)
}
// SetLocalizedHearingImpairedNil sets the value for LocalizedHearingImpaired to be an explicit nil
func (o *MediaStream) SetLocalizedHearingImpairedNil() {
	o.LocalizedHearingImpaired.Set(nil)
}

// UnsetLocalizedHearingImpaired ensures that no value is present for LocalizedHearingImpaired, not even an explicit nil
func (o *MediaStream) UnsetLocalizedHearingImpaired() {
	o.LocalizedHearingImpaired.Unset()
}

// GetDisplayTitle returns the DisplayTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDisplayTitle() string {
	if o == nil || IsNil(o.DisplayTitle.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayTitle.Get()
}

// GetDisplayTitleOk returns a tuple with the DisplayTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDisplayTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayTitle.Get(), o.DisplayTitle.IsSet()
}

// HasDisplayTitle returns a boolean if a field has been set.
func (o *MediaStream) HasDisplayTitle() bool {
	if o != nil && o.DisplayTitle.IsSet() {
		return true
	}

	return false
}

// SetDisplayTitle gets a reference to the given NullableString and assigns it to the DisplayTitle field.
func (o *MediaStream) SetDisplayTitle(v string) {
	o.DisplayTitle.Set(&v)
}
// SetDisplayTitleNil sets the value for DisplayTitle to be an explicit nil
func (o *MediaStream) SetDisplayTitleNil() {
	o.DisplayTitle.Set(nil)
}

// UnsetDisplayTitle ensures that no value is present for DisplayTitle, not even an explicit nil
func (o *MediaStream) UnsetDisplayTitle() {
	o.DisplayTitle.Unset()
}

// GetNalLengthSize returns the NalLengthSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetNalLengthSize() string {
	if o == nil || IsNil(o.NalLengthSize.Get()) {
		var ret string
		return ret
	}
	return *o.NalLengthSize.Get()
}

// GetNalLengthSizeOk returns a tuple with the NalLengthSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetNalLengthSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NalLengthSize.Get(), o.NalLengthSize.IsSet()
}

// HasNalLengthSize returns a boolean if a field has been set.
func (o *MediaStream) HasNalLengthSize() bool {
	if o != nil && o.NalLengthSize.IsSet() {
		return true
	}

	return false
}

// SetNalLengthSize gets a reference to the given NullableString and assigns it to the NalLengthSize field.
func (o *MediaStream) SetNalLengthSize(v string) {
	o.NalLengthSize.Set(&v)
}
// SetNalLengthSizeNil sets the value for NalLengthSize to be an explicit nil
func (o *MediaStream) SetNalLengthSizeNil() {
	o.NalLengthSize.Set(nil)
}

// UnsetNalLengthSize ensures that no value is present for NalLengthSize, not even an explicit nil
func (o *MediaStream) UnsetNalLengthSize() {
	o.NalLengthSize.Unset()
}

// GetIsInterlaced returns the IsInterlaced field value if set, zero value otherwise.
func (o *MediaStream) GetIsInterlaced() bool {
	if o == nil || IsNil(o.IsInterlaced) {
		var ret bool
		return ret
	}
	return *o.IsInterlaced
}

// GetIsInterlacedOk returns a tuple with the IsInterlaced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsInterlacedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInterlaced) {
		return nil, false
	}
	return o.IsInterlaced, true
}

// HasIsInterlaced returns a boolean if a field has been set.
func (o *MediaStream) HasIsInterlaced() bool {
	if o != nil && !IsNil(o.IsInterlaced) {
		return true
	}

	return false
}

// SetIsInterlaced gets a reference to the given bool and assigns it to the IsInterlaced field.
func (o *MediaStream) SetIsInterlaced(v bool) {
	o.IsInterlaced = &v
}

// GetIsAVC returns the IsAVC field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetIsAVC() bool {
	if o == nil || IsNil(o.IsAVC.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAVC.Get()
}

// GetIsAVCOk returns a tuple with the IsAVC field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetIsAVCOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAVC.Get(), o.IsAVC.IsSet()
}

// HasIsAVC returns a boolean if a field has been set.
func (o *MediaStream) HasIsAVC() bool {
	if o != nil && o.IsAVC.IsSet() {
		return true
	}

	return false
}

// SetIsAVC gets a reference to the given NullableBool and assigns it to the IsAVC field.
func (o *MediaStream) SetIsAVC(v bool) {
	o.IsAVC.Set(&v)
}
// SetIsAVCNil sets the value for IsAVC to be an explicit nil
func (o *MediaStream) SetIsAVCNil() {
	o.IsAVC.Set(nil)
}

// UnsetIsAVC ensures that no value is present for IsAVC, not even an explicit nil
func (o *MediaStream) UnsetIsAVC() {
	o.IsAVC.Unset()
}

// GetChannelLayout returns the ChannelLayout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetChannelLayout() string {
	if o == nil || IsNil(o.ChannelLayout.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelLayout.Get()
}

// GetChannelLayoutOk returns a tuple with the ChannelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetChannelLayoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelLayout.Get(), o.ChannelLayout.IsSet()
}

// HasChannelLayout returns a boolean if a field has been set.
func (o *MediaStream) HasChannelLayout() bool {
	if o != nil && o.ChannelLayout.IsSet() {
		return true
	}

	return false
}

// SetChannelLayout gets a reference to the given NullableString and assigns it to the ChannelLayout field.
func (o *MediaStream) SetChannelLayout(v string) {
	o.ChannelLayout.Set(&v)
}
// SetChannelLayoutNil sets the value for ChannelLayout to be an explicit nil
func (o *MediaStream) SetChannelLayoutNil() {
	o.ChannelLayout.Set(nil)
}

// UnsetChannelLayout ensures that no value is present for ChannelLayout, not even an explicit nil
func (o *MediaStream) UnsetChannelLayout() {
	o.ChannelLayout.Unset()
}

// GetBitRate returns the BitRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetBitRate() int32 {
	if o == nil || IsNil(o.BitRate.Get()) {
		var ret int32
		return ret
	}
	return *o.BitRate.Get()
}

// GetBitRateOk returns a tuple with the BitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetBitRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BitRate.Get(), o.BitRate.IsSet()
}

// HasBitRate returns a boolean if a field has been set.
func (o *MediaStream) HasBitRate() bool {
	if o != nil && o.BitRate.IsSet() {
		return true
	}

	return false
}

// SetBitRate gets a reference to the given NullableInt32 and assigns it to the BitRate field.
func (o *MediaStream) SetBitRate(v int32) {
	o.BitRate.Set(&v)
}
// SetBitRateNil sets the value for BitRate to be an explicit nil
func (o *MediaStream) SetBitRateNil() {
	o.BitRate.Set(nil)
}

// UnsetBitRate ensures that no value is present for BitRate, not even an explicit nil
func (o *MediaStream) UnsetBitRate() {
	o.BitRate.Unset()
}

// GetBitDepth returns the BitDepth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetBitDepth() int32 {
	if o == nil || IsNil(o.BitDepth.Get()) {
		var ret int32
		return ret
	}
	return *o.BitDepth.Get()
}

// GetBitDepthOk returns a tuple with the BitDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetBitDepthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BitDepth.Get(), o.BitDepth.IsSet()
}

// HasBitDepth returns a boolean if a field has been set.
func (o *MediaStream) HasBitDepth() bool {
	if o != nil && o.BitDepth.IsSet() {
		return true
	}

	return false
}

// SetBitDepth gets a reference to the given NullableInt32 and assigns it to the BitDepth field.
func (o *MediaStream) SetBitDepth(v int32) {
	o.BitDepth.Set(&v)
}
// SetBitDepthNil sets the value for BitDepth to be an explicit nil
func (o *MediaStream) SetBitDepthNil() {
	o.BitDepth.Set(nil)
}

// UnsetBitDepth ensures that no value is present for BitDepth, not even an explicit nil
func (o *MediaStream) UnsetBitDepth() {
	o.BitDepth.Unset()
}

// GetRefFrames returns the RefFrames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetRefFrames() int32 {
	if o == nil || IsNil(o.RefFrames.Get()) {
		var ret int32
		return ret
	}
	return *o.RefFrames.Get()
}

// GetRefFramesOk returns a tuple with the RefFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetRefFramesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefFrames.Get(), o.RefFrames.IsSet()
}

// HasRefFrames returns a boolean if a field has been set.
func (o *MediaStream) HasRefFrames() bool {
	if o != nil && o.RefFrames.IsSet() {
		return true
	}

	return false
}

// SetRefFrames gets a reference to the given NullableInt32 and assigns it to the RefFrames field.
func (o *MediaStream) SetRefFrames(v int32) {
	o.RefFrames.Set(&v)
}
// SetRefFramesNil sets the value for RefFrames to be an explicit nil
func (o *MediaStream) SetRefFramesNil() {
	o.RefFrames.Set(nil)
}

// UnsetRefFrames ensures that no value is present for RefFrames, not even an explicit nil
func (o *MediaStream) UnsetRefFrames() {
	o.RefFrames.Unset()
}

// GetPacketLength returns the PacketLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetPacketLength() int32 {
	if o == nil || IsNil(o.PacketLength.Get()) {
		var ret int32
		return ret
	}
	return *o.PacketLength.Get()
}

// GetPacketLengthOk returns a tuple with the PacketLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetPacketLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PacketLength.Get(), o.PacketLength.IsSet()
}

// HasPacketLength returns a boolean if a field has been set.
func (o *MediaStream) HasPacketLength() bool {
	if o != nil && o.PacketLength.IsSet() {
		return true
	}

	return false
}

// SetPacketLength gets a reference to the given NullableInt32 and assigns it to the PacketLength field.
func (o *MediaStream) SetPacketLength(v int32) {
	o.PacketLength.Set(&v)
}
// SetPacketLengthNil sets the value for PacketLength to be an explicit nil
func (o *MediaStream) SetPacketLengthNil() {
	o.PacketLength.Set(nil)
}

// UnsetPacketLength ensures that no value is present for PacketLength, not even an explicit nil
func (o *MediaStream) UnsetPacketLength() {
	o.PacketLength.Unset()
}

// GetChannels returns the Channels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetChannels() int32 {
	if o == nil || IsNil(o.Channels.Get()) {
		var ret int32
		return ret
	}
	return *o.Channels.Get()
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetChannelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channels.Get(), o.Channels.IsSet()
}

// HasChannels returns a boolean if a field has been set.
func (o *MediaStream) HasChannels() bool {
	if o != nil && o.Channels.IsSet() {
		return true
	}

	return false
}

// SetChannels gets a reference to the given NullableInt32 and assigns it to the Channels field.
func (o *MediaStream) SetChannels(v int32) {
	o.Channels.Set(&v)
}
// SetChannelsNil sets the value for Channels to be an explicit nil
func (o *MediaStream) SetChannelsNil() {
	o.Channels.Set(nil)
}

// UnsetChannels ensures that no value is present for Channels, not even an explicit nil
func (o *MediaStream) UnsetChannels() {
	o.Channels.Unset()
}

// GetSampleRate returns the SampleRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetSampleRate() int32 {
	if o == nil || IsNil(o.SampleRate.Get()) {
		var ret int32
		return ret
	}
	return *o.SampleRate.Get()
}

// GetSampleRateOk returns a tuple with the SampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetSampleRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SampleRate.Get(), o.SampleRate.IsSet()
}

// HasSampleRate returns a boolean if a field has been set.
func (o *MediaStream) HasSampleRate() bool {
	if o != nil && o.SampleRate.IsSet() {
		return true
	}

	return false
}

// SetSampleRate gets a reference to the given NullableInt32 and assigns it to the SampleRate field.
func (o *MediaStream) SetSampleRate(v int32) {
	o.SampleRate.Set(&v)
}
// SetSampleRateNil sets the value for SampleRate to be an explicit nil
func (o *MediaStream) SetSampleRateNil() {
	o.SampleRate.Set(nil)
}

// UnsetSampleRate ensures that no value is present for SampleRate, not even an explicit nil
func (o *MediaStream) UnsetSampleRate() {
	o.SampleRate.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *MediaStream) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *MediaStream) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *MediaStream) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsForced returns the IsForced field value if set, zero value otherwise.
func (o *MediaStream) GetIsForced() bool {
	if o == nil || IsNil(o.IsForced) {
		var ret bool
		return ret
	}
	return *o.IsForced
}

// GetIsForcedOk returns a tuple with the IsForced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsForcedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForced) {
		return nil, false
	}
	return o.IsForced, true
}

// HasIsForced returns a boolean if a field has been set.
func (o *MediaStream) HasIsForced() bool {
	if o != nil && !IsNil(o.IsForced) {
		return true
	}

	return false
}

// SetIsForced gets a reference to the given bool and assigns it to the IsForced field.
func (o *MediaStream) SetIsForced(v bool) {
	o.IsForced = &v
}

// GetIsHearingImpaired returns the IsHearingImpaired field value if set, zero value otherwise.
func (o *MediaStream) GetIsHearingImpaired() bool {
	if o == nil || IsNil(o.IsHearingImpaired) {
		var ret bool
		return ret
	}
	return *o.IsHearingImpaired
}

// GetIsHearingImpairedOk returns a tuple with the IsHearingImpaired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsHearingImpairedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHearingImpaired) {
		return nil, false
	}
	return o.IsHearingImpaired, true
}

// HasIsHearingImpaired returns a boolean if a field has been set.
func (o *MediaStream) HasIsHearingImpaired() bool {
	if o != nil && !IsNil(o.IsHearingImpaired) {
		return true
	}

	return false
}

// SetIsHearingImpaired gets a reference to the given bool and assigns it to the IsHearingImpaired field.
func (o *MediaStream) SetIsHearingImpaired(v bool) {
	o.IsHearingImpaired = &v
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *MediaStream) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *MediaStream) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *MediaStream) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *MediaStream) UnsetHeight() {
	o.Height.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *MediaStream) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *MediaStream) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *MediaStream) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *MediaStream) UnsetWidth() {
	o.Width.Unset()
}

// GetAverageFrameRate returns the AverageFrameRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetAverageFrameRate() float32 {
	if o == nil || IsNil(o.AverageFrameRate.Get()) {
		var ret float32
		return ret
	}
	return *o.AverageFrameRate.Get()
}

// GetAverageFrameRateOk returns a tuple with the AverageFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetAverageFrameRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageFrameRate.Get(), o.AverageFrameRate.IsSet()
}

// HasAverageFrameRate returns a boolean if a field has been set.
func (o *MediaStream) HasAverageFrameRate() bool {
	if o != nil && o.AverageFrameRate.IsSet() {
		return true
	}

	return false
}

// SetAverageFrameRate gets a reference to the given NullableFloat32 and assigns it to the AverageFrameRate field.
func (o *MediaStream) SetAverageFrameRate(v float32) {
	o.AverageFrameRate.Set(&v)
}
// SetAverageFrameRateNil sets the value for AverageFrameRate to be an explicit nil
func (o *MediaStream) SetAverageFrameRateNil() {
	o.AverageFrameRate.Set(nil)
}

// UnsetAverageFrameRate ensures that no value is present for AverageFrameRate, not even an explicit nil
func (o *MediaStream) UnsetAverageFrameRate() {
	o.AverageFrameRate.Unset()
}

// GetRealFrameRate returns the RealFrameRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetRealFrameRate() float32 {
	if o == nil || IsNil(o.RealFrameRate.Get()) {
		var ret float32
		return ret
	}
	return *o.RealFrameRate.Get()
}

// GetRealFrameRateOk returns a tuple with the RealFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetRealFrameRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RealFrameRate.Get(), o.RealFrameRate.IsSet()
}

// HasRealFrameRate returns a boolean if a field has been set.
func (o *MediaStream) HasRealFrameRate() bool {
	if o != nil && o.RealFrameRate.IsSet() {
		return true
	}

	return false
}

// SetRealFrameRate gets a reference to the given NullableFloat32 and assigns it to the RealFrameRate field.
func (o *MediaStream) SetRealFrameRate(v float32) {
	o.RealFrameRate.Set(&v)
}
// SetRealFrameRateNil sets the value for RealFrameRate to be an explicit nil
func (o *MediaStream) SetRealFrameRateNil() {
	o.RealFrameRate.Set(nil)
}

// UnsetRealFrameRate ensures that no value is present for RealFrameRate, not even an explicit nil
func (o *MediaStream) UnsetRealFrameRate() {
	o.RealFrameRate.Unset()
}

// GetReferenceFrameRate returns the ReferenceFrameRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetReferenceFrameRate() float32 {
	if o == nil || IsNil(o.ReferenceFrameRate.Get()) {
		var ret float32
		return ret
	}
	return *o.ReferenceFrameRate.Get()
}

// GetReferenceFrameRateOk returns a tuple with the ReferenceFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetReferenceFrameRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceFrameRate.Get(), o.ReferenceFrameRate.IsSet()
}

// HasReferenceFrameRate returns a boolean if a field has been set.
func (o *MediaStream) HasReferenceFrameRate() bool {
	if o != nil && o.ReferenceFrameRate.IsSet() {
		return true
	}

	return false
}

// SetReferenceFrameRate gets a reference to the given NullableFloat32 and assigns it to the ReferenceFrameRate field.
func (o *MediaStream) SetReferenceFrameRate(v float32) {
	o.ReferenceFrameRate.Set(&v)
}
// SetReferenceFrameRateNil sets the value for ReferenceFrameRate to be an explicit nil
func (o *MediaStream) SetReferenceFrameRateNil() {
	o.ReferenceFrameRate.Set(nil)
}

// UnsetReferenceFrameRate ensures that no value is present for ReferenceFrameRate, not even an explicit nil
func (o *MediaStream) UnsetReferenceFrameRate() {
	o.ReferenceFrameRate.Unset()
}

// GetProfile returns the Profile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetProfile() string {
	if o == nil || IsNil(o.Profile.Get()) {
		var ret string
		return ret
	}
	return *o.Profile.Get()
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Profile.Get(), o.Profile.IsSet()
}

// HasProfile returns a boolean if a field has been set.
func (o *MediaStream) HasProfile() bool {
	if o != nil && o.Profile.IsSet() {
		return true
	}

	return false
}

// SetProfile gets a reference to the given NullableString and assigns it to the Profile field.
func (o *MediaStream) SetProfile(v string) {
	o.Profile.Set(&v)
}
// SetProfileNil sets the value for Profile to be an explicit nil
func (o *MediaStream) SetProfileNil() {
	o.Profile.Set(nil)
}

// UnsetProfile ensures that no value is present for Profile, not even an explicit nil
func (o *MediaStream) UnsetProfile() {
	o.Profile.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MediaStream) GetType() MediaStreamType {
	if o == nil || IsNil(o.Type) {
		var ret MediaStreamType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetTypeOk() (*MediaStreamType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MediaStream) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MediaStreamType and assigns it to the Type field.
func (o *MediaStream) SetType(v MediaStreamType) {
	o.Type = &v
}

// GetAspectRatio returns the AspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetAspectRatio() string {
	if o == nil || IsNil(o.AspectRatio.Get()) {
		var ret string
		return ret
	}
	return *o.AspectRatio.Get()
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetAspectRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AspectRatio.Get(), o.AspectRatio.IsSet()
}

// HasAspectRatio returns a boolean if a field has been set.
func (o *MediaStream) HasAspectRatio() bool {
	if o != nil && o.AspectRatio.IsSet() {
		return true
	}

	return false
}

// SetAspectRatio gets a reference to the given NullableString and assigns it to the AspectRatio field.
func (o *MediaStream) SetAspectRatio(v string) {
	o.AspectRatio.Set(&v)
}
// SetAspectRatioNil sets the value for AspectRatio to be an explicit nil
func (o *MediaStream) SetAspectRatioNil() {
	o.AspectRatio.Set(nil)
}

// UnsetAspectRatio ensures that no value is present for AspectRatio, not even an explicit nil
func (o *MediaStream) UnsetAspectRatio() {
	o.AspectRatio.Unset()
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *MediaStream) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *MediaStream) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *MediaStream) SetIndex(v int32) {
	o.Index = &v
}

// GetScore returns the Score field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetScore() int32 {
	if o == nil || IsNil(o.Score.Get()) {
		var ret int32
		return ret
	}
	return *o.Score.Get()
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Score.Get(), o.Score.IsSet()
}

// HasScore returns a boolean if a field has been set.
func (o *MediaStream) HasScore() bool {
	if o != nil && o.Score.IsSet() {
		return true
	}

	return false
}

// SetScore gets a reference to the given NullableInt32 and assigns it to the Score field.
func (o *MediaStream) SetScore(v int32) {
	o.Score.Set(&v)
}
// SetScoreNil sets the value for Score to be an explicit nil
func (o *MediaStream) SetScoreNil() {
	o.Score.Set(nil)
}

// UnsetScore ensures that no value is present for Score, not even an explicit nil
func (o *MediaStream) UnsetScore() {
	o.Score.Unset()
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *MediaStream) GetIsExternal() bool {
	if o == nil || IsNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsExternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternal) {
		return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *MediaStream) HasIsExternal() bool {
	if o != nil && !IsNil(o.IsExternal) {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *MediaStream) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDeliveryMethod() SubtitleDeliveryMethod {
	if o == nil || IsNil(o.DeliveryMethod.Get()) {
		var ret SubtitleDeliveryMethod
		return ret
	}
	return *o.DeliveryMethod.Get()
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDeliveryMethodOk() (*SubtitleDeliveryMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryMethod.Get(), o.DeliveryMethod.IsSet()
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *MediaStream) HasDeliveryMethod() bool {
	if o != nil && o.DeliveryMethod.IsSet() {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given NullableSubtitleDeliveryMethod and assigns it to the DeliveryMethod field.
func (o *MediaStream) SetDeliveryMethod(v SubtitleDeliveryMethod) {
	o.DeliveryMethod.Set(&v)
}
// SetDeliveryMethodNil sets the value for DeliveryMethod to be an explicit nil
func (o *MediaStream) SetDeliveryMethodNil() {
	o.DeliveryMethod.Set(nil)
}

// UnsetDeliveryMethod ensures that no value is present for DeliveryMethod, not even an explicit nil
func (o *MediaStream) UnsetDeliveryMethod() {
	o.DeliveryMethod.Unset()
}

// GetDeliveryUrl returns the DeliveryUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetDeliveryUrl() string {
	if o == nil || IsNil(o.DeliveryUrl.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryUrl.Get()
}

// GetDeliveryUrlOk returns a tuple with the DeliveryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetDeliveryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryUrl.Get(), o.DeliveryUrl.IsSet()
}

// HasDeliveryUrl returns a boolean if a field has been set.
func (o *MediaStream) HasDeliveryUrl() bool {
	if o != nil && o.DeliveryUrl.IsSet() {
		return true
	}

	return false
}

// SetDeliveryUrl gets a reference to the given NullableString and assigns it to the DeliveryUrl field.
func (o *MediaStream) SetDeliveryUrl(v string) {
	o.DeliveryUrl.Set(&v)
}
// SetDeliveryUrlNil sets the value for DeliveryUrl to be an explicit nil
func (o *MediaStream) SetDeliveryUrlNil() {
	o.DeliveryUrl.Set(nil)
}

// UnsetDeliveryUrl ensures that no value is present for DeliveryUrl, not even an explicit nil
func (o *MediaStream) UnsetDeliveryUrl() {
	o.DeliveryUrl.Unset()
}

// GetIsExternalUrl returns the IsExternalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetIsExternalUrl() bool {
	if o == nil || IsNil(o.IsExternalUrl.Get()) {
		var ret bool
		return ret
	}
	return *o.IsExternalUrl.Get()
}

// GetIsExternalUrlOk returns a tuple with the IsExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetIsExternalUrlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsExternalUrl.Get(), o.IsExternalUrl.IsSet()
}

// HasIsExternalUrl returns a boolean if a field has been set.
func (o *MediaStream) HasIsExternalUrl() bool {
	if o != nil && o.IsExternalUrl.IsSet() {
		return true
	}

	return false
}

// SetIsExternalUrl gets a reference to the given NullableBool and assigns it to the IsExternalUrl field.
func (o *MediaStream) SetIsExternalUrl(v bool) {
	o.IsExternalUrl.Set(&v)
}
// SetIsExternalUrlNil sets the value for IsExternalUrl to be an explicit nil
func (o *MediaStream) SetIsExternalUrlNil() {
	o.IsExternalUrl.Set(nil)
}

// UnsetIsExternalUrl ensures that no value is present for IsExternalUrl, not even an explicit nil
func (o *MediaStream) UnsetIsExternalUrl() {
	o.IsExternalUrl.Unset()
}

// GetIsTextSubtitleStream returns the IsTextSubtitleStream field value if set, zero value otherwise.
func (o *MediaStream) GetIsTextSubtitleStream() bool {
	if o == nil || IsNil(o.IsTextSubtitleStream) {
		var ret bool
		return ret
	}
	return *o.IsTextSubtitleStream
}

// GetIsTextSubtitleStreamOk returns a tuple with the IsTextSubtitleStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetIsTextSubtitleStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTextSubtitleStream) {
		return nil, false
	}
	return o.IsTextSubtitleStream, true
}

// HasIsTextSubtitleStream returns a boolean if a field has been set.
func (o *MediaStream) HasIsTextSubtitleStream() bool {
	if o != nil && !IsNil(o.IsTextSubtitleStream) {
		return true
	}

	return false
}

// SetIsTextSubtitleStream gets a reference to the given bool and assigns it to the IsTextSubtitleStream field.
func (o *MediaStream) SetIsTextSubtitleStream(v bool) {
	o.IsTextSubtitleStream = &v
}

// GetSupportsExternalStream returns the SupportsExternalStream field value if set, zero value otherwise.
func (o *MediaStream) GetSupportsExternalStream() bool {
	if o == nil || IsNil(o.SupportsExternalStream) {
		var ret bool
		return ret
	}
	return *o.SupportsExternalStream
}

// GetSupportsExternalStreamOk returns a tuple with the SupportsExternalStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetSupportsExternalStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsExternalStream) {
		return nil, false
	}
	return o.SupportsExternalStream, true
}

// HasSupportsExternalStream returns a boolean if a field has been set.
func (o *MediaStream) HasSupportsExternalStream() bool {
	if o != nil && !IsNil(o.SupportsExternalStream) {
		return true
	}

	return false
}

// SetSupportsExternalStream gets a reference to the given bool and assigns it to the SupportsExternalStream field.
func (o *MediaStream) SetSupportsExternalStream(v bool) {
	o.SupportsExternalStream = &v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *MediaStream) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *MediaStream) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *MediaStream) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *MediaStream) UnsetPath() {
	o.Path.Unset()
}

// GetPixelFormat returns the PixelFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetPixelFormat() string {
	if o == nil || IsNil(o.PixelFormat.Get()) {
		var ret string
		return ret
	}
	return *o.PixelFormat.Get()
}

// GetPixelFormatOk returns a tuple with the PixelFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetPixelFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PixelFormat.Get(), o.PixelFormat.IsSet()
}

// HasPixelFormat returns a boolean if a field has been set.
func (o *MediaStream) HasPixelFormat() bool {
	if o != nil && o.PixelFormat.IsSet() {
		return true
	}

	return false
}

// SetPixelFormat gets a reference to the given NullableString and assigns it to the PixelFormat field.
func (o *MediaStream) SetPixelFormat(v string) {
	o.PixelFormat.Set(&v)
}
// SetPixelFormatNil sets the value for PixelFormat to be an explicit nil
func (o *MediaStream) SetPixelFormatNil() {
	o.PixelFormat.Set(nil)
}

// UnsetPixelFormat ensures that no value is present for PixelFormat, not even an explicit nil
func (o *MediaStream) UnsetPixelFormat() {
	o.PixelFormat.Unset()
}

// GetLevel returns the Level field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetLevel() float64 {
	if o == nil || IsNil(o.Level.Get()) {
		var ret float64
		return ret
	}
	return *o.Level.Get()
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetLevelOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Level.Get(), o.Level.IsSet()
}

// HasLevel returns a boolean if a field has been set.
func (o *MediaStream) HasLevel() bool {
	if o != nil && o.Level.IsSet() {
		return true
	}

	return false
}

// SetLevel gets a reference to the given NullableFloat64 and assigns it to the Level field.
func (o *MediaStream) SetLevel(v float64) {
	o.Level.Set(&v)
}
// SetLevelNil sets the value for Level to be an explicit nil
func (o *MediaStream) SetLevelNil() {
	o.Level.Set(nil)
}

// UnsetLevel ensures that no value is present for Level, not even an explicit nil
func (o *MediaStream) UnsetLevel() {
	o.Level.Unset()
}

// GetIsAnamorphic returns the IsAnamorphic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaStream) GetIsAnamorphic() bool {
	if o == nil || IsNil(o.IsAnamorphic.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAnamorphic.Get()
}

// GetIsAnamorphicOk returns a tuple with the IsAnamorphic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaStream) GetIsAnamorphicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAnamorphic.Get(), o.IsAnamorphic.IsSet()
}

// HasIsAnamorphic returns a boolean if a field has been set.
func (o *MediaStream) HasIsAnamorphic() bool {
	if o != nil && o.IsAnamorphic.IsSet() {
		return true
	}

	return false
}

// SetIsAnamorphic gets a reference to the given NullableBool and assigns it to the IsAnamorphic field.
func (o *MediaStream) SetIsAnamorphic(v bool) {
	o.IsAnamorphic.Set(&v)
}
// SetIsAnamorphicNil sets the value for IsAnamorphic to be an explicit nil
func (o *MediaStream) SetIsAnamorphicNil() {
	o.IsAnamorphic.Set(nil)
}

// UnsetIsAnamorphic ensures that no value is present for IsAnamorphic, not even an explicit nil
func (o *MediaStream) UnsetIsAnamorphic() {
	o.IsAnamorphic.Unset()
}

func (o MediaStream) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaStream) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Codec.IsSet() {
		toSerialize["Codec"] = o.Codec.Get()
	}
	if o.CodecTag.IsSet() {
		toSerialize["CodecTag"] = o.CodecTag.Get()
	}
	if o.Language.IsSet() {
		toSerialize["Language"] = o.Language.Get()
	}
	if o.ColorRange.IsSet() {
		toSerialize["ColorRange"] = o.ColorRange.Get()
	}
	if o.ColorSpace.IsSet() {
		toSerialize["ColorSpace"] = o.ColorSpace.Get()
	}
	if o.ColorTransfer.IsSet() {
		toSerialize["ColorTransfer"] = o.ColorTransfer.Get()
	}
	if o.ColorPrimaries.IsSet() {
		toSerialize["ColorPrimaries"] = o.ColorPrimaries.Get()
	}
	if o.DvVersionMajor.IsSet() {
		toSerialize["DvVersionMajor"] = o.DvVersionMajor.Get()
	}
	if o.DvVersionMinor.IsSet() {
		toSerialize["DvVersionMinor"] = o.DvVersionMinor.Get()
	}
	if o.DvProfile.IsSet() {
		toSerialize["DvProfile"] = o.DvProfile.Get()
	}
	if o.DvLevel.IsSet() {
		toSerialize["DvLevel"] = o.DvLevel.Get()
	}
	if o.RpuPresentFlag.IsSet() {
		toSerialize["RpuPresentFlag"] = o.RpuPresentFlag.Get()
	}
	if o.ElPresentFlag.IsSet() {
		toSerialize["ElPresentFlag"] = o.ElPresentFlag.Get()
	}
	if o.BlPresentFlag.IsSet() {
		toSerialize["BlPresentFlag"] = o.BlPresentFlag.Get()
	}
	if o.DvBlSignalCompatibilityId.IsSet() {
		toSerialize["DvBlSignalCompatibilityId"] = o.DvBlSignalCompatibilityId.Get()
	}
	if o.Rotation.IsSet() {
		toSerialize["Rotation"] = o.Rotation.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["Comment"] = o.Comment.Get()
	}
	if o.TimeBase.IsSet() {
		toSerialize["TimeBase"] = o.TimeBase.Get()
	}
	if o.CodecTimeBase.IsSet() {
		toSerialize["CodecTimeBase"] = o.CodecTimeBase.Get()
	}
	if o.Title.IsSet() {
		toSerialize["Title"] = o.Title.Get()
	}
	if !IsNil(o.VideoRange) {
		toSerialize["VideoRange"] = o.VideoRange
	}
	if !IsNil(o.VideoRangeType) {
		toSerialize["VideoRangeType"] = o.VideoRangeType
	}
	if o.VideoDoViTitle.IsSet() {
		toSerialize["VideoDoViTitle"] = o.VideoDoViTitle.Get()
	}
	if !IsNil(o.AudioSpatialFormat) {
		toSerialize["AudioSpatialFormat"] = o.AudioSpatialFormat
	}
	if o.LocalizedUndefined.IsSet() {
		toSerialize["LocalizedUndefined"] = o.LocalizedUndefined.Get()
	}
	if o.LocalizedDefault.IsSet() {
		toSerialize["LocalizedDefault"] = o.LocalizedDefault.Get()
	}
	if o.LocalizedForced.IsSet() {
		toSerialize["LocalizedForced"] = o.LocalizedForced.Get()
	}
	if o.LocalizedExternal.IsSet() {
		toSerialize["LocalizedExternal"] = o.LocalizedExternal.Get()
	}
	if o.LocalizedHearingImpaired.IsSet() {
		toSerialize["LocalizedHearingImpaired"] = o.LocalizedHearingImpaired.Get()
	}
	if o.DisplayTitle.IsSet() {
		toSerialize["DisplayTitle"] = o.DisplayTitle.Get()
	}
	if o.NalLengthSize.IsSet() {
		toSerialize["NalLengthSize"] = o.NalLengthSize.Get()
	}
	if !IsNil(o.IsInterlaced) {
		toSerialize["IsInterlaced"] = o.IsInterlaced
	}
	if o.IsAVC.IsSet() {
		toSerialize["IsAVC"] = o.IsAVC.Get()
	}
	if o.ChannelLayout.IsSet() {
		toSerialize["ChannelLayout"] = o.ChannelLayout.Get()
	}
	if o.BitRate.IsSet() {
		toSerialize["BitRate"] = o.BitRate.Get()
	}
	if o.BitDepth.IsSet() {
		toSerialize["BitDepth"] = o.BitDepth.Get()
	}
	if o.RefFrames.IsSet() {
		toSerialize["RefFrames"] = o.RefFrames.Get()
	}
	if o.PacketLength.IsSet() {
		toSerialize["PacketLength"] = o.PacketLength.Get()
	}
	if o.Channels.IsSet() {
		toSerialize["Channels"] = o.Channels.Get()
	}
	if o.SampleRate.IsSet() {
		toSerialize["SampleRate"] = o.SampleRate.Get()
	}
	if !IsNil(o.IsDefault) {
		toSerialize["IsDefault"] = o.IsDefault
	}
	if !IsNil(o.IsForced) {
		toSerialize["IsForced"] = o.IsForced
	}
	if !IsNil(o.IsHearingImpaired) {
		toSerialize["IsHearingImpaired"] = o.IsHearingImpaired
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.AverageFrameRate.IsSet() {
		toSerialize["AverageFrameRate"] = o.AverageFrameRate.Get()
	}
	if o.RealFrameRate.IsSet() {
		toSerialize["RealFrameRate"] = o.RealFrameRate.Get()
	}
	if o.ReferenceFrameRate.IsSet() {
		toSerialize["ReferenceFrameRate"] = o.ReferenceFrameRate.Get()
	}
	if o.Profile.IsSet() {
		toSerialize["Profile"] = o.Profile.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.AspectRatio.IsSet() {
		toSerialize["AspectRatio"] = o.AspectRatio.Get()
	}
	if !IsNil(o.Index) {
		toSerialize["Index"] = o.Index
	}
	if o.Score.IsSet() {
		toSerialize["Score"] = o.Score.Get()
	}
	if !IsNil(o.IsExternal) {
		toSerialize["IsExternal"] = o.IsExternal
	}
	if o.DeliveryMethod.IsSet() {
		toSerialize["DeliveryMethod"] = o.DeliveryMethod.Get()
	}
	if o.DeliveryUrl.IsSet() {
		toSerialize["DeliveryUrl"] = o.DeliveryUrl.Get()
	}
	if o.IsExternalUrl.IsSet() {
		toSerialize["IsExternalUrl"] = o.IsExternalUrl.Get()
	}
	if !IsNil(o.IsTextSubtitleStream) {
		toSerialize["IsTextSubtitleStream"] = o.IsTextSubtitleStream
	}
	if !IsNil(o.SupportsExternalStream) {
		toSerialize["SupportsExternalStream"] = o.SupportsExternalStream
	}
	if o.Path.IsSet() {
		toSerialize["Path"] = o.Path.Get()
	}
	if o.PixelFormat.IsSet() {
		toSerialize["PixelFormat"] = o.PixelFormat.Get()
	}
	if o.Level.IsSet() {
		toSerialize["Level"] = o.Level.Get()
	}
	if o.IsAnamorphic.IsSet() {
		toSerialize["IsAnamorphic"] = o.IsAnamorphic.Get()
	}
	return toSerialize, nil
}

type NullableMediaStream struct {
	value *MediaStream
	isSet bool
}

func (v NullableMediaStream) Get() *MediaStream {
	return v.value
}

func (v *NullableMediaStream) Set(val *MediaStream) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaStream) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaStream(val *MediaStream) *NullableMediaStream {
	return &NullableMediaStream{value: val, isSet: true}
}

func (v NullableMediaStream) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaStream) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


