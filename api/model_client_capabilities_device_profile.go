/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.8.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ClientCapabilitiesDeviceProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientCapabilitiesDeviceProfile{}

// ClientCapabilitiesDeviceProfile A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.  <br />  Specifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and  <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)  the device is able to direct play (without transcoding or remuxing),  as well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't.
type ClientCapabilitiesDeviceProfile struct {
	// Gets or sets the name of this device profile.
	Name NullableString `json:"Name,omitempty"`
	// Gets or sets the Id.
	Id NullableString `json:"Id,omitempty"`
	Identification NullableDeviceProfileIdentification `json:"Identification,omitempty"`
	// Gets or sets the friendly name of the device profile, which can be shown to users.
	FriendlyName NullableString `json:"FriendlyName,omitempty"`
	// Gets or sets the manufacturer of the device which this profile represents.
	Manufacturer NullableString `json:"Manufacturer,omitempty"`
	// Gets or sets an url for the manufacturer of the device which this profile represents.
	ManufacturerUrl NullableString `json:"ManufacturerUrl,omitempty"`
	// Gets or sets the model name of the device which this profile represents.
	ModelName NullableString `json:"ModelName,omitempty"`
	// Gets or sets the model description of the device which this profile represents.
	ModelDescription NullableString `json:"ModelDescription,omitempty"`
	// Gets or sets the model number of the device which this profile represents.
	ModelNumber NullableString `json:"ModelNumber,omitempty"`
	// Gets or sets the ModelUrl.
	ModelUrl NullableString `json:"ModelUrl,omitempty"`
	// Gets or sets the serial number of the device which this profile represents.
	SerialNumber NullableString `json:"SerialNumber,omitempty"`
	// Gets or sets a value indicating whether EnableAlbumArtInDidl.
	EnableAlbumArtInDidl *bool `json:"EnableAlbumArtInDidl,omitempty"`
	// Gets or sets a value indicating whether EnableSingleAlbumArtLimit.
	EnableSingleAlbumArtLimit *bool `json:"EnableSingleAlbumArtLimit,omitempty"`
	// Gets or sets a value indicating whether EnableSingleSubtitleLimit.
	EnableSingleSubtitleLimit *bool `json:"EnableSingleSubtitleLimit,omitempty"`
	// Gets or sets the SupportedMediaTypes.
	SupportedMediaTypes *string `json:"SupportedMediaTypes,omitempty"`
	// Gets or sets the UserId.
	UserId NullableString `json:"UserId,omitempty"`
	// Gets or sets the AlbumArtPn.
	AlbumArtPn NullableString `json:"AlbumArtPn,omitempty"`
	// Gets or sets the MaxAlbumArtWidth.
	MaxAlbumArtWidth NullableInt32 `json:"MaxAlbumArtWidth,omitempty"`
	// Gets or sets the MaxAlbumArtHeight.
	MaxAlbumArtHeight NullableInt32 `json:"MaxAlbumArtHeight,omitempty"`
	// Gets or sets the maximum allowed width of embedded icons.
	MaxIconWidth NullableInt32 `json:"MaxIconWidth,omitempty"`
	// Gets or sets the maximum allowed height of embedded icons.
	MaxIconHeight NullableInt32 `json:"MaxIconHeight,omitempty"`
	// Gets or sets the maximum allowed bitrate for all streamed content.
	MaxStreamingBitrate NullableInt32 `json:"MaxStreamingBitrate,omitempty"`
	// Gets or sets the maximum allowed bitrate for statically streamed content (= direct played files).
	MaxStaticBitrate NullableInt32 `json:"MaxStaticBitrate,omitempty"`
	// Gets or sets the maximum allowed bitrate for transcoded music streams.
	MusicStreamingTranscodingBitrate NullableInt32 `json:"MusicStreamingTranscodingBitrate,omitempty"`
	// Gets or sets the maximum allowed bitrate for statically streamed (= direct played) music files.
	MaxStaticMusicBitrate NullableInt32 `json:"MaxStaticMusicBitrate,omitempty"`
	// Gets or sets the content of the aggregationFlags element in the urn:schemas-sonycom:av namespace.
	SonyAggregationFlags NullableString `json:"SonyAggregationFlags,omitempty"`
	// Gets or sets the ProtocolInfo.
	ProtocolInfo NullableString `json:"ProtocolInfo,omitempty"`
	// Gets or sets the TimelineOffsetSeconds.
	TimelineOffsetSeconds *int32 `json:"TimelineOffsetSeconds,omitempty"`
	// Gets or sets a value indicating whether RequiresPlainVideoItems.
	RequiresPlainVideoItems *bool `json:"RequiresPlainVideoItems,omitempty"`
	// Gets or sets a value indicating whether RequiresPlainFolders.
	RequiresPlainFolders *bool `json:"RequiresPlainFolders,omitempty"`
	// Gets or sets a value indicating whether EnableMSMediaReceiverRegistrar.
	EnableMSMediaReceiverRegistrar *bool `json:"EnableMSMediaReceiverRegistrar,omitempty"`
	// Gets or sets a value indicating whether IgnoreTranscodeByteRangeRequests.
	IgnoreTranscodeByteRangeRequests *bool `json:"IgnoreTranscodeByteRangeRequests,omitempty"`
	// Gets or sets the XmlRootAttributes.
	XmlRootAttributes []XmlAttribute `json:"XmlRootAttributes,omitempty"`
	// Gets or sets the direct play profiles.
	DirectPlayProfiles []DirectPlayProfile `json:"DirectPlayProfiles,omitempty"`
	// Gets or sets the transcoding profiles.
	TranscodingProfiles []TranscodingProfile `json:"TranscodingProfiles,omitempty"`
	// Gets or sets the container profiles.
	ContainerProfiles []ContainerProfile `json:"ContainerProfiles,omitempty"`
	// Gets or sets the codec profiles.
	CodecProfiles []CodecProfile `json:"CodecProfiles,omitempty"`
	// Gets or sets the ResponseProfiles.
	ResponseProfiles []ResponseProfile `json:"ResponseProfiles,omitempty"`
	// Gets or sets the subtitle profiles.
	SubtitleProfiles []SubtitleProfile `json:"SubtitleProfiles,omitempty"`
}

// NewClientCapabilitiesDeviceProfile instantiates a new ClientCapabilitiesDeviceProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCapabilitiesDeviceProfile() *ClientCapabilitiesDeviceProfile {
	this := ClientCapabilitiesDeviceProfile{}
	var enableAlbumArtInDidl bool = false
	this.EnableAlbumArtInDidl = &enableAlbumArtInDidl
	var enableSingleAlbumArtLimit bool = false
	this.EnableSingleAlbumArtLimit = &enableSingleAlbumArtLimit
	var enableSingleSubtitleLimit bool = false
	this.EnableSingleSubtitleLimit = &enableSingleSubtitleLimit
	var timelineOffsetSeconds int32 = 0
	this.TimelineOffsetSeconds = &timelineOffsetSeconds
	var requiresPlainVideoItems bool = false
	this.RequiresPlainVideoItems = &requiresPlainVideoItems
	var requiresPlainFolders bool = false
	this.RequiresPlainFolders = &requiresPlainFolders
	var enableMSMediaReceiverRegistrar bool = false
	this.EnableMSMediaReceiverRegistrar = &enableMSMediaReceiverRegistrar
	var ignoreTranscodeByteRangeRequests bool = false
	this.IgnoreTranscodeByteRangeRequests = &ignoreTranscodeByteRangeRequests
	return &this
}

// NewClientCapabilitiesDeviceProfileWithDefaults instantiates a new ClientCapabilitiesDeviceProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCapabilitiesDeviceProfileWithDefaults() *ClientCapabilitiesDeviceProfile {
	this := ClientCapabilitiesDeviceProfile{}
	var enableAlbumArtInDidl bool = false
	this.EnableAlbumArtInDidl = &enableAlbumArtInDidl
	var enableSingleAlbumArtLimit bool = false
	this.EnableSingleAlbumArtLimit = &enableSingleAlbumArtLimit
	var enableSingleSubtitleLimit bool = false
	this.EnableSingleSubtitleLimit = &enableSingleSubtitleLimit
	var timelineOffsetSeconds int32 = 0
	this.TimelineOffsetSeconds = &timelineOffsetSeconds
	var requiresPlainVideoItems bool = false
	this.RequiresPlainVideoItems = &requiresPlainVideoItems
	var requiresPlainFolders bool = false
	this.RequiresPlainFolders = &requiresPlainFolders
	var enableMSMediaReceiverRegistrar bool = false
	this.EnableMSMediaReceiverRegistrar = &enableMSMediaReceiverRegistrar
	var ignoreTranscodeByteRangeRequests bool = false
	this.IgnoreTranscodeByteRangeRequests = &ignoreTranscodeByteRangeRequests
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ClientCapabilitiesDeviceProfile) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetName() {
	o.Name.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ClientCapabilitiesDeviceProfile) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetId() {
	o.Id.Unset()
}

// GetIdentification returns the Identification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetIdentification() DeviceProfileIdentification {
	if o == nil || IsNil(o.Identification.Get()) {
		var ret DeviceProfileIdentification
		return ret
	}
	return *o.Identification.Get()
}

// GetIdentificationOk returns a tuple with the Identification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetIdentificationOk() (*DeviceProfileIdentification, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identification.Get(), o.Identification.IsSet()
}

// HasIdentification returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasIdentification() bool {
	if o != nil && o.Identification.IsSet() {
		return true
	}

	return false
}

// SetIdentification gets a reference to the given NullableDeviceProfileIdentification and assigns it to the Identification field.
func (o *ClientCapabilitiesDeviceProfile) SetIdentification(v DeviceProfileIdentification) {
	o.Identification.Set(&v)
}
// SetIdentificationNil sets the value for Identification to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetIdentificationNil() {
	o.Identification.Set(nil)
}

// UnsetIdentification ensures that no value is present for Identification, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetIdentification() {
	o.Identification.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName.Get()) {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ClientCapabilitiesDeviceProfile) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer.Get()) {
		var ret string
		return ret
	}
	return *o.Manufacturer.Get()
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetManufacturerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Manufacturer.Get(), o.Manufacturer.IsSet()
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasManufacturer() bool {
	if o != nil && o.Manufacturer.IsSet() {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given NullableString and assigns it to the Manufacturer field.
func (o *ClientCapabilitiesDeviceProfile) SetManufacturer(v string) {
	o.Manufacturer.Set(&v)
}
// SetManufacturerNil sets the value for Manufacturer to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetManufacturerNil() {
	o.Manufacturer.Set(nil)
}

// UnsetManufacturer ensures that no value is present for Manufacturer, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetManufacturer() {
	o.Manufacturer.Unset()
}

// GetManufacturerUrl returns the ManufacturerUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetManufacturerUrl() string {
	if o == nil || IsNil(o.ManufacturerUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ManufacturerUrl.Get()
}

// GetManufacturerUrlOk returns a tuple with the ManufacturerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetManufacturerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ManufacturerUrl.Get(), o.ManufacturerUrl.IsSet()
}

// HasManufacturerUrl returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasManufacturerUrl() bool {
	if o != nil && o.ManufacturerUrl.IsSet() {
		return true
	}

	return false
}

// SetManufacturerUrl gets a reference to the given NullableString and assigns it to the ManufacturerUrl field.
func (o *ClientCapabilitiesDeviceProfile) SetManufacturerUrl(v string) {
	o.ManufacturerUrl.Set(&v)
}
// SetManufacturerUrlNil sets the value for ManufacturerUrl to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetManufacturerUrlNil() {
	o.ManufacturerUrl.Set(nil)
}

// UnsetManufacturerUrl ensures that no value is present for ManufacturerUrl, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetManufacturerUrl() {
	o.ManufacturerUrl.Unset()
}

// GetModelName returns the ModelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetModelName() string {
	if o == nil || IsNil(o.ModelName.Get()) {
		var ret string
		return ret
	}
	return *o.ModelName.Get()
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModelName.Get(), o.ModelName.IsSet()
}

// HasModelName returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasModelName() bool {
	if o != nil && o.ModelName.IsSet() {
		return true
	}

	return false
}

// SetModelName gets a reference to the given NullableString and assigns it to the ModelName field.
func (o *ClientCapabilitiesDeviceProfile) SetModelName(v string) {
	o.ModelName.Set(&v)
}
// SetModelNameNil sets the value for ModelName to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetModelNameNil() {
	o.ModelName.Set(nil)
}

// UnsetModelName ensures that no value is present for ModelName, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetModelName() {
	o.ModelName.Unset()
}

// GetModelDescription returns the ModelDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetModelDescription() string {
	if o == nil || IsNil(o.ModelDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ModelDescription.Get()
}

// GetModelDescriptionOk returns a tuple with the ModelDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetModelDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModelDescription.Get(), o.ModelDescription.IsSet()
}

// HasModelDescription returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasModelDescription() bool {
	if o != nil && o.ModelDescription.IsSet() {
		return true
	}

	return false
}

// SetModelDescription gets a reference to the given NullableString and assigns it to the ModelDescription field.
func (o *ClientCapabilitiesDeviceProfile) SetModelDescription(v string) {
	o.ModelDescription.Set(&v)
}
// SetModelDescriptionNil sets the value for ModelDescription to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetModelDescriptionNil() {
	o.ModelDescription.Set(nil)
}

// UnsetModelDescription ensures that no value is present for ModelDescription, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetModelDescription() {
	o.ModelDescription.Unset()
}

// GetModelNumber returns the ModelNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetModelNumber() string {
	if o == nil || IsNil(o.ModelNumber.Get()) {
		var ret string
		return ret
	}
	return *o.ModelNumber.Get()
}

// GetModelNumberOk returns a tuple with the ModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetModelNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModelNumber.Get(), o.ModelNumber.IsSet()
}

// HasModelNumber returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasModelNumber() bool {
	if o != nil && o.ModelNumber.IsSet() {
		return true
	}

	return false
}

// SetModelNumber gets a reference to the given NullableString and assigns it to the ModelNumber field.
func (o *ClientCapabilitiesDeviceProfile) SetModelNumber(v string) {
	o.ModelNumber.Set(&v)
}
// SetModelNumberNil sets the value for ModelNumber to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetModelNumberNil() {
	o.ModelNumber.Set(nil)
}

// UnsetModelNumber ensures that no value is present for ModelNumber, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetModelNumber() {
	o.ModelNumber.Unset()
}

// GetModelUrl returns the ModelUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetModelUrl() string {
	if o == nil || IsNil(o.ModelUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ModelUrl.Get()
}

// GetModelUrlOk returns a tuple with the ModelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetModelUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModelUrl.Get(), o.ModelUrl.IsSet()
}

// HasModelUrl returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasModelUrl() bool {
	if o != nil && o.ModelUrl.IsSet() {
		return true
	}

	return false
}

// SetModelUrl gets a reference to the given NullableString and assigns it to the ModelUrl field.
func (o *ClientCapabilitiesDeviceProfile) SetModelUrl(v string) {
	o.ModelUrl.Set(&v)
}
// SetModelUrlNil sets the value for ModelUrl to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetModelUrlNil() {
	o.ModelUrl.Set(nil)
}

// UnsetModelUrl ensures that no value is present for ModelUrl, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetModelUrl() {
	o.ModelUrl.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *ClientCapabilitiesDeviceProfile) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}
// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetEnableAlbumArtInDidl returns the EnableAlbumArtInDidl field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetEnableAlbumArtInDidl() bool {
	if o == nil || IsNil(o.EnableAlbumArtInDidl) {
		var ret bool
		return ret
	}
	return *o.EnableAlbumArtInDidl
}

// GetEnableAlbumArtInDidlOk returns a tuple with the EnableAlbumArtInDidl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetEnableAlbumArtInDidlOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAlbumArtInDidl) {
		return nil, false
	}
	return o.EnableAlbumArtInDidl, true
}

// HasEnableAlbumArtInDidl returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasEnableAlbumArtInDidl() bool {
	if o != nil && !IsNil(o.EnableAlbumArtInDidl) {
		return true
	}

	return false
}

// SetEnableAlbumArtInDidl gets a reference to the given bool and assigns it to the EnableAlbumArtInDidl field.
func (o *ClientCapabilitiesDeviceProfile) SetEnableAlbumArtInDidl(v bool) {
	o.EnableAlbumArtInDidl = &v
}

// GetEnableSingleAlbumArtLimit returns the EnableSingleAlbumArtLimit field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetEnableSingleAlbumArtLimit() bool {
	if o == nil || IsNil(o.EnableSingleAlbumArtLimit) {
		var ret bool
		return ret
	}
	return *o.EnableSingleAlbumArtLimit
}

// GetEnableSingleAlbumArtLimitOk returns a tuple with the EnableSingleAlbumArtLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetEnableSingleAlbumArtLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSingleAlbumArtLimit) {
		return nil, false
	}
	return o.EnableSingleAlbumArtLimit, true
}

// HasEnableSingleAlbumArtLimit returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasEnableSingleAlbumArtLimit() bool {
	if o != nil && !IsNil(o.EnableSingleAlbumArtLimit) {
		return true
	}

	return false
}

// SetEnableSingleAlbumArtLimit gets a reference to the given bool and assigns it to the EnableSingleAlbumArtLimit field.
func (o *ClientCapabilitiesDeviceProfile) SetEnableSingleAlbumArtLimit(v bool) {
	o.EnableSingleAlbumArtLimit = &v
}

// GetEnableSingleSubtitleLimit returns the EnableSingleSubtitleLimit field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetEnableSingleSubtitleLimit() bool {
	if o == nil || IsNil(o.EnableSingleSubtitleLimit) {
		var ret bool
		return ret
	}
	return *o.EnableSingleSubtitleLimit
}

// GetEnableSingleSubtitleLimitOk returns a tuple with the EnableSingleSubtitleLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetEnableSingleSubtitleLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSingleSubtitleLimit) {
		return nil, false
	}
	return o.EnableSingleSubtitleLimit, true
}

// HasEnableSingleSubtitleLimit returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasEnableSingleSubtitleLimit() bool {
	if o != nil && !IsNil(o.EnableSingleSubtitleLimit) {
		return true
	}

	return false
}

// SetEnableSingleSubtitleLimit gets a reference to the given bool and assigns it to the EnableSingleSubtitleLimit field.
func (o *ClientCapabilitiesDeviceProfile) SetEnableSingleSubtitleLimit(v bool) {
	o.EnableSingleSubtitleLimit = &v
}

// GetSupportedMediaTypes returns the SupportedMediaTypes field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetSupportedMediaTypes() string {
	if o == nil || IsNil(o.SupportedMediaTypes) {
		var ret string
		return ret
	}
	return *o.SupportedMediaTypes
}

// GetSupportedMediaTypesOk returns a tuple with the SupportedMediaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetSupportedMediaTypesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedMediaTypes) {
		return nil, false
	}
	return o.SupportedMediaTypes, true
}

// HasSupportedMediaTypes returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasSupportedMediaTypes() bool {
	if o != nil && !IsNil(o.SupportedMediaTypes) {
		return true
	}

	return false
}

// SetSupportedMediaTypes gets a reference to the given string and assigns it to the SupportedMediaTypes field.
func (o *ClientCapabilitiesDeviceProfile) SetSupportedMediaTypes(v string) {
	o.SupportedMediaTypes = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *ClientCapabilitiesDeviceProfile) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetUserId() {
	o.UserId.Unset()
}

// GetAlbumArtPn returns the AlbumArtPn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetAlbumArtPn() string {
	if o == nil || IsNil(o.AlbumArtPn.Get()) {
		var ret string
		return ret
	}
	return *o.AlbumArtPn.Get()
}

// GetAlbumArtPnOk returns a tuple with the AlbumArtPn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetAlbumArtPnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumArtPn.Get(), o.AlbumArtPn.IsSet()
}

// HasAlbumArtPn returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasAlbumArtPn() bool {
	if o != nil && o.AlbumArtPn.IsSet() {
		return true
	}

	return false
}

// SetAlbumArtPn gets a reference to the given NullableString and assigns it to the AlbumArtPn field.
func (o *ClientCapabilitiesDeviceProfile) SetAlbumArtPn(v string) {
	o.AlbumArtPn.Set(&v)
}
// SetAlbumArtPnNil sets the value for AlbumArtPn to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetAlbumArtPnNil() {
	o.AlbumArtPn.Set(nil)
}

// UnsetAlbumArtPn ensures that no value is present for AlbumArtPn, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetAlbumArtPn() {
	o.AlbumArtPn.Unset()
}

// GetMaxAlbumArtWidth returns the MaxAlbumArtWidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxAlbumArtWidth() int32 {
	if o == nil || IsNil(o.MaxAlbumArtWidth.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxAlbumArtWidth.Get()
}

// GetMaxAlbumArtWidthOk returns a tuple with the MaxAlbumArtWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxAlbumArtWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxAlbumArtWidth.Get(), o.MaxAlbumArtWidth.IsSet()
}

// HasMaxAlbumArtWidth returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxAlbumArtWidth() bool {
	if o != nil && o.MaxAlbumArtWidth.IsSet() {
		return true
	}

	return false
}

// SetMaxAlbumArtWidth gets a reference to the given NullableInt32 and assigns it to the MaxAlbumArtWidth field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxAlbumArtWidth(v int32) {
	o.MaxAlbumArtWidth.Set(&v)
}
// SetMaxAlbumArtWidthNil sets the value for MaxAlbumArtWidth to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxAlbumArtWidthNil() {
	o.MaxAlbumArtWidth.Set(nil)
}

// UnsetMaxAlbumArtWidth ensures that no value is present for MaxAlbumArtWidth, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxAlbumArtWidth() {
	o.MaxAlbumArtWidth.Unset()
}

// GetMaxAlbumArtHeight returns the MaxAlbumArtHeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxAlbumArtHeight() int32 {
	if o == nil || IsNil(o.MaxAlbumArtHeight.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxAlbumArtHeight.Get()
}

// GetMaxAlbumArtHeightOk returns a tuple with the MaxAlbumArtHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxAlbumArtHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxAlbumArtHeight.Get(), o.MaxAlbumArtHeight.IsSet()
}

// HasMaxAlbumArtHeight returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxAlbumArtHeight() bool {
	if o != nil && o.MaxAlbumArtHeight.IsSet() {
		return true
	}

	return false
}

// SetMaxAlbumArtHeight gets a reference to the given NullableInt32 and assigns it to the MaxAlbumArtHeight field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxAlbumArtHeight(v int32) {
	o.MaxAlbumArtHeight.Set(&v)
}
// SetMaxAlbumArtHeightNil sets the value for MaxAlbumArtHeight to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxAlbumArtHeightNil() {
	o.MaxAlbumArtHeight.Set(nil)
}

// UnsetMaxAlbumArtHeight ensures that no value is present for MaxAlbumArtHeight, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxAlbumArtHeight() {
	o.MaxAlbumArtHeight.Unset()
}

// GetMaxIconWidth returns the MaxIconWidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxIconWidth() int32 {
	if o == nil || IsNil(o.MaxIconWidth.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxIconWidth.Get()
}

// GetMaxIconWidthOk returns a tuple with the MaxIconWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxIconWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxIconWidth.Get(), o.MaxIconWidth.IsSet()
}

// HasMaxIconWidth returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxIconWidth() bool {
	if o != nil && o.MaxIconWidth.IsSet() {
		return true
	}

	return false
}

// SetMaxIconWidth gets a reference to the given NullableInt32 and assigns it to the MaxIconWidth field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxIconWidth(v int32) {
	o.MaxIconWidth.Set(&v)
}
// SetMaxIconWidthNil sets the value for MaxIconWidth to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxIconWidthNil() {
	o.MaxIconWidth.Set(nil)
}

// UnsetMaxIconWidth ensures that no value is present for MaxIconWidth, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxIconWidth() {
	o.MaxIconWidth.Unset()
}

// GetMaxIconHeight returns the MaxIconHeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxIconHeight() int32 {
	if o == nil || IsNil(o.MaxIconHeight.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxIconHeight.Get()
}

// GetMaxIconHeightOk returns a tuple with the MaxIconHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxIconHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxIconHeight.Get(), o.MaxIconHeight.IsSet()
}

// HasMaxIconHeight returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxIconHeight() bool {
	if o != nil && o.MaxIconHeight.IsSet() {
		return true
	}

	return false
}

// SetMaxIconHeight gets a reference to the given NullableInt32 and assigns it to the MaxIconHeight field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxIconHeight(v int32) {
	o.MaxIconHeight.Set(&v)
}
// SetMaxIconHeightNil sets the value for MaxIconHeight to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxIconHeightNil() {
	o.MaxIconHeight.Set(nil)
}

// UnsetMaxIconHeight ensures that no value is present for MaxIconHeight, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxIconHeight() {
	o.MaxIconHeight.Unset()
}

// GetMaxStreamingBitrate returns the MaxStreamingBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxStreamingBitrate() int32 {
	if o == nil || IsNil(o.MaxStreamingBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxStreamingBitrate.Get()
}

// GetMaxStreamingBitrateOk returns a tuple with the MaxStreamingBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxStreamingBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxStreamingBitrate.Get(), o.MaxStreamingBitrate.IsSet()
}

// HasMaxStreamingBitrate returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxStreamingBitrate() bool {
	if o != nil && o.MaxStreamingBitrate.IsSet() {
		return true
	}

	return false
}

// SetMaxStreamingBitrate gets a reference to the given NullableInt32 and assigns it to the MaxStreamingBitrate field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxStreamingBitrate(v int32) {
	o.MaxStreamingBitrate.Set(&v)
}
// SetMaxStreamingBitrateNil sets the value for MaxStreamingBitrate to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxStreamingBitrateNil() {
	o.MaxStreamingBitrate.Set(nil)
}

// UnsetMaxStreamingBitrate ensures that no value is present for MaxStreamingBitrate, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxStreamingBitrate() {
	o.MaxStreamingBitrate.Unset()
}

// GetMaxStaticBitrate returns the MaxStaticBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxStaticBitrate() int32 {
	if o == nil || IsNil(o.MaxStaticBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxStaticBitrate.Get()
}

// GetMaxStaticBitrateOk returns a tuple with the MaxStaticBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxStaticBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxStaticBitrate.Get(), o.MaxStaticBitrate.IsSet()
}

// HasMaxStaticBitrate returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxStaticBitrate() bool {
	if o != nil && o.MaxStaticBitrate.IsSet() {
		return true
	}

	return false
}

// SetMaxStaticBitrate gets a reference to the given NullableInt32 and assigns it to the MaxStaticBitrate field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxStaticBitrate(v int32) {
	o.MaxStaticBitrate.Set(&v)
}
// SetMaxStaticBitrateNil sets the value for MaxStaticBitrate to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxStaticBitrateNil() {
	o.MaxStaticBitrate.Set(nil)
}

// UnsetMaxStaticBitrate ensures that no value is present for MaxStaticBitrate, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxStaticBitrate() {
	o.MaxStaticBitrate.Unset()
}

// GetMusicStreamingTranscodingBitrate returns the MusicStreamingTranscodingBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMusicStreamingTranscodingBitrate() int32 {
	if o == nil || IsNil(o.MusicStreamingTranscodingBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.MusicStreamingTranscodingBitrate.Get()
}

// GetMusicStreamingTranscodingBitrateOk returns a tuple with the MusicStreamingTranscodingBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMusicStreamingTranscodingBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MusicStreamingTranscodingBitrate.Get(), o.MusicStreamingTranscodingBitrate.IsSet()
}

// HasMusicStreamingTranscodingBitrate returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMusicStreamingTranscodingBitrate() bool {
	if o != nil && o.MusicStreamingTranscodingBitrate.IsSet() {
		return true
	}

	return false
}

// SetMusicStreamingTranscodingBitrate gets a reference to the given NullableInt32 and assigns it to the MusicStreamingTranscodingBitrate field.
func (o *ClientCapabilitiesDeviceProfile) SetMusicStreamingTranscodingBitrate(v int32) {
	o.MusicStreamingTranscodingBitrate.Set(&v)
}
// SetMusicStreamingTranscodingBitrateNil sets the value for MusicStreamingTranscodingBitrate to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMusicStreamingTranscodingBitrateNil() {
	o.MusicStreamingTranscodingBitrate.Set(nil)
}

// UnsetMusicStreamingTranscodingBitrate ensures that no value is present for MusicStreamingTranscodingBitrate, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMusicStreamingTranscodingBitrate() {
	o.MusicStreamingTranscodingBitrate.Unset()
}

// GetMaxStaticMusicBitrate returns the MaxStaticMusicBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetMaxStaticMusicBitrate() int32 {
	if o == nil || IsNil(o.MaxStaticMusicBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxStaticMusicBitrate.Get()
}

// GetMaxStaticMusicBitrateOk returns a tuple with the MaxStaticMusicBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetMaxStaticMusicBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxStaticMusicBitrate.Get(), o.MaxStaticMusicBitrate.IsSet()
}

// HasMaxStaticMusicBitrate returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasMaxStaticMusicBitrate() bool {
	if o != nil && o.MaxStaticMusicBitrate.IsSet() {
		return true
	}

	return false
}

// SetMaxStaticMusicBitrate gets a reference to the given NullableInt32 and assigns it to the MaxStaticMusicBitrate field.
func (o *ClientCapabilitiesDeviceProfile) SetMaxStaticMusicBitrate(v int32) {
	o.MaxStaticMusicBitrate.Set(&v)
}
// SetMaxStaticMusicBitrateNil sets the value for MaxStaticMusicBitrate to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetMaxStaticMusicBitrateNil() {
	o.MaxStaticMusicBitrate.Set(nil)
}

// UnsetMaxStaticMusicBitrate ensures that no value is present for MaxStaticMusicBitrate, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetMaxStaticMusicBitrate() {
	o.MaxStaticMusicBitrate.Unset()
}

// GetSonyAggregationFlags returns the SonyAggregationFlags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetSonyAggregationFlags() string {
	if o == nil || IsNil(o.SonyAggregationFlags.Get()) {
		var ret string
		return ret
	}
	return *o.SonyAggregationFlags.Get()
}

// GetSonyAggregationFlagsOk returns a tuple with the SonyAggregationFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetSonyAggregationFlagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SonyAggregationFlags.Get(), o.SonyAggregationFlags.IsSet()
}

// HasSonyAggregationFlags returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasSonyAggregationFlags() bool {
	if o != nil && o.SonyAggregationFlags.IsSet() {
		return true
	}

	return false
}

// SetSonyAggregationFlags gets a reference to the given NullableString and assigns it to the SonyAggregationFlags field.
func (o *ClientCapabilitiesDeviceProfile) SetSonyAggregationFlags(v string) {
	o.SonyAggregationFlags.Set(&v)
}
// SetSonyAggregationFlagsNil sets the value for SonyAggregationFlags to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetSonyAggregationFlagsNil() {
	o.SonyAggregationFlags.Set(nil)
}

// UnsetSonyAggregationFlags ensures that no value is present for SonyAggregationFlags, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetSonyAggregationFlags() {
	o.SonyAggregationFlags.Unset()
}

// GetProtocolInfo returns the ProtocolInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientCapabilitiesDeviceProfile) GetProtocolInfo() string {
	if o == nil || IsNil(o.ProtocolInfo.Get()) {
		var ret string
		return ret
	}
	return *o.ProtocolInfo.Get()
}

// GetProtocolInfoOk returns a tuple with the ProtocolInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientCapabilitiesDeviceProfile) GetProtocolInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtocolInfo.Get(), o.ProtocolInfo.IsSet()
}

// HasProtocolInfo returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasProtocolInfo() bool {
	if o != nil && o.ProtocolInfo.IsSet() {
		return true
	}

	return false
}

// SetProtocolInfo gets a reference to the given NullableString and assigns it to the ProtocolInfo field.
func (o *ClientCapabilitiesDeviceProfile) SetProtocolInfo(v string) {
	o.ProtocolInfo.Set(&v)
}
// SetProtocolInfoNil sets the value for ProtocolInfo to be an explicit nil
func (o *ClientCapabilitiesDeviceProfile) SetProtocolInfoNil() {
	o.ProtocolInfo.Set(nil)
}

// UnsetProtocolInfo ensures that no value is present for ProtocolInfo, not even an explicit nil
func (o *ClientCapabilitiesDeviceProfile) UnsetProtocolInfo() {
	o.ProtocolInfo.Unset()
}

// GetTimelineOffsetSeconds returns the TimelineOffsetSeconds field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetTimelineOffsetSeconds() int32 {
	if o == nil || IsNil(o.TimelineOffsetSeconds) {
		var ret int32
		return ret
	}
	return *o.TimelineOffsetSeconds
}

// GetTimelineOffsetSecondsOk returns a tuple with the TimelineOffsetSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetTimelineOffsetSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TimelineOffsetSeconds) {
		return nil, false
	}
	return o.TimelineOffsetSeconds, true
}

// HasTimelineOffsetSeconds returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasTimelineOffsetSeconds() bool {
	if o != nil && !IsNil(o.TimelineOffsetSeconds) {
		return true
	}

	return false
}

// SetTimelineOffsetSeconds gets a reference to the given int32 and assigns it to the TimelineOffsetSeconds field.
func (o *ClientCapabilitiesDeviceProfile) SetTimelineOffsetSeconds(v int32) {
	o.TimelineOffsetSeconds = &v
}

// GetRequiresPlainVideoItems returns the RequiresPlainVideoItems field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetRequiresPlainVideoItems() bool {
	if o == nil || IsNil(o.RequiresPlainVideoItems) {
		var ret bool
		return ret
	}
	return *o.RequiresPlainVideoItems
}

// GetRequiresPlainVideoItemsOk returns a tuple with the RequiresPlainVideoItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetRequiresPlainVideoItemsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresPlainVideoItems) {
		return nil, false
	}
	return o.RequiresPlainVideoItems, true
}

// HasRequiresPlainVideoItems returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasRequiresPlainVideoItems() bool {
	if o != nil && !IsNil(o.RequiresPlainVideoItems) {
		return true
	}

	return false
}

// SetRequiresPlainVideoItems gets a reference to the given bool and assigns it to the RequiresPlainVideoItems field.
func (o *ClientCapabilitiesDeviceProfile) SetRequiresPlainVideoItems(v bool) {
	o.RequiresPlainVideoItems = &v
}

// GetRequiresPlainFolders returns the RequiresPlainFolders field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetRequiresPlainFolders() bool {
	if o == nil || IsNil(o.RequiresPlainFolders) {
		var ret bool
		return ret
	}
	return *o.RequiresPlainFolders
}

// GetRequiresPlainFoldersOk returns a tuple with the RequiresPlainFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetRequiresPlainFoldersOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresPlainFolders) {
		return nil, false
	}
	return o.RequiresPlainFolders, true
}

// HasRequiresPlainFolders returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasRequiresPlainFolders() bool {
	if o != nil && !IsNil(o.RequiresPlainFolders) {
		return true
	}

	return false
}

// SetRequiresPlainFolders gets a reference to the given bool and assigns it to the RequiresPlainFolders field.
func (o *ClientCapabilitiesDeviceProfile) SetRequiresPlainFolders(v bool) {
	o.RequiresPlainFolders = &v
}

// GetEnableMSMediaReceiverRegistrar returns the EnableMSMediaReceiverRegistrar field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetEnableMSMediaReceiverRegistrar() bool {
	if o == nil || IsNil(o.EnableMSMediaReceiverRegistrar) {
		var ret bool
		return ret
	}
	return *o.EnableMSMediaReceiverRegistrar
}

// GetEnableMSMediaReceiverRegistrarOk returns a tuple with the EnableMSMediaReceiverRegistrar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetEnableMSMediaReceiverRegistrarOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMSMediaReceiverRegistrar) {
		return nil, false
	}
	return o.EnableMSMediaReceiverRegistrar, true
}

// HasEnableMSMediaReceiverRegistrar returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasEnableMSMediaReceiverRegistrar() bool {
	if o != nil && !IsNil(o.EnableMSMediaReceiverRegistrar) {
		return true
	}

	return false
}

// SetEnableMSMediaReceiverRegistrar gets a reference to the given bool and assigns it to the EnableMSMediaReceiverRegistrar field.
func (o *ClientCapabilitiesDeviceProfile) SetEnableMSMediaReceiverRegistrar(v bool) {
	o.EnableMSMediaReceiverRegistrar = &v
}

// GetIgnoreTranscodeByteRangeRequests returns the IgnoreTranscodeByteRangeRequests field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetIgnoreTranscodeByteRangeRequests() bool {
	if o == nil || IsNil(o.IgnoreTranscodeByteRangeRequests) {
		var ret bool
		return ret
	}
	return *o.IgnoreTranscodeByteRangeRequests
}

// GetIgnoreTranscodeByteRangeRequestsOk returns a tuple with the IgnoreTranscodeByteRangeRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetIgnoreTranscodeByteRangeRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreTranscodeByteRangeRequests) {
		return nil, false
	}
	return o.IgnoreTranscodeByteRangeRequests, true
}

// HasIgnoreTranscodeByteRangeRequests returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasIgnoreTranscodeByteRangeRequests() bool {
	if o != nil && !IsNil(o.IgnoreTranscodeByteRangeRequests) {
		return true
	}

	return false
}

// SetIgnoreTranscodeByteRangeRequests gets a reference to the given bool and assigns it to the IgnoreTranscodeByteRangeRequests field.
func (o *ClientCapabilitiesDeviceProfile) SetIgnoreTranscodeByteRangeRequests(v bool) {
	o.IgnoreTranscodeByteRangeRequests = &v
}

// GetXmlRootAttributes returns the XmlRootAttributes field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetXmlRootAttributes() []XmlAttribute {
	if o == nil || IsNil(o.XmlRootAttributes) {
		var ret []XmlAttribute
		return ret
	}
	return o.XmlRootAttributes
}

// GetXmlRootAttributesOk returns a tuple with the XmlRootAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetXmlRootAttributesOk() ([]XmlAttribute, bool) {
	if o == nil || IsNil(o.XmlRootAttributes) {
		return nil, false
	}
	return o.XmlRootAttributes, true
}

// HasXmlRootAttributes returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasXmlRootAttributes() bool {
	if o != nil && !IsNil(o.XmlRootAttributes) {
		return true
	}

	return false
}

// SetXmlRootAttributes gets a reference to the given []XmlAttribute and assigns it to the XmlRootAttributes field.
func (o *ClientCapabilitiesDeviceProfile) SetXmlRootAttributes(v []XmlAttribute) {
	o.XmlRootAttributes = v
}

// GetDirectPlayProfiles returns the DirectPlayProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetDirectPlayProfiles() []DirectPlayProfile {
	if o == nil || IsNil(o.DirectPlayProfiles) {
		var ret []DirectPlayProfile
		return ret
	}
	return o.DirectPlayProfiles
}

// GetDirectPlayProfilesOk returns a tuple with the DirectPlayProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetDirectPlayProfilesOk() ([]DirectPlayProfile, bool) {
	if o == nil || IsNil(o.DirectPlayProfiles) {
		return nil, false
	}
	return o.DirectPlayProfiles, true
}

// HasDirectPlayProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasDirectPlayProfiles() bool {
	if o != nil && !IsNil(o.DirectPlayProfiles) {
		return true
	}

	return false
}

// SetDirectPlayProfiles gets a reference to the given []DirectPlayProfile and assigns it to the DirectPlayProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetDirectPlayProfiles(v []DirectPlayProfile) {
	o.DirectPlayProfiles = v
}

// GetTranscodingProfiles returns the TranscodingProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetTranscodingProfiles() []TranscodingProfile {
	if o == nil || IsNil(o.TranscodingProfiles) {
		var ret []TranscodingProfile
		return ret
	}
	return o.TranscodingProfiles
}

// GetTranscodingProfilesOk returns a tuple with the TranscodingProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetTranscodingProfilesOk() ([]TranscodingProfile, bool) {
	if o == nil || IsNil(o.TranscodingProfiles) {
		return nil, false
	}
	return o.TranscodingProfiles, true
}

// HasTranscodingProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasTranscodingProfiles() bool {
	if o != nil && !IsNil(o.TranscodingProfiles) {
		return true
	}

	return false
}

// SetTranscodingProfiles gets a reference to the given []TranscodingProfile and assigns it to the TranscodingProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetTranscodingProfiles(v []TranscodingProfile) {
	o.TranscodingProfiles = v
}

// GetContainerProfiles returns the ContainerProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetContainerProfiles() []ContainerProfile {
	if o == nil || IsNil(o.ContainerProfiles) {
		var ret []ContainerProfile
		return ret
	}
	return o.ContainerProfiles
}

// GetContainerProfilesOk returns a tuple with the ContainerProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetContainerProfilesOk() ([]ContainerProfile, bool) {
	if o == nil || IsNil(o.ContainerProfiles) {
		return nil, false
	}
	return o.ContainerProfiles, true
}

// HasContainerProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasContainerProfiles() bool {
	if o != nil && !IsNil(o.ContainerProfiles) {
		return true
	}

	return false
}

// SetContainerProfiles gets a reference to the given []ContainerProfile and assigns it to the ContainerProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetContainerProfiles(v []ContainerProfile) {
	o.ContainerProfiles = v
}

// GetCodecProfiles returns the CodecProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetCodecProfiles() []CodecProfile {
	if o == nil || IsNil(o.CodecProfiles) {
		var ret []CodecProfile
		return ret
	}
	return o.CodecProfiles
}

// GetCodecProfilesOk returns a tuple with the CodecProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetCodecProfilesOk() ([]CodecProfile, bool) {
	if o == nil || IsNil(o.CodecProfiles) {
		return nil, false
	}
	return o.CodecProfiles, true
}

// HasCodecProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasCodecProfiles() bool {
	if o != nil && !IsNil(o.CodecProfiles) {
		return true
	}

	return false
}

// SetCodecProfiles gets a reference to the given []CodecProfile and assigns it to the CodecProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetCodecProfiles(v []CodecProfile) {
	o.CodecProfiles = v
}

// GetResponseProfiles returns the ResponseProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetResponseProfiles() []ResponseProfile {
	if o == nil || IsNil(o.ResponseProfiles) {
		var ret []ResponseProfile
		return ret
	}
	return o.ResponseProfiles
}

// GetResponseProfilesOk returns a tuple with the ResponseProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetResponseProfilesOk() ([]ResponseProfile, bool) {
	if o == nil || IsNil(o.ResponseProfiles) {
		return nil, false
	}
	return o.ResponseProfiles, true
}

// HasResponseProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasResponseProfiles() bool {
	if o != nil && !IsNil(o.ResponseProfiles) {
		return true
	}

	return false
}

// SetResponseProfiles gets a reference to the given []ResponseProfile and assigns it to the ResponseProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetResponseProfiles(v []ResponseProfile) {
	o.ResponseProfiles = v
}

// GetSubtitleProfiles returns the SubtitleProfiles field value if set, zero value otherwise.
func (o *ClientCapabilitiesDeviceProfile) GetSubtitleProfiles() []SubtitleProfile {
	if o == nil || IsNil(o.SubtitleProfiles) {
		var ret []SubtitleProfile
		return ret
	}
	return o.SubtitleProfiles
}

// GetSubtitleProfilesOk returns a tuple with the SubtitleProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCapabilitiesDeviceProfile) GetSubtitleProfilesOk() ([]SubtitleProfile, bool) {
	if o == nil || IsNil(o.SubtitleProfiles) {
		return nil, false
	}
	return o.SubtitleProfiles, true
}

// HasSubtitleProfiles returns a boolean if a field has been set.
func (o *ClientCapabilitiesDeviceProfile) HasSubtitleProfiles() bool {
	if o != nil && !IsNil(o.SubtitleProfiles) {
		return true
	}

	return false
}

// SetSubtitleProfiles gets a reference to the given []SubtitleProfile and assigns it to the SubtitleProfiles field.
func (o *ClientCapabilitiesDeviceProfile) SetSubtitleProfiles(v []SubtitleProfile) {
	o.SubtitleProfiles = v
}

func (o ClientCapabilitiesDeviceProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCapabilitiesDeviceProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Identification.IsSet() {
		toSerialize["Identification"] = o.Identification.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["FriendlyName"] = o.FriendlyName.Get()
	}
	if o.Manufacturer.IsSet() {
		toSerialize["Manufacturer"] = o.Manufacturer.Get()
	}
	if o.ManufacturerUrl.IsSet() {
		toSerialize["ManufacturerUrl"] = o.ManufacturerUrl.Get()
	}
	if o.ModelName.IsSet() {
		toSerialize["ModelName"] = o.ModelName.Get()
	}
	if o.ModelDescription.IsSet() {
		toSerialize["ModelDescription"] = o.ModelDescription.Get()
	}
	if o.ModelNumber.IsSet() {
		toSerialize["ModelNumber"] = o.ModelNumber.Get()
	}
	if o.ModelUrl.IsSet() {
		toSerialize["ModelUrl"] = o.ModelUrl.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["SerialNumber"] = o.SerialNumber.Get()
	}
	if !IsNil(o.EnableAlbumArtInDidl) {
		toSerialize["EnableAlbumArtInDidl"] = o.EnableAlbumArtInDidl
	}
	if !IsNil(o.EnableSingleAlbumArtLimit) {
		toSerialize["EnableSingleAlbumArtLimit"] = o.EnableSingleAlbumArtLimit
	}
	if !IsNil(o.EnableSingleSubtitleLimit) {
		toSerialize["EnableSingleSubtitleLimit"] = o.EnableSingleSubtitleLimit
	}
	if !IsNil(o.SupportedMediaTypes) {
		toSerialize["SupportedMediaTypes"] = o.SupportedMediaTypes
	}
	if o.UserId.IsSet() {
		toSerialize["UserId"] = o.UserId.Get()
	}
	if o.AlbumArtPn.IsSet() {
		toSerialize["AlbumArtPn"] = o.AlbumArtPn.Get()
	}
	if o.MaxAlbumArtWidth.IsSet() {
		toSerialize["MaxAlbumArtWidth"] = o.MaxAlbumArtWidth.Get()
	}
	if o.MaxAlbumArtHeight.IsSet() {
		toSerialize["MaxAlbumArtHeight"] = o.MaxAlbumArtHeight.Get()
	}
	if o.MaxIconWidth.IsSet() {
		toSerialize["MaxIconWidth"] = o.MaxIconWidth.Get()
	}
	if o.MaxIconHeight.IsSet() {
		toSerialize["MaxIconHeight"] = o.MaxIconHeight.Get()
	}
	if o.MaxStreamingBitrate.IsSet() {
		toSerialize["MaxStreamingBitrate"] = o.MaxStreamingBitrate.Get()
	}
	if o.MaxStaticBitrate.IsSet() {
		toSerialize["MaxStaticBitrate"] = o.MaxStaticBitrate.Get()
	}
	if o.MusicStreamingTranscodingBitrate.IsSet() {
		toSerialize["MusicStreamingTranscodingBitrate"] = o.MusicStreamingTranscodingBitrate.Get()
	}
	if o.MaxStaticMusicBitrate.IsSet() {
		toSerialize["MaxStaticMusicBitrate"] = o.MaxStaticMusicBitrate.Get()
	}
	if o.SonyAggregationFlags.IsSet() {
		toSerialize["SonyAggregationFlags"] = o.SonyAggregationFlags.Get()
	}
	if o.ProtocolInfo.IsSet() {
		toSerialize["ProtocolInfo"] = o.ProtocolInfo.Get()
	}
	if !IsNil(o.TimelineOffsetSeconds) {
		toSerialize["TimelineOffsetSeconds"] = o.TimelineOffsetSeconds
	}
	if !IsNil(o.RequiresPlainVideoItems) {
		toSerialize["RequiresPlainVideoItems"] = o.RequiresPlainVideoItems
	}
	if !IsNil(o.RequiresPlainFolders) {
		toSerialize["RequiresPlainFolders"] = o.RequiresPlainFolders
	}
	if !IsNil(o.EnableMSMediaReceiverRegistrar) {
		toSerialize["EnableMSMediaReceiverRegistrar"] = o.EnableMSMediaReceiverRegistrar
	}
	if !IsNil(o.IgnoreTranscodeByteRangeRequests) {
		toSerialize["IgnoreTranscodeByteRangeRequests"] = o.IgnoreTranscodeByteRangeRequests
	}
	if !IsNil(o.XmlRootAttributes) {
		toSerialize["XmlRootAttributes"] = o.XmlRootAttributes
	}
	if !IsNil(o.DirectPlayProfiles) {
		toSerialize["DirectPlayProfiles"] = o.DirectPlayProfiles
	}
	if !IsNil(o.TranscodingProfiles) {
		toSerialize["TranscodingProfiles"] = o.TranscodingProfiles
	}
	if !IsNil(o.ContainerProfiles) {
		toSerialize["ContainerProfiles"] = o.ContainerProfiles
	}
	if !IsNil(o.CodecProfiles) {
		toSerialize["CodecProfiles"] = o.CodecProfiles
	}
	if !IsNil(o.ResponseProfiles) {
		toSerialize["ResponseProfiles"] = o.ResponseProfiles
	}
	if !IsNil(o.SubtitleProfiles) {
		toSerialize["SubtitleProfiles"] = o.SubtitleProfiles
	}
	return toSerialize, nil
}

type NullableClientCapabilitiesDeviceProfile struct {
	value *ClientCapabilitiesDeviceProfile
	isSet bool
}

func (v NullableClientCapabilitiesDeviceProfile) Get() *ClientCapabilitiesDeviceProfile {
	return v.value
}

func (v *NullableClientCapabilitiesDeviceProfile) Set(val *ClientCapabilitiesDeviceProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCapabilitiesDeviceProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCapabilitiesDeviceProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCapabilitiesDeviceProfile(val *ClientCapabilitiesDeviceProfile) *NullableClientCapabilitiesDeviceProfile {
	return &NullableClientCapabilitiesDeviceProfile{value: val, isSet: true}
}

func (v NullableClientCapabilitiesDeviceProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCapabilitiesDeviceProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


