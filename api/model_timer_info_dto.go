/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the TimerInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimerInfoDto{}

// TimerInfoDto struct for TimerInfoDto
type TimerInfoDto struct {
	// Gets or sets the Id of the recording.
	Id NullableString `json:"Id,omitempty"`
	Type NullableString `json:"Type,omitempty"`
	// Gets or sets the server identifier.
	ServerId NullableString `json:"ServerId,omitempty"`
	// Gets or sets the external identifier.
	ExternalId NullableString `json:"ExternalId,omitempty"`
	// Gets or sets the channel id of the recording.
	ChannelId *string `json:"ChannelId,omitempty"`
	// Gets or sets the external channel identifier.
	ExternalChannelId NullableString `json:"ExternalChannelId,omitempty"`
	// Gets or sets the channel name of the recording.
	ChannelName NullableString `json:"ChannelName,omitempty"`
	ChannelPrimaryImageTag NullableString `json:"ChannelPrimaryImageTag,omitempty"`
	// Gets or sets the program identifier.
	ProgramId NullableString `json:"ProgramId,omitempty"`
	// Gets or sets the external program identifier.
	ExternalProgramId NullableString `json:"ExternalProgramId,omitempty"`
	// Gets or sets the name of the recording.
	Name NullableString `json:"Name,omitempty"`
	// Gets or sets the description of the recording.
	Overview NullableString `json:"Overview,omitempty"`
	// Gets or sets the start date of the recording, in UTC.
	StartDate *time.Time `json:"StartDate,omitempty"`
	// Gets or sets the end date of the recording, in UTC.
	EndDate *time.Time `json:"EndDate,omitempty"`
	// Gets or sets the name of the service.
	ServiceName NullableString `json:"ServiceName,omitempty"`
	// Gets or sets the priority.
	Priority *int32 `json:"Priority,omitempty"`
	// Gets or sets the pre padding seconds.
	PrePaddingSeconds *int32 `json:"PrePaddingSeconds,omitempty"`
	// Gets or sets the post padding seconds.
	PostPaddingSeconds *int32 `json:"PostPaddingSeconds,omitempty"`
	// Gets or sets a value indicating whether this instance is pre padding required.
	IsPrePaddingRequired *bool `json:"IsPrePaddingRequired,omitempty"`
	// Gets or sets the Id of the Parent that has a backdrop if the item does not have one.
	ParentBackdropItemId NullableString `json:"ParentBackdropItemId,omitempty"`
	// Gets or sets the parent backdrop image tags.
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	// Gets or sets a value indicating whether this instance is post padding required.
	IsPostPaddingRequired *bool `json:"IsPostPaddingRequired,omitempty"`
	KeepUntil *KeepUntil `json:"KeepUntil,omitempty"`
	// Gets or sets the status.
	Status *RecordingStatus `json:"Status,omitempty"`
	// Gets or sets the series timer identifier.
	SeriesTimerId NullableString `json:"SeriesTimerId,omitempty"`
	// Gets or sets the external series timer identifier.
	ExternalSeriesTimerId NullableString `json:"ExternalSeriesTimerId,omitempty"`
	// Gets or sets the run time ticks.
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	// Gets or sets the program information.
	ProgramInfo NullableBaseItemDto `json:"ProgramInfo,omitempty"`
}

// NewTimerInfoDto instantiates a new TimerInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimerInfoDto() *TimerInfoDto {
	this := TimerInfoDto{}
	return &this
}

// NewTimerInfoDtoWithDefaults instantiates a new TimerInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimerInfoDtoWithDefaults() *TimerInfoDto {
	this := TimerInfoDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TimerInfoDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TimerInfoDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TimerInfoDto) UnsetId() {
	o.Id.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *TimerInfoDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *TimerInfoDto) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *TimerInfoDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *TimerInfoDto) UnsetType() {
	o.Type.Unset()
}

// GetServerId returns the ServerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerId.Get()
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerId.Get(), o.ServerId.IsSet()
}

// HasServerId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasServerId() bool {
	if o != nil && o.ServerId.IsSet() {
		return true
	}

	return false
}

// SetServerId gets a reference to the given NullableString and assigns it to the ServerId field.
func (o *TimerInfoDto) SetServerId(v string) {
	o.ServerId.Set(&v)
}
// SetServerIdNil sets the value for ServerId to be an explicit nil
func (o *TimerInfoDto) SetServerIdNil() {
	o.ServerId.Set(nil)
}

// UnsetServerId ensures that no value is present for ServerId, not even an explicit nil
func (o *TimerInfoDto) UnsetServerId() {
	o.ServerId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *TimerInfoDto) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *TimerInfoDto) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *TimerInfoDto) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *TimerInfoDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *TimerInfoDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetExternalChannelId returns the ExternalChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetExternalChannelId() string {
	if o == nil || IsNil(o.ExternalChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalChannelId.Get()
}

// GetExternalChannelIdOk returns a tuple with the ExternalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetExternalChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalChannelId.Get(), o.ExternalChannelId.IsSet()
}

// HasExternalChannelId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasExternalChannelId() bool {
	if o != nil && o.ExternalChannelId.IsSet() {
		return true
	}

	return false
}

// SetExternalChannelId gets a reference to the given NullableString and assigns it to the ExternalChannelId field.
func (o *TimerInfoDto) SetExternalChannelId(v string) {
	o.ExternalChannelId.Set(&v)
}
// SetExternalChannelIdNil sets the value for ExternalChannelId to be an explicit nil
func (o *TimerInfoDto) SetExternalChannelIdNil() {
	o.ExternalChannelId.Set(nil)
}

// UnsetExternalChannelId ensures that no value is present for ExternalChannelId, not even an explicit nil
func (o *TimerInfoDto) UnsetExternalChannelId() {
	o.ExternalChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *TimerInfoDto) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *TimerInfoDto) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *TimerInfoDto) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *TimerInfoDto) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag.Get()
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelPrimaryImageTag.Get(), o.ChannelPrimaryImageTag.IsSet()
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *TimerInfoDto) HasChannelPrimaryImageTag() bool {
	if o != nil && o.ChannelPrimaryImageTag.IsSet() {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given NullableString and assigns it to the ChannelPrimaryImageTag field.
func (o *TimerInfoDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag.Set(&v)
}
// SetChannelPrimaryImageTagNil sets the value for ChannelPrimaryImageTag to be an explicit nil
func (o *TimerInfoDto) SetChannelPrimaryImageTagNil() {
	o.ChannelPrimaryImageTag.Set(nil)
}

// UnsetChannelPrimaryImageTag ensures that no value is present for ChannelPrimaryImageTag, not even an explicit nil
func (o *TimerInfoDto) UnsetChannelPrimaryImageTag() {
	o.ChannelPrimaryImageTag.Unset()
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId.Get()) {
		var ret string
		return ret
	}
	return *o.ProgramId.Get()
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramId.Get(), o.ProgramId.IsSet()
}

// HasProgramId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasProgramId() bool {
	if o != nil && o.ProgramId.IsSet() {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given NullableString and assigns it to the ProgramId field.
func (o *TimerInfoDto) SetProgramId(v string) {
	o.ProgramId.Set(&v)
}
// SetProgramIdNil sets the value for ProgramId to be an explicit nil
func (o *TimerInfoDto) SetProgramIdNil() {
	o.ProgramId.Set(nil)
}

// UnsetProgramId ensures that no value is present for ProgramId, not even an explicit nil
func (o *TimerInfoDto) UnsetProgramId() {
	o.ProgramId.Unset()
}

// GetExternalProgramId returns the ExternalProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetExternalProgramId() string {
	if o == nil || IsNil(o.ExternalProgramId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalProgramId.Get()
}

// GetExternalProgramIdOk returns a tuple with the ExternalProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetExternalProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalProgramId.Get(), o.ExternalProgramId.IsSet()
}

// HasExternalProgramId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasExternalProgramId() bool {
	if o != nil && o.ExternalProgramId.IsSet() {
		return true
	}

	return false
}

// SetExternalProgramId gets a reference to the given NullableString and assigns it to the ExternalProgramId field.
func (o *TimerInfoDto) SetExternalProgramId(v string) {
	o.ExternalProgramId.Set(&v)
}
// SetExternalProgramIdNil sets the value for ExternalProgramId to be an explicit nil
func (o *TimerInfoDto) SetExternalProgramIdNil() {
	o.ExternalProgramId.Set(nil)
}

// UnsetExternalProgramId ensures that no value is present for ExternalProgramId, not even an explicit nil
func (o *TimerInfoDto) UnsetExternalProgramId() {
	o.ExternalProgramId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TimerInfoDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TimerInfoDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TimerInfoDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TimerInfoDto) UnsetName() {
	o.Name.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *TimerInfoDto) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *TimerInfoDto) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *TimerInfoDto) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *TimerInfoDto) UnsetOverview() {
	o.Overview.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *TimerInfoDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *TimerInfoDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *TimerInfoDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *TimerInfoDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *TimerInfoDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *TimerInfoDto) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceName.Get()
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceName.Get(), o.ServiceName.IsSet()
}

// HasServiceName returns a boolean if a field has been set.
func (o *TimerInfoDto) HasServiceName() bool {
	if o != nil && o.ServiceName.IsSet() {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given NullableString and assigns it to the ServiceName field.
func (o *TimerInfoDto) SetServiceName(v string) {
	o.ServiceName.Set(&v)
}
// SetServiceNameNil sets the value for ServiceName to be an explicit nil
func (o *TimerInfoDto) SetServiceNameNil() {
	o.ServiceName.Set(nil)
}

// UnsetServiceName ensures that no value is present for ServiceName, not even an explicit nil
func (o *TimerInfoDto) UnsetServiceName() {
	o.ServiceName.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *TimerInfoDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *TimerInfoDto) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *TimerInfoDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrePaddingSeconds returns the PrePaddingSeconds field value if set, zero value otherwise.
func (o *TimerInfoDto) GetPrePaddingSeconds() int32 {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PrePaddingSeconds
}

// GetPrePaddingSecondsOk returns a tuple with the PrePaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetPrePaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		return nil, false
	}
	return o.PrePaddingSeconds, true
}

// HasPrePaddingSeconds returns a boolean if a field has been set.
func (o *TimerInfoDto) HasPrePaddingSeconds() bool {
	if o != nil && !IsNil(o.PrePaddingSeconds) {
		return true
	}

	return false
}

// SetPrePaddingSeconds gets a reference to the given int32 and assigns it to the PrePaddingSeconds field.
func (o *TimerInfoDto) SetPrePaddingSeconds(v int32) {
	o.PrePaddingSeconds = &v
}

// GetPostPaddingSeconds returns the PostPaddingSeconds field value if set, zero value otherwise.
func (o *TimerInfoDto) GetPostPaddingSeconds() int32 {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PostPaddingSeconds
}

// GetPostPaddingSecondsOk returns a tuple with the PostPaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetPostPaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		return nil, false
	}
	return o.PostPaddingSeconds, true
}

// HasPostPaddingSeconds returns a boolean if a field has been set.
func (o *TimerInfoDto) HasPostPaddingSeconds() bool {
	if o != nil && !IsNil(o.PostPaddingSeconds) {
		return true
	}

	return false
}

// SetPostPaddingSeconds gets a reference to the given int32 and assigns it to the PostPaddingSeconds field.
func (o *TimerInfoDto) SetPostPaddingSeconds(v int32) {
	o.PostPaddingSeconds = &v
}

// GetIsPrePaddingRequired returns the IsPrePaddingRequired field value if set, zero value otherwise.
func (o *TimerInfoDto) GetIsPrePaddingRequired() bool {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPrePaddingRequired
}

// GetIsPrePaddingRequiredOk returns a tuple with the IsPrePaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetIsPrePaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		return nil, false
	}
	return o.IsPrePaddingRequired, true
}

// HasIsPrePaddingRequired returns a boolean if a field has been set.
func (o *TimerInfoDto) HasIsPrePaddingRequired() bool {
	if o != nil && !IsNil(o.IsPrePaddingRequired) {
		return true
	}

	return false
}

// SetIsPrePaddingRequired gets a reference to the given bool and assigns it to the IsPrePaddingRequired field.
func (o *TimerInfoDto) SetIsPrePaddingRequired(v bool) {
	o.IsPrePaddingRequired = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId.Get()
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBackdropItemId.Get(), o.ParentBackdropItemId.IsSet()
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasParentBackdropItemId() bool {
	if o != nil && o.ParentBackdropItemId.IsSet() {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given NullableString and assigns it to the ParentBackdropItemId field.
func (o *TimerInfoDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId.Set(&v)
}
// SetParentBackdropItemIdNil sets the value for ParentBackdropItemId to be an explicit nil
func (o *TimerInfoDto) SetParentBackdropItemIdNil() {
	o.ParentBackdropItemId.Set(nil)
}

// UnsetParentBackdropItemId ensures that no value is present for ParentBackdropItemId, not even an explicit nil
func (o *TimerInfoDto) UnsetParentBackdropItemId() {
	o.ParentBackdropItemId.Unset()
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetParentBackdropImageTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *TimerInfoDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *TimerInfoDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetIsPostPaddingRequired returns the IsPostPaddingRequired field value if set, zero value otherwise.
func (o *TimerInfoDto) GetIsPostPaddingRequired() bool {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPostPaddingRequired
}

// GetIsPostPaddingRequiredOk returns a tuple with the IsPostPaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetIsPostPaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		return nil, false
	}
	return o.IsPostPaddingRequired, true
}

// HasIsPostPaddingRequired returns a boolean if a field has been set.
func (o *TimerInfoDto) HasIsPostPaddingRequired() bool {
	if o != nil && !IsNil(o.IsPostPaddingRequired) {
		return true
	}

	return false
}

// SetIsPostPaddingRequired gets a reference to the given bool and assigns it to the IsPostPaddingRequired field.
func (o *TimerInfoDto) SetIsPostPaddingRequired(v bool) {
	o.IsPostPaddingRequired = &v
}

// GetKeepUntil returns the KeepUntil field value if set, zero value otherwise.
func (o *TimerInfoDto) GetKeepUntil() KeepUntil {
	if o == nil || IsNil(o.KeepUntil) {
		var ret KeepUntil
		return ret
	}
	return *o.KeepUntil
}

// GetKeepUntilOk returns a tuple with the KeepUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetKeepUntilOk() (*KeepUntil, bool) {
	if o == nil || IsNil(o.KeepUntil) {
		return nil, false
	}
	return o.KeepUntil, true
}

// HasKeepUntil returns a boolean if a field has been set.
func (o *TimerInfoDto) HasKeepUntil() bool {
	if o != nil && !IsNil(o.KeepUntil) {
		return true
	}

	return false
}

// SetKeepUntil gets a reference to the given KeepUntil and assigns it to the KeepUntil field.
func (o *TimerInfoDto) SetKeepUntil(v KeepUntil) {
	o.KeepUntil = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TimerInfoDto) GetStatus() RecordingStatus {
	if o == nil || IsNil(o.Status) {
		var ret RecordingStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerInfoDto) GetStatusOk() (*RecordingStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TimerInfoDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given RecordingStatus and assigns it to the Status field.
func (o *TimerInfoDto) SetStatus(v RecordingStatus) {
	o.Status = &v
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId.Get()
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesTimerId.Get(), o.SeriesTimerId.IsSet()
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasSeriesTimerId() bool {
	if o != nil && o.SeriesTimerId.IsSet() {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given NullableString and assigns it to the SeriesTimerId field.
func (o *TimerInfoDto) SetSeriesTimerId(v string) {
	o.SeriesTimerId.Set(&v)
}
// SetSeriesTimerIdNil sets the value for SeriesTimerId to be an explicit nil
func (o *TimerInfoDto) SetSeriesTimerIdNil() {
	o.SeriesTimerId.Set(nil)
}

// UnsetSeriesTimerId ensures that no value is present for SeriesTimerId, not even an explicit nil
func (o *TimerInfoDto) UnsetSeriesTimerId() {
	o.SeriesTimerId.Unset()
}

// GetExternalSeriesTimerId returns the ExternalSeriesTimerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetExternalSeriesTimerId() string {
	if o == nil || IsNil(o.ExternalSeriesTimerId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalSeriesTimerId.Get()
}

// GetExternalSeriesTimerIdOk returns a tuple with the ExternalSeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetExternalSeriesTimerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalSeriesTimerId.Get(), o.ExternalSeriesTimerId.IsSet()
}

// HasExternalSeriesTimerId returns a boolean if a field has been set.
func (o *TimerInfoDto) HasExternalSeriesTimerId() bool {
	if o != nil && o.ExternalSeriesTimerId.IsSet() {
		return true
	}

	return false
}

// SetExternalSeriesTimerId gets a reference to the given NullableString and assigns it to the ExternalSeriesTimerId field.
func (o *TimerInfoDto) SetExternalSeriesTimerId(v string) {
	o.ExternalSeriesTimerId.Set(&v)
}
// SetExternalSeriesTimerIdNil sets the value for ExternalSeriesTimerId to be an explicit nil
func (o *TimerInfoDto) SetExternalSeriesTimerIdNil() {
	o.ExternalSeriesTimerId.Set(nil)
}

// UnsetExternalSeriesTimerId ensures that no value is present for ExternalSeriesTimerId, not even an explicit nil
func (o *TimerInfoDto) UnsetExternalSeriesTimerId() {
	o.ExternalSeriesTimerId.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *TimerInfoDto) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *TimerInfoDto) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *TimerInfoDto) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *TimerInfoDto) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetProgramInfo returns the ProgramInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimerInfoDto) GetProgramInfo() BaseItemDto {
	if o == nil || IsNil(o.ProgramInfo.Get()) {
		var ret BaseItemDto
		return ret
	}
	return *o.ProgramInfo.Get()
}

// GetProgramInfoOk returns a tuple with the ProgramInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimerInfoDto) GetProgramInfoOk() (*BaseItemDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramInfo.Get(), o.ProgramInfo.IsSet()
}

// HasProgramInfo returns a boolean if a field has been set.
func (o *TimerInfoDto) HasProgramInfo() bool {
	if o != nil && o.ProgramInfo.IsSet() {
		return true
	}

	return false
}

// SetProgramInfo gets a reference to the given NullableBaseItemDto and assigns it to the ProgramInfo field.
func (o *TimerInfoDto) SetProgramInfo(v BaseItemDto) {
	o.ProgramInfo.Set(&v)
}
// SetProgramInfoNil sets the value for ProgramInfo to be an explicit nil
func (o *TimerInfoDto) SetProgramInfoNil() {
	o.ProgramInfo.Set(nil)
}

// UnsetProgramInfo ensures that no value is present for ProgramInfo, not even an explicit nil
func (o *TimerInfoDto) UnsetProgramInfo() {
	o.ProgramInfo.Unset()
}

func (o TimerInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimerInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Type.IsSet() {
		toSerialize["Type"] = o.Type.Get()
	}
	if o.ServerId.IsSet() {
		toSerialize["ServerId"] = o.ServerId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["ExternalId"] = o.ExternalId.Get()
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if o.ExternalChannelId.IsSet() {
		toSerialize["ExternalChannelId"] = o.ExternalChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.ChannelPrimaryImageTag.IsSet() {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag.Get()
	}
	if o.ProgramId.IsSet() {
		toSerialize["ProgramId"] = o.ProgramId.Get()
	}
	if o.ExternalProgramId.IsSet() {
		toSerialize["ExternalProgramId"] = o.ExternalProgramId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["Overview"] = o.Overview.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if o.ServiceName.IsSet() {
		toSerialize["ServiceName"] = o.ServiceName.Get()
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.PrePaddingSeconds) {
		toSerialize["PrePaddingSeconds"] = o.PrePaddingSeconds
	}
	if !IsNil(o.PostPaddingSeconds) {
		toSerialize["PostPaddingSeconds"] = o.PostPaddingSeconds
	}
	if !IsNil(o.IsPrePaddingRequired) {
		toSerialize["IsPrePaddingRequired"] = o.IsPrePaddingRequired
	}
	if o.ParentBackdropItemId.IsSet() {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId.Get()
	}
	if o.ParentBackdropImageTags != nil {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if !IsNil(o.IsPostPaddingRequired) {
		toSerialize["IsPostPaddingRequired"] = o.IsPostPaddingRequired
	}
	if !IsNil(o.KeepUntil) {
		toSerialize["KeepUntil"] = o.KeepUntil
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if o.SeriesTimerId.IsSet() {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId.Get()
	}
	if o.ExternalSeriesTimerId.IsSet() {
		toSerialize["ExternalSeriesTimerId"] = o.ExternalSeriesTimerId.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if o.ProgramInfo.IsSet() {
		toSerialize["ProgramInfo"] = o.ProgramInfo.Get()
	}
	return toSerialize, nil
}

type NullableTimerInfoDto struct {
	value *TimerInfoDto
	isSet bool
}

func (v NullableTimerInfoDto) Get() *TimerInfoDto {
	return v.value
}

func (v *NullableTimerInfoDto) Set(val *TimerInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTimerInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTimerInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimerInfoDto(val *TimerInfoDto) *NullableTimerInfoDto {
	return &NullableTimerInfoDto{value: val, isSet: true}
}

func (v NullableTimerInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimerInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


