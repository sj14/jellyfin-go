/*
Jellyfin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 10.10.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SystemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemInfo{}

// SystemInfo Class SystemInfo.
type SystemInfo struct {
	// Gets or sets the local address.
	LocalAddress NullableString `json:"LocalAddress,omitempty"`
	// Gets or sets the name of the server.
	ServerName NullableString `json:"ServerName,omitempty"`
	// Gets or sets the server version.
	Version NullableString `json:"Version,omitempty"`
	// Gets or sets the product name. This is the AssemblyProduct name.
	ProductName NullableString `json:"ProductName,omitempty"`
	// Gets or sets the operating system.
	// Deprecated
	OperatingSystem NullableString `json:"OperatingSystem,omitempty"`
	// Gets or sets the id.
	Id NullableString `json:"Id,omitempty"`
	// Gets or sets a value indicating whether the startup wizard is completed.
	StartupWizardCompleted NullableBool `json:"StartupWizardCompleted,omitempty"`
	// Gets or sets the display name of the operating system.
	// Deprecated
	OperatingSystemDisplayName NullableString `json:"OperatingSystemDisplayName,omitempty"`
	// Gets or sets the package name.
	PackageName NullableString `json:"PackageName,omitempty"`
	// Gets or sets a value indicating whether this instance has pending restart.
	HasPendingRestart *bool `json:"HasPendingRestart,omitempty"`
	IsShuttingDown *bool `json:"IsShuttingDown,omitempty"`
	// Gets or sets a value indicating whether [supports library monitor].
	SupportsLibraryMonitor *bool `json:"SupportsLibraryMonitor,omitempty"`
	// Gets or sets the web socket port number.
	WebSocketPortNumber *int32 `json:"WebSocketPortNumber,omitempty"`
	// Gets or sets the completed installations.
	CompletedInstallations []InstallationInfo `json:"CompletedInstallations,omitempty"`
	// Gets or sets a value indicating whether this instance can self restart.
	// Deprecated
	CanSelfRestart *bool `json:"CanSelfRestart,omitempty"`
	// Deprecated
	CanLaunchWebBrowser *bool `json:"CanLaunchWebBrowser,omitempty"`
	// Gets or sets the program data path.
	ProgramDataPath NullableString `json:"ProgramDataPath,omitempty"`
	// Gets or sets the web UI resources path.
	WebPath NullableString `json:"WebPath,omitempty"`
	// Gets or sets the items by name path.
	ItemsByNamePath NullableString `json:"ItemsByNamePath,omitempty"`
	// Gets or sets the cache path.
	CachePath NullableString `json:"CachePath,omitempty"`
	// Gets or sets the log path.
	LogPath NullableString `json:"LogPath,omitempty"`
	// Gets or sets the internal metadata path.
	InternalMetadataPath NullableString `json:"InternalMetadataPath,omitempty"`
	// Gets or sets the transcode path.
	TranscodingTempPath NullableString `json:"TranscodingTempPath,omitempty"`
	// Gets or sets the list of cast receiver applications.
	CastReceiverApplications []CastReceiverApplication `json:"CastReceiverApplications,omitempty"`
	// Gets or sets a value indicating whether this instance has update available.
	// Deprecated
	HasUpdateAvailable *bool `json:"HasUpdateAvailable,omitempty"`
	// Deprecated
	EncoderLocation NullableString `json:"EncoderLocation,omitempty"`
	// Deprecated
	SystemArchitecture NullableString `json:"SystemArchitecture,omitempty"`
}

// NewSystemInfo instantiates a new SystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInfo() *SystemInfo {
	this := SystemInfo{}
	var canSelfRestart bool = true
	this.CanSelfRestart = &canSelfRestart
	var canLaunchWebBrowser bool = false
	this.CanLaunchWebBrowser = &canLaunchWebBrowser
	var hasUpdateAvailable bool = false
	this.HasUpdateAvailable = &hasUpdateAvailable
	var encoderLocation string = "System"
	this.EncoderLocation = *NewNullableString(&encoderLocation)
	var systemArchitecture string = "X64"
	this.SystemArchitecture = *NewNullableString(&systemArchitecture)
	return &this
}

// NewSystemInfoWithDefaults instantiates a new SystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInfoWithDefaults() *SystemInfo {
	this := SystemInfo{}
	var canSelfRestart bool = true
	this.CanSelfRestart = &canSelfRestart
	var canLaunchWebBrowser bool = false
	this.CanLaunchWebBrowser = &canLaunchWebBrowser
	var hasUpdateAvailable bool = false
	this.HasUpdateAvailable = &hasUpdateAvailable
	var encoderLocation string = "System"
	this.EncoderLocation = *NewNullableString(&encoderLocation)
	var systemArchitecture string = "X64"
	this.SystemArchitecture = *NewNullableString(&systemArchitecture)
	return &this
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetLocalAddress() string {
	if o == nil || IsNil(o.LocalAddress.Get()) {
		var ret string
		return ret
	}
	return *o.LocalAddress.Get()
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetLocalAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalAddress.Get(), o.LocalAddress.IsSet()
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *SystemInfo) HasLocalAddress() bool {
	if o != nil && o.LocalAddress.IsSet() {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given NullableString and assigns it to the LocalAddress field.
func (o *SystemInfo) SetLocalAddress(v string) {
	o.LocalAddress.Set(&v)
}
// SetLocalAddressNil sets the value for LocalAddress to be an explicit nil
func (o *SystemInfo) SetLocalAddressNil() {
	o.LocalAddress.Set(nil)
}

// UnsetLocalAddress ensures that no value is present for LocalAddress, not even an explicit nil
func (o *SystemInfo) UnsetLocalAddress() {
	o.LocalAddress.Unset()
}

// GetServerName returns the ServerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetServerName() string {
	if o == nil || IsNil(o.ServerName.Get()) {
		var ret string
		return ret
	}
	return *o.ServerName.Get()
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerName.Get(), o.ServerName.IsSet()
}

// HasServerName returns a boolean if a field has been set.
func (o *SystemInfo) HasServerName() bool {
	if o != nil && o.ServerName.IsSet() {
		return true
	}

	return false
}

// SetServerName gets a reference to the given NullableString and assigns it to the ServerName field.
func (o *SystemInfo) SetServerName(v string) {
	o.ServerName.Set(&v)
}
// SetServerNameNil sets the value for ServerName to be an explicit nil
func (o *SystemInfo) SetServerNameNil() {
	o.ServerName.Set(nil)
}

// UnsetServerName ensures that no value is present for ServerName, not even an explicit nil
func (o *SystemInfo) UnsetServerName() {
	o.ServerName.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *SystemInfo) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *SystemInfo) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *SystemInfo) UnsetVersion() {
	o.Version.Unset()
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *SystemInfo) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *SystemInfo) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *SystemInfo) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *SystemInfo) UnsetProductName() {
	o.ProductName.Unset()
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SystemInfo) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem.Get()) {
		var ret string
		return ret
	}
	return *o.OperatingSystem.Get()
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SystemInfo) GetOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperatingSystem.Get(), o.OperatingSystem.IsSet()
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *SystemInfo) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given NullableString and assigns it to the OperatingSystem field.
// Deprecated
func (o *SystemInfo) SetOperatingSystem(v string) {
	o.OperatingSystem.Set(&v)
}
// SetOperatingSystemNil sets the value for OperatingSystem to be an explicit nil
func (o *SystemInfo) SetOperatingSystemNil() {
	o.OperatingSystem.Set(nil)
}

// UnsetOperatingSystem ensures that no value is present for OperatingSystem, not even an explicit nil
func (o *SystemInfo) UnsetOperatingSystem() {
	o.OperatingSystem.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SystemInfo) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SystemInfo) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SystemInfo) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SystemInfo) UnsetId() {
	o.Id.Unset()
}

// GetStartupWizardCompleted returns the StartupWizardCompleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetStartupWizardCompleted() bool {
	if o == nil || IsNil(o.StartupWizardCompleted.Get()) {
		var ret bool
		return ret
	}
	return *o.StartupWizardCompleted.Get()
}

// GetStartupWizardCompletedOk returns a tuple with the StartupWizardCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetStartupWizardCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartupWizardCompleted.Get(), o.StartupWizardCompleted.IsSet()
}

// HasStartupWizardCompleted returns a boolean if a field has been set.
func (o *SystemInfo) HasStartupWizardCompleted() bool {
	if o != nil && o.StartupWizardCompleted.IsSet() {
		return true
	}

	return false
}

// SetStartupWizardCompleted gets a reference to the given NullableBool and assigns it to the StartupWizardCompleted field.
func (o *SystemInfo) SetStartupWizardCompleted(v bool) {
	o.StartupWizardCompleted.Set(&v)
}
// SetStartupWizardCompletedNil sets the value for StartupWizardCompleted to be an explicit nil
func (o *SystemInfo) SetStartupWizardCompletedNil() {
	o.StartupWizardCompleted.Set(nil)
}

// UnsetStartupWizardCompleted ensures that no value is present for StartupWizardCompleted, not even an explicit nil
func (o *SystemInfo) UnsetStartupWizardCompleted() {
	o.StartupWizardCompleted.Unset()
}

// GetOperatingSystemDisplayName returns the OperatingSystemDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SystemInfo) GetOperatingSystemDisplayName() string {
	if o == nil || IsNil(o.OperatingSystemDisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.OperatingSystemDisplayName.Get()
}

// GetOperatingSystemDisplayNameOk returns a tuple with the OperatingSystemDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SystemInfo) GetOperatingSystemDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperatingSystemDisplayName.Get(), o.OperatingSystemDisplayName.IsSet()
}

// HasOperatingSystemDisplayName returns a boolean if a field has been set.
func (o *SystemInfo) HasOperatingSystemDisplayName() bool {
	if o != nil && o.OperatingSystemDisplayName.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystemDisplayName gets a reference to the given NullableString and assigns it to the OperatingSystemDisplayName field.
// Deprecated
func (o *SystemInfo) SetOperatingSystemDisplayName(v string) {
	o.OperatingSystemDisplayName.Set(&v)
}
// SetOperatingSystemDisplayNameNil sets the value for OperatingSystemDisplayName to be an explicit nil
func (o *SystemInfo) SetOperatingSystemDisplayNameNil() {
	o.OperatingSystemDisplayName.Set(nil)
}

// UnsetOperatingSystemDisplayName ensures that no value is present for OperatingSystemDisplayName, not even an explicit nil
func (o *SystemInfo) UnsetOperatingSystemDisplayName() {
	o.OperatingSystemDisplayName.Unset()
}

// GetPackageName returns the PackageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetPackageName() string {
	if o == nil || IsNil(o.PackageName.Get()) {
		var ret string
		return ret
	}
	return *o.PackageName.Get()
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetPackageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageName.Get(), o.PackageName.IsSet()
}

// HasPackageName returns a boolean if a field has been set.
func (o *SystemInfo) HasPackageName() bool {
	if o != nil && o.PackageName.IsSet() {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given NullableString and assigns it to the PackageName field.
func (o *SystemInfo) SetPackageName(v string) {
	o.PackageName.Set(&v)
}
// SetPackageNameNil sets the value for PackageName to be an explicit nil
func (o *SystemInfo) SetPackageNameNil() {
	o.PackageName.Set(nil)
}

// UnsetPackageName ensures that no value is present for PackageName, not even an explicit nil
func (o *SystemInfo) UnsetPackageName() {
	o.PackageName.Unset()
}

// GetHasPendingRestart returns the HasPendingRestart field value if set, zero value otherwise.
func (o *SystemInfo) GetHasPendingRestart() bool {
	if o == nil || IsNil(o.HasPendingRestart) {
		var ret bool
		return ret
	}
	return *o.HasPendingRestart
}

// GetHasPendingRestartOk returns a tuple with the HasPendingRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetHasPendingRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPendingRestart) {
		return nil, false
	}
	return o.HasPendingRestart, true
}

// HasHasPendingRestart returns a boolean if a field has been set.
func (o *SystemInfo) HasHasPendingRestart() bool {
	if o != nil && !IsNil(o.HasPendingRestart) {
		return true
	}

	return false
}

// SetHasPendingRestart gets a reference to the given bool and assigns it to the HasPendingRestart field.
func (o *SystemInfo) SetHasPendingRestart(v bool) {
	o.HasPendingRestart = &v
}

// GetIsShuttingDown returns the IsShuttingDown field value if set, zero value otherwise.
func (o *SystemInfo) GetIsShuttingDown() bool {
	if o == nil || IsNil(o.IsShuttingDown) {
		var ret bool
		return ret
	}
	return *o.IsShuttingDown
}

// GetIsShuttingDownOk returns a tuple with the IsShuttingDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetIsShuttingDownOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShuttingDown) {
		return nil, false
	}
	return o.IsShuttingDown, true
}

// HasIsShuttingDown returns a boolean if a field has been set.
func (o *SystemInfo) HasIsShuttingDown() bool {
	if o != nil && !IsNil(o.IsShuttingDown) {
		return true
	}

	return false
}

// SetIsShuttingDown gets a reference to the given bool and assigns it to the IsShuttingDown field.
func (o *SystemInfo) SetIsShuttingDown(v bool) {
	o.IsShuttingDown = &v
}

// GetSupportsLibraryMonitor returns the SupportsLibraryMonitor field value if set, zero value otherwise.
func (o *SystemInfo) GetSupportsLibraryMonitor() bool {
	if o == nil || IsNil(o.SupportsLibraryMonitor) {
		var ret bool
		return ret
	}
	return *o.SupportsLibraryMonitor
}

// GetSupportsLibraryMonitorOk returns a tuple with the SupportsLibraryMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSupportsLibraryMonitorOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsLibraryMonitor) {
		return nil, false
	}
	return o.SupportsLibraryMonitor, true
}

// HasSupportsLibraryMonitor returns a boolean if a field has been set.
func (o *SystemInfo) HasSupportsLibraryMonitor() bool {
	if o != nil && !IsNil(o.SupportsLibraryMonitor) {
		return true
	}

	return false
}

// SetSupportsLibraryMonitor gets a reference to the given bool and assigns it to the SupportsLibraryMonitor field.
func (o *SystemInfo) SetSupportsLibraryMonitor(v bool) {
	o.SupportsLibraryMonitor = &v
}

// GetWebSocketPortNumber returns the WebSocketPortNumber field value if set, zero value otherwise.
func (o *SystemInfo) GetWebSocketPortNumber() int32 {
	if o == nil || IsNil(o.WebSocketPortNumber) {
		var ret int32
		return ret
	}
	return *o.WebSocketPortNumber
}

// GetWebSocketPortNumberOk returns a tuple with the WebSocketPortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetWebSocketPortNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.WebSocketPortNumber) {
		return nil, false
	}
	return o.WebSocketPortNumber, true
}

// HasWebSocketPortNumber returns a boolean if a field has been set.
func (o *SystemInfo) HasWebSocketPortNumber() bool {
	if o != nil && !IsNil(o.WebSocketPortNumber) {
		return true
	}

	return false
}

// SetWebSocketPortNumber gets a reference to the given int32 and assigns it to the WebSocketPortNumber field.
func (o *SystemInfo) SetWebSocketPortNumber(v int32) {
	o.WebSocketPortNumber = &v
}

// GetCompletedInstallations returns the CompletedInstallations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetCompletedInstallations() []InstallationInfo {
	if o == nil {
		var ret []InstallationInfo
		return ret
	}
	return o.CompletedInstallations
}

// GetCompletedInstallationsOk returns a tuple with the CompletedInstallations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetCompletedInstallationsOk() ([]InstallationInfo, bool) {
	if o == nil || IsNil(o.CompletedInstallations) {
		return nil, false
	}
	return o.CompletedInstallations, true
}

// HasCompletedInstallations returns a boolean if a field has been set.
func (o *SystemInfo) HasCompletedInstallations() bool {
	if o != nil && !IsNil(o.CompletedInstallations) {
		return true
	}

	return false
}

// SetCompletedInstallations gets a reference to the given []InstallationInfo and assigns it to the CompletedInstallations field.
func (o *SystemInfo) SetCompletedInstallations(v []InstallationInfo) {
	o.CompletedInstallations = v
}

// GetCanSelfRestart returns the CanSelfRestart field value if set, zero value otherwise.
// Deprecated
func (o *SystemInfo) GetCanSelfRestart() bool {
	if o == nil || IsNil(o.CanSelfRestart) {
		var ret bool
		return ret
	}
	return *o.CanSelfRestart
}

// GetCanSelfRestartOk returns a tuple with the CanSelfRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemInfo) GetCanSelfRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.CanSelfRestart) {
		return nil, false
	}
	return o.CanSelfRestart, true
}

// HasCanSelfRestart returns a boolean if a field has been set.
func (o *SystemInfo) HasCanSelfRestart() bool {
	if o != nil && !IsNil(o.CanSelfRestart) {
		return true
	}

	return false
}

// SetCanSelfRestart gets a reference to the given bool and assigns it to the CanSelfRestart field.
// Deprecated
func (o *SystemInfo) SetCanSelfRestart(v bool) {
	o.CanSelfRestart = &v
}

// GetCanLaunchWebBrowser returns the CanLaunchWebBrowser field value if set, zero value otherwise.
// Deprecated
func (o *SystemInfo) GetCanLaunchWebBrowser() bool {
	if o == nil || IsNil(o.CanLaunchWebBrowser) {
		var ret bool
		return ret
	}
	return *o.CanLaunchWebBrowser
}

// GetCanLaunchWebBrowserOk returns a tuple with the CanLaunchWebBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemInfo) GetCanLaunchWebBrowserOk() (*bool, bool) {
	if o == nil || IsNil(o.CanLaunchWebBrowser) {
		return nil, false
	}
	return o.CanLaunchWebBrowser, true
}

// HasCanLaunchWebBrowser returns a boolean if a field has been set.
func (o *SystemInfo) HasCanLaunchWebBrowser() bool {
	if o != nil && !IsNil(o.CanLaunchWebBrowser) {
		return true
	}

	return false
}

// SetCanLaunchWebBrowser gets a reference to the given bool and assigns it to the CanLaunchWebBrowser field.
// Deprecated
func (o *SystemInfo) SetCanLaunchWebBrowser(v bool) {
	o.CanLaunchWebBrowser = &v
}

// GetProgramDataPath returns the ProgramDataPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetProgramDataPath() string {
	if o == nil || IsNil(o.ProgramDataPath.Get()) {
		var ret string
		return ret
	}
	return *o.ProgramDataPath.Get()
}

// GetProgramDataPathOk returns a tuple with the ProgramDataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetProgramDataPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgramDataPath.Get(), o.ProgramDataPath.IsSet()
}

// HasProgramDataPath returns a boolean if a field has been set.
func (o *SystemInfo) HasProgramDataPath() bool {
	if o != nil && o.ProgramDataPath.IsSet() {
		return true
	}

	return false
}

// SetProgramDataPath gets a reference to the given NullableString and assigns it to the ProgramDataPath field.
func (o *SystemInfo) SetProgramDataPath(v string) {
	o.ProgramDataPath.Set(&v)
}
// SetProgramDataPathNil sets the value for ProgramDataPath to be an explicit nil
func (o *SystemInfo) SetProgramDataPathNil() {
	o.ProgramDataPath.Set(nil)
}

// UnsetProgramDataPath ensures that no value is present for ProgramDataPath, not even an explicit nil
func (o *SystemInfo) UnsetProgramDataPath() {
	o.ProgramDataPath.Unset()
}

// GetWebPath returns the WebPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetWebPath() string {
	if o == nil || IsNil(o.WebPath.Get()) {
		var ret string
		return ret
	}
	return *o.WebPath.Get()
}

// GetWebPathOk returns a tuple with the WebPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetWebPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebPath.Get(), o.WebPath.IsSet()
}

// HasWebPath returns a boolean if a field has been set.
func (o *SystemInfo) HasWebPath() bool {
	if o != nil && o.WebPath.IsSet() {
		return true
	}

	return false
}

// SetWebPath gets a reference to the given NullableString and assigns it to the WebPath field.
func (o *SystemInfo) SetWebPath(v string) {
	o.WebPath.Set(&v)
}
// SetWebPathNil sets the value for WebPath to be an explicit nil
func (o *SystemInfo) SetWebPathNil() {
	o.WebPath.Set(nil)
}

// UnsetWebPath ensures that no value is present for WebPath, not even an explicit nil
func (o *SystemInfo) UnsetWebPath() {
	o.WebPath.Unset()
}

// GetItemsByNamePath returns the ItemsByNamePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetItemsByNamePath() string {
	if o == nil || IsNil(o.ItemsByNamePath.Get()) {
		var ret string
		return ret
	}
	return *o.ItemsByNamePath.Get()
}

// GetItemsByNamePathOk returns a tuple with the ItemsByNamePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetItemsByNamePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemsByNamePath.Get(), o.ItemsByNamePath.IsSet()
}

// HasItemsByNamePath returns a boolean if a field has been set.
func (o *SystemInfo) HasItemsByNamePath() bool {
	if o != nil && o.ItemsByNamePath.IsSet() {
		return true
	}

	return false
}

// SetItemsByNamePath gets a reference to the given NullableString and assigns it to the ItemsByNamePath field.
func (o *SystemInfo) SetItemsByNamePath(v string) {
	o.ItemsByNamePath.Set(&v)
}
// SetItemsByNamePathNil sets the value for ItemsByNamePath to be an explicit nil
func (o *SystemInfo) SetItemsByNamePathNil() {
	o.ItemsByNamePath.Set(nil)
}

// UnsetItemsByNamePath ensures that no value is present for ItemsByNamePath, not even an explicit nil
func (o *SystemInfo) UnsetItemsByNamePath() {
	o.ItemsByNamePath.Unset()
}

// GetCachePath returns the CachePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetCachePath() string {
	if o == nil || IsNil(o.CachePath.Get()) {
		var ret string
		return ret
	}
	return *o.CachePath.Get()
}

// GetCachePathOk returns a tuple with the CachePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetCachePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CachePath.Get(), o.CachePath.IsSet()
}

// HasCachePath returns a boolean if a field has been set.
func (o *SystemInfo) HasCachePath() bool {
	if o != nil && o.CachePath.IsSet() {
		return true
	}

	return false
}

// SetCachePath gets a reference to the given NullableString and assigns it to the CachePath field.
func (o *SystemInfo) SetCachePath(v string) {
	o.CachePath.Set(&v)
}
// SetCachePathNil sets the value for CachePath to be an explicit nil
func (o *SystemInfo) SetCachePathNil() {
	o.CachePath.Set(nil)
}

// UnsetCachePath ensures that no value is present for CachePath, not even an explicit nil
func (o *SystemInfo) UnsetCachePath() {
	o.CachePath.Unset()
}

// GetLogPath returns the LogPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetLogPath() string {
	if o == nil || IsNil(o.LogPath.Get()) {
		var ret string
		return ret
	}
	return *o.LogPath.Get()
}

// GetLogPathOk returns a tuple with the LogPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetLogPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogPath.Get(), o.LogPath.IsSet()
}

// HasLogPath returns a boolean if a field has been set.
func (o *SystemInfo) HasLogPath() bool {
	if o != nil && o.LogPath.IsSet() {
		return true
	}

	return false
}

// SetLogPath gets a reference to the given NullableString and assigns it to the LogPath field.
func (o *SystemInfo) SetLogPath(v string) {
	o.LogPath.Set(&v)
}
// SetLogPathNil sets the value for LogPath to be an explicit nil
func (o *SystemInfo) SetLogPathNil() {
	o.LogPath.Set(nil)
}

// UnsetLogPath ensures that no value is present for LogPath, not even an explicit nil
func (o *SystemInfo) UnsetLogPath() {
	o.LogPath.Unset()
}

// GetInternalMetadataPath returns the InternalMetadataPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetInternalMetadataPath() string {
	if o == nil || IsNil(o.InternalMetadataPath.Get()) {
		var ret string
		return ret
	}
	return *o.InternalMetadataPath.Get()
}

// GetInternalMetadataPathOk returns a tuple with the InternalMetadataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetInternalMetadataPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalMetadataPath.Get(), o.InternalMetadataPath.IsSet()
}

// HasInternalMetadataPath returns a boolean if a field has been set.
func (o *SystemInfo) HasInternalMetadataPath() bool {
	if o != nil && o.InternalMetadataPath.IsSet() {
		return true
	}

	return false
}

// SetInternalMetadataPath gets a reference to the given NullableString and assigns it to the InternalMetadataPath field.
func (o *SystemInfo) SetInternalMetadataPath(v string) {
	o.InternalMetadataPath.Set(&v)
}
// SetInternalMetadataPathNil sets the value for InternalMetadataPath to be an explicit nil
func (o *SystemInfo) SetInternalMetadataPathNil() {
	o.InternalMetadataPath.Set(nil)
}

// UnsetInternalMetadataPath ensures that no value is present for InternalMetadataPath, not even an explicit nil
func (o *SystemInfo) UnsetInternalMetadataPath() {
	o.InternalMetadataPath.Unset()
}

// GetTranscodingTempPath returns the TranscodingTempPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetTranscodingTempPath() string {
	if o == nil || IsNil(o.TranscodingTempPath.Get()) {
		var ret string
		return ret
	}
	return *o.TranscodingTempPath.Get()
}

// GetTranscodingTempPathOk returns a tuple with the TranscodingTempPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetTranscodingTempPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TranscodingTempPath.Get(), o.TranscodingTempPath.IsSet()
}

// HasTranscodingTempPath returns a boolean if a field has been set.
func (o *SystemInfo) HasTranscodingTempPath() bool {
	if o != nil && o.TranscodingTempPath.IsSet() {
		return true
	}

	return false
}

// SetTranscodingTempPath gets a reference to the given NullableString and assigns it to the TranscodingTempPath field.
func (o *SystemInfo) SetTranscodingTempPath(v string) {
	o.TranscodingTempPath.Set(&v)
}
// SetTranscodingTempPathNil sets the value for TranscodingTempPath to be an explicit nil
func (o *SystemInfo) SetTranscodingTempPathNil() {
	o.TranscodingTempPath.Set(nil)
}

// UnsetTranscodingTempPath ensures that no value is present for TranscodingTempPath, not even an explicit nil
func (o *SystemInfo) UnsetTranscodingTempPath() {
	o.TranscodingTempPath.Unset()
}

// GetCastReceiverApplications returns the CastReceiverApplications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetCastReceiverApplications() []CastReceiverApplication {
	if o == nil {
		var ret []CastReceiverApplication
		return ret
	}
	return o.CastReceiverApplications
}

// GetCastReceiverApplicationsOk returns a tuple with the CastReceiverApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetCastReceiverApplicationsOk() ([]CastReceiverApplication, bool) {
	if o == nil || IsNil(o.CastReceiverApplications) {
		return nil, false
	}
	return o.CastReceiverApplications, true
}

// HasCastReceiverApplications returns a boolean if a field has been set.
func (o *SystemInfo) HasCastReceiverApplications() bool {
	if o != nil && !IsNil(o.CastReceiverApplications) {
		return true
	}

	return false
}

// SetCastReceiverApplications gets a reference to the given []CastReceiverApplication and assigns it to the CastReceiverApplications field.
func (o *SystemInfo) SetCastReceiverApplications(v []CastReceiverApplication) {
	o.CastReceiverApplications = v
}

// GetHasUpdateAvailable returns the HasUpdateAvailable field value if set, zero value otherwise.
// Deprecated
func (o *SystemInfo) GetHasUpdateAvailable() bool {
	if o == nil || IsNil(o.HasUpdateAvailable) {
		var ret bool
		return ret
	}
	return *o.HasUpdateAvailable
}

// GetHasUpdateAvailableOk returns a tuple with the HasUpdateAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemInfo) GetHasUpdateAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUpdateAvailable) {
		return nil, false
	}
	return o.HasUpdateAvailable, true
}

// HasHasUpdateAvailable returns a boolean if a field has been set.
func (o *SystemInfo) HasHasUpdateAvailable() bool {
	if o != nil && !IsNil(o.HasUpdateAvailable) {
		return true
	}

	return false
}

// SetHasUpdateAvailable gets a reference to the given bool and assigns it to the HasUpdateAvailable field.
// Deprecated
func (o *SystemInfo) SetHasUpdateAvailable(v bool) {
	o.HasUpdateAvailable = &v
}

// GetEncoderLocation returns the EncoderLocation field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SystemInfo) GetEncoderLocation() string {
	if o == nil || IsNil(o.EncoderLocation.Get()) {
		var ret string
		return ret
	}
	return *o.EncoderLocation.Get()
}

// GetEncoderLocationOk returns a tuple with the EncoderLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SystemInfo) GetEncoderLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncoderLocation.Get(), o.EncoderLocation.IsSet()
}

// HasEncoderLocation returns a boolean if a field has been set.
func (o *SystemInfo) HasEncoderLocation() bool {
	if o != nil && o.EncoderLocation.IsSet() {
		return true
	}

	return false
}

// SetEncoderLocation gets a reference to the given NullableString and assigns it to the EncoderLocation field.
// Deprecated
func (o *SystemInfo) SetEncoderLocation(v string) {
	o.EncoderLocation.Set(&v)
}
// SetEncoderLocationNil sets the value for EncoderLocation to be an explicit nil
func (o *SystemInfo) SetEncoderLocationNil() {
	o.EncoderLocation.Set(nil)
}

// UnsetEncoderLocation ensures that no value is present for EncoderLocation, not even an explicit nil
func (o *SystemInfo) UnsetEncoderLocation() {
	o.EncoderLocation.Unset()
}

// GetSystemArchitecture returns the SystemArchitecture field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SystemInfo) GetSystemArchitecture() string {
	if o == nil || IsNil(o.SystemArchitecture.Get()) {
		var ret string
		return ret
	}
	return *o.SystemArchitecture.Get()
}

// GetSystemArchitectureOk returns a tuple with the SystemArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SystemInfo) GetSystemArchitectureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SystemArchitecture.Get(), o.SystemArchitecture.IsSet()
}

// HasSystemArchitecture returns a boolean if a field has been set.
func (o *SystemInfo) HasSystemArchitecture() bool {
	if o != nil && o.SystemArchitecture.IsSet() {
		return true
	}

	return false
}

// SetSystemArchitecture gets a reference to the given NullableString and assigns it to the SystemArchitecture field.
// Deprecated
func (o *SystemInfo) SetSystemArchitecture(v string) {
	o.SystemArchitecture.Set(&v)
}
// SetSystemArchitectureNil sets the value for SystemArchitecture to be an explicit nil
func (o *SystemInfo) SetSystemArchitectureNil() {
	o.SystemArchitecture.Set(nil)
}

// UnsetSystemArchitecture ensures that no value is present for SystemArchitecture, not even an explicit nil
func (o *SystemInfo) UnsetSystemArchitecture() {
	o.SystemArchitecture.Unset()
}

func (o SystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalAddress.IsSet() {
		toSerialize["LocalAddress"] = o.LocalAddress.Get()
	}
	if o.ServerName.IsSet() {
		toSerialize["ServerName"] = o.ServerName.Get()
	}
	if o.Version.IsSet() {
		toSerialize["Version"] = o.Version.Get()
	}
	if o.ProductName.IsSet() {
		toSerialize["ProductName"] = o.ProductName.Get()
	}
	if o.OperatingSystem.IsSet() {
		toSerialize["OperatingSystem"] = o.OperatingSystem.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.StartupWizardCompleted.IsSet() {
		toSerialize["StartupWizardCompleted"] = o.StartupWizardCompleted.Get()
	}
	if o.OperatingSystemDisplayName.IsSet() {
		toSerialize["OperatingSystemDisplayName"] = o.OperatingSystemDisplayName.Get()
	}
	if o.PackageName.IsSet() {
		toSerialize["PackageName"] = o.PackageName.Get()
	}
	if !IsNil(o.HasPendingRestart) {
		toSerialize["HasPendingRestart"] = o.HasPendingRestart
	}
	if !IsNil(o.IsShuttingDown) {
		toSerialize["IsShuttingDown"] = o.IsShuttingDown
	}
	if !IsNil(o.SupportsLibraryMonitor) {
		toSerialize["SupportsLibraryMonitor"] = o.SupportsLibraryMonitor
	}
	if !IsNil(o.WebSocketPortNumber) {
		toSerialize["WebSocketPortNumber"] = o.WebSocketPortNumber
	}
	if o.CompletedInstallations != nil {
		toSerialize["CompletedInstallations"] = o.CompletedInstallations
	}
	if !IsNil(o.CanSelfRestart) {
		toSerialize["CanSelfRestart"] = o.CanSelfRestart
	}
	if !IsNil(o.CanLaunchWebBrowser) {
		toSerialize["CanLaunchWebBrowser"] = o.CanLaunchWebBrowser
	}
	if o.ProgramDataPath.IsSet() {
		toSerialize["ProgramDataPath"] = o.ProgramDataPath.Get()
	}
	if o.WebPath.IsSet() {
		toSerialize["WebPath"] = o.WebPath.Get()
	}
	if o.ItemsByNamePath.IsSet() {
		toSerialize["ItemsByNamePath"] = o.ItemsByNamePath.Get()
	}
	if o.CachePath.IsSet() {
		toSerialize["CachePath"] = o.CachePath.Get()
	}
	if o.LogPath.IsSet() {
		toSerialize["LogPath"] = o.LogPath.Get()
	}
	if o.InternalMetadataPath.IsSet() {
		toSerialize["InternalMetadataPath"] = o.InternalMetadataPath.Get()
	}
	if o.TranscodingTempPath.IsSet() {
		toSerialize["TranscodingTempPath"] = o.TranscodingTempPath.Get()
	}
	if o.CastReceiverApplications != nil {
		toSerialize["CastReceiverApplications"] = o.CastReceiverApplications
	}
	if !IsNil(o.HasUpdateAvailable) {
		toSerialize["HasUpdateAvailable"] = o.HasUpdateAvailable
	}
	if o.EncoderLocation.IsSet() {
		toSerialize["EncoderLocation"] = o.EncoderLocation.Get()
	}
	if o.SystemArchitecture.IsSet() {
		toSerialize["SystemArchitecture"] = o.SystemArchitecture.Get()
	}
	return toSerialize, nil
}

type NullableSystemInfo struct {
	value *SystemInfo
	isSet bool
}

func (v NullableSystemInfo) Get() *SystemInfo {
	return v.value
}

func (v *NullableSystemInfo) Set(val *SystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInfo(val *SystemInfo) *NullableSystemInfo {
	return &NullableSystemInfo{value: val, isSet: true}
}

func (v NullableSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


